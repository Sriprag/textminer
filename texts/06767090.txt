1998

IEEE TRANSACTIONS ON BIOMEDICAL ENGINEERING, VOL. 61, NO. 7, JULY 2014

Which Spring is the Best?
Comparison of Methods for Virtual Stenting
Katerina Spranger∗ and Yiannis Ventikos

Abstract—This paper presents a methodology for modeling the
deployment of implantable devices used in minimally invasive vascular interventions. Motivated by the clinical need to perform
preinterventional rehearsals of a stent deployment, we have developed methods enabling virtual device placement inside arteries,
under the constraint of real-time application. This requirement of
rapid execution narrowed down the search for a suitable method
to the concept of a dynamic mesh. Inspired by the idea of a mesh of
springs, we have found a novel way to apply it to stent modeling.
The experiments conducted in this paper investigate properties of
the stent models based on three different spring types: lineal, semitorsional, and torsional springs. Furthermore, this paper compares
the results of various deployment scenarios for two different classes
of devices: a stent graft and a flow diverter. The presented results
can be of a high-potential clinical value, enabling the predictive
evaluation of the outcome of a stent deployment treatment.
Index Terms—Flow diverter, modeling, stent, virtual stenting.

I. INTRODUCTION
INIMALLY invasive vascular interventions have become a popular alternative to conventional open surgery
in the treatment of many vascular disorders, such as aneurysms,
aortic dissections, and atherosclerotic stenoses [1], [2]. Minimally invasive endovascular repair is performed through small
incisions, usually made in the femoral artery, from where a
prosthesis or stent1 is pushed to a target location, under fluoroscopic guidance and using a catheter, where it is subsequently
deployed inside the diseased vessel. Compared to open surgery,
endovascular repair leads to better treatment outcomes, including less complications, less blood loss, shorter surgery times,
and hospital stays, etc., mainly attributed to its minimally invasive nature [3]–[5].
However, the high initial success rates of endovascular repairs
have been shadowed by reported complications, for example,

M

Manuscript received October 10, 2013; revised January 20, 2014; accepted
March 3, 2014. Date of publication March 14, 2014; date of current version June
14, 2014. The work of Katerina Spranger was supported by the Centenary Year
Graduate Scholarship, Dept. of Engineering Science, University of Oxford. The
work of Yiannis Ventikos was supported by the Wellcome Trust/EPSRC, Centre
of Excellence in Personalized Healthcare, under Grant WT 088877/Z/09/Z.
Asterisk indicates corresponding author.
∗ K. Spranger is with the Department of Engineering Science, University of
Oxford, Oxford, OX1 2JD, U.K. (e-mail: katerina.spranger@eng.ox.ac.uk).
Y. Ventikos is with the Department of Mechanical Engineering, University
College London, London, WC1E 6BT, U.K. (e-mail: y.ventikos@ucl.ac.uk).
Color versions of one or more of the figures in this paper are available online
at http://ieeexplore.ieee.org.
Digital Object Identifier 10.1109/TBME.2014.2311856
1 “Stent” will be used to denote stent grafts and flow diverters, for brevity.

stroke, thromboembolism, and luminal restenosis, that cause
reinterventions and, in the worst case, morbidity and mortality [6], [7]. Similarly, endovascular repair of cerebral aneurysms
can sometimes provoke an occasional hemorrhagic event that
follows an initially successful treatment. In approximately 1% of
cases, the subsequent rupture of the treated cerebral aneurysms
is reported between a few days and 3–4 months after the treatment [5]. With respect to stroke, the new rate of 6% has been
recently established by the “Pipeline Embolization Device in the
Intracranial Treatment of Aneurysms (PITA)” trial [8], which
is unacceptably high and could threaten the general use of flow
diverters (FDs) in the future.
It is known that a number of factors play an important role in
the outcome of the stent deployment procedure; the key players
being the target vessel’s geometry and hemodynamics, design
and the placement position of the implant, incidence of an arterial injury during the intervention, etc. [9]. For example, it
has been reported that neointimal hyperplasia can initiate from
arterial injury during the procedure and cause significant stenosis [10]. In general, vessel remodeling can play an important part
in these processes [11]. Additionally, several studies have suggested that injuries can also occur after the intervention, caused
by the nonuniform expansion of the device or its excessive axial
contraction [9]. On the other hand, incomplete contact between
the stent-filaments and the arterial wall can increase the risk of
intimal hyperplasia [12], and stent underexpansion can lead to
in-stent thrombosis [13].
The dangerous complications caused by arterial injury and inadequate device apposition could be mitigated by better choice
of the stent design [14] and by the appropriate positioning of the
implant inside the vessel [15], [16]. However, there is currently
no possibility for a clinician to predict the resulting position
and the expanded shape of the device for a given patient before
the intervention in a clinical setting. Moreover, knowing the accurate configuration of the device, its attachment to the vessel
wall, especially the level of covering of the aneurysmal neck
or dissection’s entries, would enable the subsequent study of
the postinterventional alterations in the hemodynamic environment of the vessel. Subsequent hemodynamic analysis [17] can
provide early indications for such complications as stent graft
(SG) migration, endoleakage [18], endotension [19], thrombus
formation, etc.
Although there have been numerous attempts to study the
process of stent deployment computationally, they all feature
considerable limitations when judged upon their suitability for
clinical practice. The approaches reported in the literature can be
roughly divided into finite-element analysis (FEA) methods and
fast virtual stenting techniques. With respect to FEA methods,

This work is licensed under a Creative Commons Attribution 3.0 License. For more information, see http://creativecommons.org/licenses/by/3.0/

SPRANGER AND VENTIKOS: WHICH SPRING IS THE BEST? COMPARISON OF METHODS FOR VIRTUAL STENTING

there has been a lot of work carried out to analyze the mechanical
behavior of stents as well as simulating their implantation. The
themes range from studies on the expansion mechanisms [20], to
deployment of the device within patient-specific anatomies [21],
interactions with the vessel wall [22], and implications on the
local hemodynamics [23]. Although highly accurate, these FEA
models were not aimed for usage in clinical practice on a day-today basis, where the speed of computations becomes a crucial
factor.
In contrast to FEA studies, the second category of the fast
virtual methods feature severe simplifications in crucial aspects
of the process. Literature survey has revealed only three approaches to stent deployment simulations that aim at evaluating
different stent and release scenarios on a patient-specific, clinically relevant basis. In the methodology proposed in [24], the
model is initiated by placing a cylinder along the centerline of
a vessel and then deforming it to follow the centerline curvature. Such mapping of the stent geometry as a texture over a
cylinder may have implications on the accuracy of stent configurations, especially in regions of high curvature of the vessel.
Another study, [25], models a stent as a deforming cylinder,
which is first positioned inside the vessel and thereafter serves
as a basis for the reconstruction of the struts’ configuration.
Similar to the previous approach, this method merely deforms
a generic cylindrical structure and does not sufficiently account
for the geometrical properties and the design of the device, and
its interaction with the vessel. The third method, [26], explicitly
models the stent design by capturing the design elements as soft
constrains; however, complex vessel geometries challenge the
accuracy of this computational method.
Motivated by clinical need and lack of suitable methods, this
study aims at developing a methodology for modeling the virtual
deployment of implantable devices inside patients’ vessels that
features fast computational times and can be used in the clinical
practice. Ultimately, such a capability can play a transformative
role in aiding clinical decision making in intravascular interventions on a personalized basis and also give rise to overall
improvements in the implant design and deployment procedure.
We will target interventions performed under radiological guidance both in the abdominal and intracranial areas. Hence, the
methodology should be general enough to be able to include
a broad range of devices, such as SGs and FDs. With this in
mind, we have narrowed down the investigated computational
techniques to those that are both sufficiently generic and computationally inexpensive.
Our attention was drawn to the class of methods called deformable models that are widely used in many engineering applications [27]. One version particularly suitable for medical
applications is called the elastic analogy, where a deforming
body is viewed as an elastic structure, whose deformation is
then guided by elastic forces. The elastic analogy in its discrete
version is sometimes referred to as the spring analogy; here,
mesh edges are treated as artificial springs generating springs’
forces, and deformations are governed by the condition of static
equilibrium [28]. In the literature, these approaches are often
subsumed under the category of the dynamic mesh algorithms

1999

Fig. 1. Reconstruction of stents. (a) Gore TAG thoracic endoprosthesis in the
load-free and partially expanded configuration (image from [29]). (b) Computational representation of the SG (4 cm×10 cm). (c) PED from ev3, Irvine, CA,
USA (image from [30]). (d) Reconstructed 3-D struts mesh representing the
PED (3 mm×14 mm).

and are of a great relevance due to their simplicity of implementation and relatively low computational complexity.
In this paper, we investigate the suitability of the dynamic
mesh approaches to the stent deployment problem and report
the results of comparison of three different springs analogy
methods. We start by describing the overall methodology (see
Section II) involved in the virtual stent deployment. This section includes the preprocessing of the devices and vessels data as
well as the modeling of the expansion process. The three springs
analogy methods investigated are 1) the lineal, 2) semitorsional,
and 3) torsional springs, in order of increasing complexity. Their
results are compared for two different types of devices: a SG and
a FD, representing the most widely used classes of endovascular
implants (see Section III). The comparison is performed on different deployment scenarios: 1) in the case of free expansion, 2)
in idealized straight vessels, 3) in idealized bent vessels, and 4)
in real patient vasculature. The primary goal of the comparisons
is to determine whether the use of the more computationally
intensive version is eventually justified by the increasing realism of the results. We conclude by discussing the results and
limitations of this study and outline planned future directions
(see Section IV).
II. METHODOLOGY
A. Preprocessing of Endovascular Stents
This section outlines the initial steps required to create the
model of the stent and prepare it for the expansion process.
1) Geometry Reconstruction: SGs are usually comprised of
an external self-expanding nitinol wire structure (struts) that is
attached to the surface of the graft [see Fig. 1(a)]. We reconstructed the design of the struts from an X-ray computed tomography scan of the device with the spatial resolution of around
150 μm. The strut wires are approximated by their centerlines,
i.e., they are initially modeled without an explicit thickness to
enable fast deployment (the thickness is restored for the subsequent CFD analysis). Afterward, the struts’ centerline representation is supplemented with a background mesh that emulates
the device’s sheath and prevents an excessive expansion and

2000

Fig. 2. Initial positioning of the crimped stent along the centerline of the
vessel. (a) 30%-crimped generic stent. (b) 30%-crimped SG. (c) 20%-crimped
FD in a patient-specific geometry.

Fig. 3. (a) SG mesh: thick lines show struts and thin lines—the background
mesh. (b) Schematic representation of the lineal spring analogy: each edge of
the mesh is viewed as a lineal spring. (c) In the semitorsional spring analogy,
artificial torsional springs are added to each node of a mesh [34].

distortion of the stent during deployment. The merging of the
two meshes (struts and background) can be achieved in two
ways: using an isotropic triangulation in which the stent geometry has been given a “best-fit” representation within the
background mesh or creating an anisotropic mesh using triangulation constraints, i.e., requiring mesh elements to incorporate
the stent struts (see Figs. 1(b) and 3(a) for a zoomed element).
Due to the high porosity, high pore density, and regular struts
architecture, the easiest way to model a typical FD (or devices
of a similar design) is to use the CAD software to replicate
its design. After a 2-D representation has been obtained with
CAD, the sheet can then be wrapped around a cylinder to get
a 3-D structure. Fig. 1(c) and (d) shows an example geometry
for the commercially available Pipeline Embolization Device
(PED, ev3, Irvine, CA, USA). Since FDs have no sheath, there
is no need for an additional background mesh.
2) Local Coordinates: For later manipulations of the stent
geometry, it is convenient to establish a local coordinate system
for the device in order to decouple the mechanical component of
computations from the stent positioning in the global coordinate
system. The local coordinates can be set along the principal
axes of the stent that can be obtained by a principal component
analysis performed on the stent vertices. After the analysis, the
first component gives the centerline of the stent, whereas the
second and third components lie in its circumferential plane.
3) Crimped Configuration: During the minimally invasive
stent deployment in the clinical setting, the vascular prosthesis
is first crimped and placed into a delivery system. Upon release
in a target vessel location, it “springs” back to a load-free configuration under the elastic forces of the material. Currently, most
self-expanding devices are made of nitinol (nickel–titanium alloy), which is a superelastic material, that features an elastic

IEEE TRANSACTIONS ON BIOMEDICAL ENGINEERING, VOL. 61, NO. 7, JULY 2014

response to small deformations of up to 10%, whereas larger
strains can be achieved superelastically due to its shape-memory
effect [31].
Thus, we have to start the deployment simulation with the
crimping of the device. In order to compute the crimped configuration, we prescribe the displacements to the stent nodes with
respect to the load-free configuration. Sometimes the crimping
leads to a foreshortening effect, whereby the stent is becoming shorter when deployed, which is observed in real stents,
especially, in the case of FDs.
4) Initial positioning: After the stent has been crimped, the
next step in a minimally invasive procedure is the positioning of
the catheter in a desired location inside the vessel with the help
of a guidewire. Both the guidewire and the catheter are flexible
enough to be able to follow the curvature of the vessel they are
being pushed through. Once the target destination is reached,
such as the neck of an aneurysm or desirable entry in the case
of an aortic dissection, the catheter is pulled out to release the
stent which starts expanding under the elastic forces of nitinol
it is made of (for self-expanding devices).
In order to simulate the initial placement of the device before
its release out of the catheter, we deform the crimped device in a
way to let it follow the curvature of the vessel’s centerline. First,
all vertices of the stent are divided into layers depending on their
longitudinal position in the stent’s local coordinates. Afterward,
we deform each layer of the stent according to the deviation
of the corresponding vessel’s centerline point from the straight
line—centerline of the stent. The prescribed displacements for
both the crimping and bending procedure give rise to restoring
forces acting in the stent structure. The results of these preparatory steps can be seen in Fig. 2, which shows the placement of
three different crimped stents along the centerline of the vessel.
B. Modeling Expansion
In this section, we explore and compare different fast computational methods in order to determine the most suitable approach for modeling the process of stent expansion. First, we
briefly describe the overall theoretical framework of the dynamic mesh approaches and then zoom into the details of the
three exemplar methods and show how to apply them to the stent
expansion problem. The three versions employed are 1) the lineal spring analogy, 2) the semitorsional spring analogy, and
3) the torsional spring analogy. All three versions are approximative methods; however, they feature increasing complexity
and precision of the iterative equations. Our ultimate goal will
be to investigate their suitability for modeling the stent expansion process and finding out whether the more computationally
intensive version is justified by a concomitant increase in precision. In assessing the precision, we are mostly interested in
the final configuration of the deployed device (and not in the
transient states) as this constitutes the clinically relevant component, especially with respect to the possible subsequent CFD
analysis.
1) Theoretical Framework: The methods we have focused
on fall under the category of dynamic meshes, which were originally proposed as a means of dealing with the moving boundary

SPRANGER AND VENTIKOS: WHICH SPRING IS THE BEST? COMPARISON OF METHODS FOR VIRTUAL STENTING

problems that involve the deformation of the computational domain during simulation. In our approach, we will be modeling
the stent structure as a dynamic mesh.
A dynamic mesh is often viewed as a continuous or discrete
pseudostructural system with fictitious mass, damping, and stiffness properties [32]. Then, the movement of such a mechanical
system obeys the semidiscrete equations of dynamic equilibrium
Mq̈ + Dq̇ + Kq = 0;

q(t) = ξ(t) − ξ(0),

(2)

with t representing time and ξ standing for the coordinates
vector of mesh vertices [32].
The displacement boundary condition is often accompanying
the dynamic equilibrium equation
q(t) = q̄(t)

(3)

on Γm , with q̄(t) representing the known displacements of the
moving boundary Γm . Usually, the boundary nodes of Γm remain at the same relative positions after the movement, whereas
the new positions of the internal nodes are found by iterating
(1) with the boundary condition (3).
In the discrete case, the dynamic mesh can be assembled by
adding to every node an artificial mass and to every edge an
artificial dashpot and an artificial spring to get the damping and
the stiffness matrices, respectively.
Very often in applications, the system (1) is reduced to its
quasi-static version resulting in a simplified form
Kq = 0.

(4)

Numerical solution: Systems of linear equations in the form
Kq = f [such as (4)] are frequently solved with the Jacobi
method. This method is an iterative algorithm, where the matrix
K is split into two matrices, diagonal matrix Kd and the residual
matrix Kr , so that K = Kd + Kr , under the assumption of
dominant diagonal elements. Hence,
Kq = Kd q + Kr q.

(5)

Kd q = Kq − Kr q = f − Kr q.

(6)

This implies

Finally, we can derive an expression for q which can serve as a
base for iterative solutions q(k +1) :
q = Kd−1 (f − Kr q) =⇒ q(k +1) = Kd−1 (f − Kr q(k ) ); (7)
where k + 1 is the number of the iteration. The algorithm is
iterated until it converges, i.e., q(k +1) is equal or close enough
to the desired solution. Alternatively to the system approach,
the solution can also be found on the element-to-element basis,
which takes the following form for an element i:
⎛
⎞

1 ⎝
(k +1)
(k )
fi −
=
kij qj ⎠ , i = 1, 2, . . . , n. (8)
qi
kii
j = i

We will be employing the Jacobi method in the sequel for
solving the system of stent forces.
2) Lineal Springs: The idea behind the spring analogy methods entails replacing the mesh by fictitious springs, as schematically depicted in Fig. 3(b). Each spring then behaves according
to Hooke’s law, which can be written for the force F i acting on
node i from its neighbors as follows:

(1)

where M, D, and K are the system’s fictitious mass, damping,
and stiffness matrices, respectively; q̇ indicates a time-derivative
of the displacement vector q which is defined by

2001

Fi =

ni


kij (δ j − δ i ),

(9)

j =1

with δ i indicating the displacement of the vertex i and ni —the
number of vertices directly connected to i, kij stands for the
stiffness of the spring connecting the vertices i and j [33].
Assuming that in equilibrium the force acting on each node is
zero, the nodal displacement can be calculated at every time step
as a weighted average of the displacements of the neighboring
vertices. This gives the following iterative equation (10), which
can be derived from (9) by setting the force to zero (k is the
number of iterations):
(k +1)

δi

=

v i
(k )
j =1 kij δ j

.
vi
j =1 kij

(10)

In the case of a moving boundary problem, the known displacements are prescribed to the boundary nodes and then the
iterative equation (10) is solved for displacements for all internal
nodes on the vertex-to-vertex basis. After a sufficient number of
iterations, the new nodal coordinates are determined by adding
the final displacement to the old coordinates.
The value of the springs stiffness has implications on how
the boundary deformation is propagated to the inner parts of the
mesh. Usually the stiffness of lineal springs is set to be inversely
proportional to the segment length before the deformation [28].
The intuition behind such a stiffness setting is that mesh vertices
that are located in close proximity to each other should exert a
stronger restoring force onto each other.
Application to stent expansion: We have developed a method
that draws inspiration from the springs analogy and determines
mesh movements without known boundary deformations. Since
crimping of the stent creates spring forces acting inside the
structure, the idea is to allow the nodes in the mesh to move
under these forces. The movement takes into account the nodal
intertwinement with its neighbors by means of the nodal stiffness, the value of which is set to be equal to the sum of all
the springs’ stiffness connecting it to the direct neighbors. The
point to note is that the background mesh of the SG device is
also viewed as consisting of springs which are contributing to
the expansion process.
In the expansion procedure, we need to distinguish between
the two different displacements (deltas). The first one is responsible for the current configuration of the stent, that is, it accounts
for the remaining crimping status of the structure. This delta, that
we call crimping delta δ cr , is used to calculate restoring forces
in the current (partially) crimped stent. The second delta, called
expansion delta δ exp , is the actual displacement with which the
stent in expanding in each iterative step. It is used to update the

2002

IEEE TRANSACTIONS ON BIOMEDICAL ENGINEERING, VOL. 61, NO. 7, JULY 2014

gular information into account. The idea is to provide additional
stiffening elements by placing a torsional spring at each node
of the mesh. The torsion spring would account for the angular displacement of mesh elements and enable controlling mesh
deformation. Based on the lineal spring analogy, the behavior
of the torsion spring is modeled indirectly by integrating the
element’s angular values into the stiffness of the spring edge,
giving rise to the semitorsional stiffness. Fig. 3(c) schematically demonstrates the idea behind the approach for a 2-D mesh
showing torsional springs placed at the corners between adjacent
edges of a triangular element.
There have been different proposals in the literature as to how
to define the semitorsional stiffness. We have used the definition
suggested by [34] that calculates the semitorsional stiffness of
sem itorsional
) by gathering angular information from
an edge (kij
all facing edges in a sum
sem itorsional
kij

=κ

nij


1

m =1

ij
sin θm
2

;

(12)

where nij is the number of all triangular elements that includes
ij
is the angle facing the edge (i − j) in
the edge (i − j), θm
one of such triangular elements (m), and κ is a parameter for
controlling the dimensionality of the resulting stiffness.
Since the value of the sine approaches 0 when the angle
approaches 0 or π, the facing edge becomes very stiff when
neighboring edges are close to collision. Stiffening the edge
slows down the progression in the angle change, preventing
thereby the unwanted inversion of elements. Then, the total
stiffness of an edge is composed of the sum of the two types of
stiffness, the lineal and the semitorsional
lineal
sem itorsional
+ kij
.
kij = kij

stent vertices’ coordinates in the process of deployment. During
the deployment process, the two deltas feed into each other.
First, the initial δ cr is determined, which measures the initial crimping deformation. The iterative process starts with the
calculation of the restoring forces inside the mesh based on the
crimping delta δ cr . Based on this information and stiffness of the
vertices, each iterative step of the expansion process determines
the current displacement δ exp . Afterward, the current coordinates of stent vertices are updated, as well as δ cr , so that they
both correspond to the current status of crimping in the stent
structure. The process is repeated until there is no change in the
stent structure, that is, no restoring forces are acting on the struts
(see the detailed pseudocode of the Incremental Displacement
Algorithm for Free Expansion in the box above).
3) Semitorsional Springs: The driving force of the lineal
spring analogy is the restoring force created by the stiffness of
an edge. However, the process of stent expansion is mostly governed by angular displacements of the stent struts and angular
forces. Hence, we investigate an extension of the lineal spring
analogy called “semitorsional spring analogy” that takes the an-

(13)

The procedure for free expansion is the same as in the lineal
case that has been reported in Section II-B2.
4) Torsional Springs: Another proposal to control the angular deformations of the mesh elements has been to directly
implement the artificial torsional springs added to the nodes of
the mesh (and not to merely simulate them, as in the previous
approach). Then, the torsional stiffness of a torsional spring
attached to a vertex i can be defined as
1
1
1
×
=
;
(14)
Ciij k =
ij k
ij k
2 ij k
1 + cos θi
1 − cos θi
sin θi
where Ciij k is the stiffness of the spring that is attached to the
vertex i which is connected with vertices j and k and, thus,
associated with the angle θiij k (see Fig. 4), as proposed by
Farhat et al. [32]. Hence, this torsional spring will create torques
opposing the change in the angle. We will show the derivation
of the torsional method for the 2-D case and then extend it
to the 3-D version which is employed for the stent expansion
simulation.
a) Kinematics: We use the kinematic formulation proposed by Farhat et al. [32] that was developed under the assumption that only small displacements and rotations occur between two subsequent time steps. The assumption is necessary
during the derivation in order to get angular displacements to

SPRANGER AND VENTIKOS: WHICH SPRING IS THE BEST? COMPARISON OF METHODS FOR VIRTUAL STENTING

2003

In order to attach the additional torsional springs to a lineal
spring mesh, Farhat et al. [32] have proposed the transformation
of the moments M ij k into a set of equivalent forces at each
k
vertex gathered in vector F ij
torsion as
k
F ij
torsion = [ Fi x

Fig. 4. Schematic representation of the torsional spring analogy: an artificial
torsional spring is placed at each node controlling angular deformation [32].

be expressed in terms of vertices displacements in a linear way.
Thus, the iterative algorithm based on this method has to sufficiently break down the large deformation that might occur in
the course of the simulation into small ones in order to respect
the assumption.
Coming back to Fig. 4, we consider the displacement of a
2-D triangle Δij k from its reference position, depicted by a
solid line, into a current configuration, shown by a dashed line
in the image. The displacement components resulting from the
displacement of the triangle vertices i, j, and k are captured in
the vector q defined in the following way:

Fi y

Fj x

Fj y

Fk x



Fk y ]torsion .

k
ij k
F ij
by a linear
torsion can be deduced from moments M
ij k T
as follows
transformation with the help of the matrix R
(the detailed derivation is reported in [32]):
T

k
ij k
M ij k .
F ij
torsion = R

Finally, Farhat et al. [32] define for every element Δij k the
k
equivalent forces F ij
torsion produced by the torsional springs as
T

k
k
ij k
ij k
F ij
C ij k Rij k ]q ij k = K ij
.
torsion = [R
torsion q

(17)

c) Dimensionality issues: In order to properly integrate
both types of springs, some modifications to the original definition of torsional forces proposed by Farhat et al. [32] had to be
made. The reason for the alteration is the discrepancy in dimensionality in both types of forces [36]. More precisely, the lineal
spring forces are nondimensional quantities, since lineal stiffnesses kij is inversely proportional to segment lengths (9). In
q ij k = [ ui vi uj vj uk vk ] .
contrast to that, the torsional forces are dimensional quantities.
This is because the torsional stiffness is defined in (17), where
The resulting rotation increment is denoted by the vector
C ij k is dimensionless and Rij k is inversely proportional to the
k

length (16). Hence, K ij
Δθij k = [ Δθi Δθj Δθk ] .
torsion is inversely proportional to length
square, resulting in torsional forces being inversely proportional
The rotation increment Δθij k can be defined in the matrix form to the length. Therefore, if we simply added the torsional spring
in the following way:
forces to the lineal spring forces, the relative importance of the
ij k
ij k ij k
(15) lineal and torsional springs would depend on the choice of the
Δθ = R q ,
length units (for example, either meters or millimeters), which
where the matrix Rij k is composed as follows: Rij k =
clearly should not be the case. In order to avoid this undesirable
⎡
⎤ effect, we have redefined torsional spring forces as nondimenbij
−aij
−bik
aik
bik − bij aij − aik
⎢
⎥ sional quantities by scaling the torsional stiffness according to
aj i
bj i − bj k aj k − aj i
bj k
−aj k ⎦ a characteristic length
⎣ −bj i
bk i
−ak i
−bk j
ak j
bk j − bk i ak i − ak j
κ
(18)
C ij k =
(16)
2
sin θiij k
and the components of the Rij k matrix are built as
xij
yij
where scaling constant κ = c can be defined through the local
aij = 2 , bij = 2
∀(i, j).
lij
lij
characteristic length  of the mesh, such as the average edge
length of a triangular element, scaled with a chosen constant c.
b) Equilibrium: In order to express the moments proBy the way, the same applies to the semitorsional method and the
duced by torsional springs as forces acting on the mesh, we
overlay between the lineal and the semitorsional springs. There
first write these moments in a matrix form according to the
as well, the parameter κ was used to control the dimension [see
angular version of Hooke’s law
(12)].
d) Numerical solution algorithm: We have used the JaM ij k = C ij k Δθij k ,
cobi scheme to solve the system Kδ = f on a vertex-by-vertex
where
basis, making the following transformation to the original defi⎤
⎤
⎡
⎡ ij k
nition given by (7)
0
0
Ci
Mi
⎥
⎥
⎢
⎢
ij k
ij k
ij k
Cj
0 ⎦.
M
= ⎣ M j ⎦; C = ⎣ 0
δ (n +1) = K d −1 (f − K r δ (n ) )
ij
k
Mk
0
0
Ck
= K d −1 (f − (K − K d )δ (n ) )
Substituting the expression for Δθij k defined in (15), we get
M ij k = [C ij k Rij k ]q ij k .

= K d −1 f − K d −1 Kδ (n ) + K d −1 K d δ (n )
= K d −1 f − K d −1 Kδ (n ) + δ (n ) .

2004

IEEE TRANSACTIONS ON BIOMEDICAL ENGINEERING, VOL. 61, NO. 7, JULY 2014

Noting that the system should approach static equilibrium, that
is, f = 0, and substituting in the above expression Kδ (n ) =
F (n ) , the final iterative algorithm for the torsional springs model
can be summarized in the form as follows:
F (n ) = K lineal δ (n ) + K torsion δ (n )
δ (n +1) = δ (n ) − (K d torsion + K lineal−no dal )−1 F (n )
δ (n +1) = ω δ (n +1) + (1 − ω) δ (n ) .

(19)

Note that in every iteration, torsional and lineal spring forces
are computed separately and added afterward to obtain the
total force F (n ) = K lineal δ (n ) + K torsion δ (n ) due to different structural organization of stiffness matrices K lineal and
K torsion . Since the Jacobi method is operating on the inverse diagonal matrix in every iteration (see Section II-B1), the diagonal
components of both stiffness matrices have to be incorporated to
overlay the effect of lineal and torsional springs, which is equivalent to adding the two matrices K d torsion + K lineal−no dal . The
relaxation parameter ω was permanently set to 0.5.
e) Extension to 3-D stent case: The main idea for the
modification is to use the 2-D torsional spring analogy in the
plane of each triangular element and then transfer the results
to the 3-D stent world. More precisely, since the stent struts
are modeled without taking the thickness into account, each of
the triangular elements lies in a 2-D plane, defined by its three
points. Thus, it is possible to perform computations in the local coordinate system of the triangular elements, applying the
2-D torsional method and then convert the obtained forces, displacements, etc., to the global coordinate system. Alternatively,
we could convert the “local” stiffness matrix obtained for 2-D
case into a global 3-D stiffness matrix, which is then used for
calculation of forces and displacements in the global coordinate system. We have chosen the latter way, since it does not
require storing in memory all the local bases and conversion of
displacements into these local coordinate bases.
Hence, after the 2-D stiffness was obtained, we have to transform this stiffness matrix to the global coordinate system. We
do that by multiplying it with the basis vectors of the local coordinate system, which is actually a rotation matrix (R) and can
be used to switch between the two coordinate systems:
k
ij k
T
K ij
torsion−global = R K torsion−lo cal R .

(20)

For the stent expansion process, we use the same iterative
method that was used in the 2-D case; one iteration is summarized in (19). With respect to the forces’ vector, as before,
it contains a sum of both types of forces: lineal overlaid with
torsional. This iteration substitutes the Step 2 (Iterate) in the incremental displacement algorithm, described in Section II-B2,
which models the free expansion procedure.
C. Modeling the Vessel and the Contact
1) Geometry Reconstruction: Clinical imaging data are usually obtained in the DICOM format. A sequence of the DICOM
images that capture different “slices” of the scanned part of the
body in 2-D can be combined to reproduce a 3-D representations of the scanned organ in the process of segmentation. The
outcome of the segmentation is a 3-D representation that can

be stored as an STL (stereolithography) or any other CAD-like
3-D geometric definition format. For example, the STL file will
contain a description of the surface by listing unstructured triangles that make up its mesh, where each triangle is described
by the 3-D coordinates of the three vertices that comprise it and
the normal to the triangle plane.
2) Contact: The expansion process of the stent is performed
on a vertex-by-vertex basis, and the coordinates of a vertex are
updated in each iteration as long as no contact between the vertex
and the vessel occurs. The check for the contact is performed
after Step (b) in the incremental displacement algorithm, where
the expansion displacement is calculated for each node and
before the nodal update in Step (c). Contact is defined to occur
when the distance between the vertex of the stent and any of
the vessel’s vertices becomes smaller than a chosen parameter
. After contact is detected, the displacements for the vertex
in contact are still calculated in future iterations. However, its
position can only change if it is located within the -boundary
of the vessel inner surface.
III. RESULTS
We have performed deployment experiments for two different devices in different vessel geometries in order to compare
the three methods. The two devices were chosen to represent
“typical” devices used in the two distinct areas of radiological
procedures of interest—aortic and cerebral cases.
1) The first device is a SG corresponding to the GORE TAG
Thoracic Endoprosthesis (model TGT4010) with dimensions of 4 cm in diameter and 10 cm in length [see
Fig. 1(b)]. The device has 164 struts that are 13 mm in
length (on average) and 0.35-mm thick. It is one of the
most widely used devices in radiological procedures to
treat thoracic aortic aneurysms and aortic dissections.
2) A FD is similar to the commercially available PED, ev3,
Irvine, CA, USA) with the diameter of 3 mm and the length
of 14 mm [see Fig. 1(c)], which is one of the two devices
currently used in Europe to treat cerebral aneurysms. The
device has 3200 struts that are 0.4 mm in length.
The stents were crimped to simulate their positioning in the
catheter and aligned along the centerline of the target vessel at
the relevant positions using the methods described in previous
sections. For the first device, the initial crimping was to 20%
of its labeled diameter; since in the clinical practice, the SG is
compressed into a 24 FR (1FR = 0.333 mm) catheter system,
i.e., from 40-mm-outer diameter to 8 mm (24 × 0.333 = 8 mm).
With respect to the second device, the PED is usually delivered
via a 3 FR microcatheter (3 × 0.333 = 1 mm); hence, it was
crimped to the 33% of its load-free diameter.
In all simulations, dimensionality parameters were set to κ =
3
for
the semitorsional method (12), where  is the characteristic

length of the device element, measured as an average length of
a strut. For the torsional case, the scaling was with κ = 3 (18).
These settings were found to produce the best and most stable
results, which were in good alignment with the results of the
full FEA simulation performed in our validation study [36]. We
can iterate here in brief that the error reported in that paper for
the springs method was between 2% and 10%, depending on

SPRANGER AND VENTIKOS: WHICH SPRING IS THE BEST? COMPARISON OF METHODS FOR VIRTUAL STENTING

2005

Fig. 5. Free expansion of stents with the lineal spring method: after 10, 100
iterations of layered expansion and at the end of the expansion process, (a)–(c)
for the SG and (d)–(f) for the FD, respectively.

the complexity of the case—values that are deemed perfectly
acceptable in this context.
To compare the methods and evaluate the results, we define
the following metrics of convergence.
1) Mean nodal 
distance between load-free and expanding
N

stent: δ = N1
i=1 ni − ni , where ni is the position of
the node i in the load-free stent and ni —in the current
expanding stent (δ is measured in millimeters).
2) Mean angle difference
between load-free and expanding
M

|θ
stent: θ = M1
j =1 j − θj |, where θj is the value of the
angle j in the load-free stent, θj —in the current expanding
stent, and M stands for the number of angular elements in
the stent structure (θ is measured in degrees).
3) Mean relative strut length difference between load-free

|l −l  |
and expanding stent: L = S1 Sk=1 k l k k , where lk is the
length of the strut k in the load-free stent, lk —in the
current expanding stent, and S stands for the number of
struts (L is measured in % relative to the initial
Nlength).
4) Mean nodal force in expanding stent: F = N1
i=1 F i ,
where F i is the reaction force at the node i with the index
i running from 1 to N .
We have conducted experiments in four different deployment
scenarios, reported in the coming sections:
a) free expansion;
b) deployment in a straight tube;
c) deployment in a bent tube;
d) deployment in real vessel geometries: dissection case for
SG and aneurysm case for FD.
All models were implemented in MATLAB and executed on
an Intel Core 2 Duo with CPU 2.66 GHz with 4 GB of memory
and without using any parallelization—a modest setup easily
reproducible in any clinic.
A. Free Expansion
1) SG: From the initially crimped configuration (8 mm in
diameter which is 20% of the labeled diameter), the SG device was subject to free expansion until it reached its load-free
configuration. Fig. 6 captures the evolution of the expansion
process during 300 iterations. The four different convergence
metrics are plotted for each of the three springs methods: lineal springs in blue, semitorsional springs in green, and torsional
springs in red. Since the released SG is going to “spring back” to

Fig. 6. Free expansion of the SG device for 300 iterations. Upper row: mean
nodal distance (δ) and mean angle difference (θ) between load-free and expanding stent. Bottom row: mean strut length difference (L) and mean nodal force
in the expanding stent (F ). All three methods were able to reach the load-free
configuration. The lineal springs method (in blue) displayed the fastest convergence, after 200 iterations. The semitorsional springs method (green) is the
second fastest, converging after 250 iterations. The torsional springs method
(red) is the slowest, reaching full expansion only after 500 iterations.

its load-free configuration, the shape of which is also known, the
clear way to demonstrate the expansion process is to track the
distance to the target load-free stent. Hence, we have measured
the average distance from the vertices of the current expanding
stent to their counterparts in the load-free device (mean nodal
distance), which is displayed in the first graph in the upper left
corner. All three spring methods are able to reach the load-free
configuration; however, they do so with different speed, with
the lineal method being the fastest and the torsional method
being the slowest (completely converges only after about 500
iterations).
The evolution of the angles is shown in the upper right corner
as the mean angle difference between the load-free and the current expanding stent. This measure is very important since the
difference in angles reveals the degree of crimping in the structure and indirectly shows the average angular displacement in
every iteration. Again, the lineal method displays faster convergence, semitorsional is similarly fast, and the torsional is the
slowest. Equally, it is important to ensure the adequate struts’
length evolving throughout the iterative process. This is done
by measuring the mean strut length difference which gives the
average error length as a relative percentage of the initial length.
The bottom left graph displays the behavior of struts’ length.
The initial iterations corrupt the average length up to 14% (for
lineal springs method), but it gets corrected in the course of the
expansion process.
Finally, the bottom right graph displays the mean nodal force
in the expanding stent which gives account for the reaction
forces guiding the expansion process. The point to note is that
the forces for semitorsional and torsional methods include the

2006

IEEE TRANSACTIONS ON BIOMEDICAL ENGINEERING, VOL. 61, NO. 7, JULY 2014

TABLE I
VALUES OF CONVERGENCE METRICS AT THE END OF THE
DEPLOYMENT PROCESS

lineal component, for this is how it is calculated in the algorithms. Consequently, it is to expect that the lineal reaction
forces are smaller in magnitude. On the other hand, the semitorsional forces are much larger, even after the lineal component
has been subtracted from them (almost three times the lineal
value).
2) FD: The FD device was initially crimped to 33% of its
labeled diameter and then underwent the free expansion test for
500 iterations. As it was the case for the SG, the lineal springs
method displayed the fastest convergence, after about 250 iterations, closely followed by the semitorsional springs. Again, the
torsional method converged only after about 500 iterations. The
overall behavior of the convergence metrics is similar to the SG
case, depicted in Fig. 6. However, there are some differences
with respect to the end values, which are recorded in Table I
(cases 4–6). All convergence metrics display zero residual value
since the FD returned to the load-free configuration. The lineal
method was again the quickest, requiring 250 iterations (it) and
26 s (time in brackets).
Fig. 5 illustrates the snapshots of the free expansion for two
stents with the lineal spring analogy expansion method.
B. Ideal Vessel: Straight Tube
1) SG: In this set of experiments, the device was deployed
inside an idealized vessel in the shape of a straight cylinder.
The diameter of the cylinder was 34 mm, which is a usual
vessel size for a 40-mm device, because the grafts are always
oversized in the clinical practice for about 30%. As before, the
device was crimped to 8 mm and deployed, this time until it

reached the vessel walls. The snapshots of the expansion with
the semitorsional method after a certain amount of iterations are
captured in Fig. 7(a)–(c). The other two methods displayed a
comparable progression.
Table I (cases 7–9) shows the convergence of parameters
throughout the deployment process. The values in the table are
ax
displayed in the format meanm
m in , with the average value in
bold. The lineal springs method displays the fastest convergence
rate again. However, torsional springs perform slightly better
this time with respect to the final nodal displacement (see δ),
which is surprising given their earlier performance in the free
expansion case. When the deployment is complete, after about
100 iterations on average, there is a very small but nonzero
restoring force that remains due to oversizing, which would
help keeping the device placement intact.
2) FD: The PED was crimped to 1 mm and released into an
idealized cylinder with the 2.3-mm diameter in order to account
for the oversizing. The snapshots of the expansion with the
torsional method after a certain amount of iterations are captured
in Fig. 7(g)–(i). The other two methods displayed a comparable
progression with a slightly faster convergence. The convergence
results can be seen in Table I (cases 10–12). The struts length
difference remains substantial since struts are not fixed due to
the woven design of the device; therefore, the struts can slide,
emulated by the flexible nature of the springs.
C. Ideal Vessel: Bent Tube
1) SG: This time the geometry of the vessel was represented
as a bent cylinder with a diameter of 34 mm. The lineal springs
method was applied in layers, starting from the center of the
device, as performed in the clinical practice. Fig. 7(d)–(f) displays the snapshots of the layered lineal expansion after a certain
amount of iterations.
Since the lineal springs method was applied in layers, its
convergence is slower than its semitorsional and torsional counterparts (see Table I, cases 13–15). The latter two methods displayed a progression comparable to the previous cases, although
the semitorsional method is slightly more accurate with respect
to the struts’ length error. After the deployment is complete,
there is a small nonzero restoring force that remains present due
to the oversizing of the device and the geometry of the vessel.
Note that metrics that we have used to evaluate the performance of the methods are not suitable for the bent (and more
complicated) geometries. For example, the nodal displacements
are calculated as the distance from the current expanding stent to
the load-free configuration and does not represent a meaningful
value, since the load-free configuration is not the target of the
expansion this time. In fact, the target is unknown! Nevertheless, we chose to continue to use these familiar metrics merely
to compare the difference in the convergence rates of the three
methods.
2) FD: The PED was crimped to 1 mm and released in the
idealized bent cylinder with the 2.6-mm diameter to account
for the oversizing. This time, we have applied the semitorsional
method in layers, the snapshots of which can be seen in Fig. 7(j)–
(l). The other two methods were applied simultaneously to all

SPRANGER AND VENTIKOS: WHICH SPRING IS THE BEST? COMPARISON OF METHODS FOR VIRTUAL STENTING

2007

Fig. 7. Expansion of stents in different geometries: (a)–(c) SG expansion from
the crimped stent to fully deployed after 100 iterations; (g)–(i) FD expansion
from the crimped stent to fully deployed after 100 iterations; (d)–(f) and (j)–(l)
layered expansion of the SG and FD devices in bent vessels, respectively.

layers. The general convergence values are depicted in Table I
(cases 16–18).
D. Real Vessel Geometries
1) SG: We have tested the performance of the virtual deployment algorithm in the case of the aortic dissection. As it
would be done in clinical practice, the graft was placed inside
the true lumen to cover the initial tear entry and prevent blood
from flowing into the false lumen.
The vessel diameter was varying at the deployment site and
ranged between 2.9 and 2.1 cm in the distal and proximal location of the device in the true lumen, respectively. Therefore, we
had to adjust the dimensions of the modeled SG to match those
that would be required in clinical practice. The modified device
featured 3.2-cm diameter and 10-cm length.
The opening of the device was started in the center of the
device and was progressing to its extremities, as common with
this type of devices. Fig. 8 shows the deployment snapshots
at different phases during the deployment process. The final
configuration was obtained after approximately 200 iterations
of the virtual deployment algorithm and required approximately
30 s. The device was in a good opposition to the vessel wall and
has covered the initial tear completely. During the opening of
the device, the angles and struts’ length progressively approach
the values corresponding to the load-free configuration. Table I
(cases 19–21) shows the resulting metrics.
2) FD: The final deployment experiment involved a case of
a giant aneurysm located in the left ICA artery of a patient
(see Fig. 9; note the small opthalmic artery originating on the
opposite vessel’s wall with respect to the aneurysmal sac). The
3-D vessel geometry featured a variation in vessel’s diameter
from 4.1 mm in the distal and 4.4 mm in the proximal location
with respect to the aneurysm. For such dimensions of the vessel,
a FD of 4.5-mm diameter and 14 mm in length could be utilized

Fig. 8. Virtual SG deployment in the dissected patient’s vessel. Upper row:
(a) 20%-crimped device initially placed on the centerline of the target vessel on
the site of the pathology; (b) and (c) after 50 and 100 iterations of the expansion
process, respectively, starting from the central part of the device and propagating
to its extremities. Lower row: final configuration of the deployed SG as in (c),
displayed from different rotation angles.

in a clinical setting. Therefore, we had to adjust the modeled FD,
reconfiguring it to be 4.5 mm in diameter in order to account
for both vessel geometry and oversizing. We have deployed the
device over the neck of the aneurysm, applying the torsional
method in layers.
As it would be the case in real interventions, the opening of
the device was started from the distal extremity of the device and
progressed to its proximal end, with respect to the aneurysm sac.
Fig. 9 shows the deployment snapshots at different phases during
the deployment process. The final configuration was obtained
after approximately 500 iterations of the virtual deployment
algorithm and required about 2.5 min. The device was in a good
opposition to the vessel wall. Table I (cases 22–24) shows the
resulting metrics.
IV. CONCLUSION
In this paper, we have reported on methods for virtual stent
deployment. The inspiration for the presented algorithms came
from the dynamic mesh methods that are widely used in many

2008

Fig. 9. Virtual FD deployment in a cerebral aneurysmal vessel. Upper row: (a),
(b), and (c) after 100, 230, and 500 iterations of the torsional expansion method,
respectively, starting from the distal to proximal extremity of the device with
respect to the aneurysm sac. Lower row: final configuration of the deployed FD
as in (c), displayed from different rotation angles.

engineering applications. Using the spring mesh idea, we have
developed algorithms that enable modeling the process of stent
expansion and its deployment in vessels. Furthermore, we have
compared three different spring analogy methods featuring different properties of the springs and showed their performance
in the given problem setting. The three spring analogy methods that were compared are 1) the lineal spring analogy, 2) the
semitorsional spring analogy, and 3) the torsional spring analogy. The comparison was based on the results of expansion of
two different devices—a SG and a FD—in four different scenarios: 1) in the case of free expansion, 2) in the idealized straight
vessels, 3) in the idealized bent vessels, and (4) in real patient
cases.
When applied to the stent deployment problem, all three
spring analogy methods converged; however, they did so at
different rates. The convergence was assessed by different metrics, measuring the displacement and force evolution as well as
the evolution of angles between the struts and the struts length.
One of the interesting findings entailed the fact that the lineal
springs method displays faster convergence rate in all of the four
metrics used. Additionally, it produced final results comparable with those obtained by its more sophisticated semitorsional
and torsional counterparts. This is surprising since the lineal
method constitutes the base for the other two spring methods
and is associated with the simplest implementation. In the case
of the first device, such outcome for the lineal version was facilitated by the presence of the background mesh, which served
as an integrity-preserving element and simulated the angular
elements indirectly. For the second device, the fine mesh of the
struts effectively produced the effect of the “background” mesh,

IEEE TRANSACTIONS ON BIOMEDICAL ENGINEERING, VOL. 61, NO. 7, JULY 2014

taking care of the torsional displacements and forces even in the
lineal method. In general, the difference in methods is slightly
more pronounced for the SG case as compared to the FD (see
Table I).
Another characteristic that was similar to all three springs
methods was the small residual error in the struts lengths, even in
the final stent configuration. This fact is due to the accumulation
of imprecisions along the entire deployment processing chain:
the crimping, positioning along the centerline, and the sequence
of iterations based on the approximative methods. In the future,
the methods should pay more attention to this factor with respect
to the struts length. It is possible, however, that a special handling
of the struts length is necessary for the springs-based methods,
for example, incorporation of an additional constraint into the
algorithm to preserve or correct the lengths.
With respect to the speed of the virtual simulation, it was
sufficiently fast; the longest simulations lasting about 2.5 min for
the patient’s case of the cerebral aneurysm with the high density
PED device on a very modest hardware platform. Gaining a
ten times speed up on a state-of-the-art core is certainly within
easy reach. Being implemented in MATLAB, so far, with no
parallelization and on slow and antiquated hardware, the models
are likely to obtain much better speed. Achieving such fast
running times is a very positive outcome, for high speed close to
real time constitutes one of the top priorities for the development
of deployment methods, as outlined in Section I.
Although the lineal spring analogy method proved suitable for
modeling the stent expansion, there are still a number of limitations associated with it and this study. The first one to mention
is the fact that the validation of the results was omitted here due
to space considerations. The detailed validation is reported in
another study that is comparing the results reported here with
the results of the FEA [36]. The FEA method, although being
very slow, can provide validation for the fast springs methods,
assess the eventual divergence in the results, and estimate the
error. The comparison is, as we discussed, very favorable to the
fast method.
The second point worth mentioning is related to the forces.
Since the springs methods presented here are approximative,
it is not clear what physical meaning is associated with the
restoring forces measured by them. From our comparison (see
Table I), one can see that the lineal forces feature values that are
very similar to those reported by the torsional method; in contrast, the semitorsional method is displaying much higher values. Although from the validation study, we know that the lineal
forces lie close to the forces reported by the FEA comparative
experiments; the full analysis of the force evolution is yet to be
undertaken. In the meantime, one could imagine that although
the lineal version is powerful enough to model the movable
stent structure [and for now it seems like there is no need for
the complex (semi-)torsional springs], the more sophisticated
methods could be able to provide better force approximations
than the “easy” lineal approach. This would mean that they are
actually worthwhile to employ for a more thorough analysis of
the deployment process.
Related to the force is the physical meaning of the different
types of stiffness and their settings. In this paper, the stiffness

SPRANGER AND VENTIKOS: WHICH SPRING IS THE BEST? COMPARISON OF METHODS FOR VIRTUAL STENTING

values were assigned in an arbitrary way, disregarding any considerations of the material properties. In the future, the stiffness
values have to be reverse engineered in advance in order to account for the mechanical behavior as closely as possible. We
hope to gain more understanding of that in in vitro experiments
with stents, planned for the future. Again, it could turn out that
the torsional methods are more suitable for the incorporation of
realistic stiffness values than their lineal counterpart.
Other limitations of this study include the treatment of the
vessel as a rigid body and the simplified contact model employed. We plan to extend the current model by implementing
the stent’s self-contact and the possibility of the vessel to deform under the forces exerted by the stent. This would require
handling the contact between the two bodies—the interplay of
forces and displacements—which would provide valuable information for the clinicians, in order to assess the possible shortand long-term implications of the stent deployment treatment.
This further-elaborated model would then be validated against
real in vivo cases, for which we are gathering pre- and postprocedural data at the moment.
To sum up, this paper demonstrated the overall ability of
spring-based methods to model virtual stent expansion in a
computationally expedient manner, which constitutes a valuable base for future extensions of the model, with the ultimate
goal to enable predictive simulations of the minimally invasive
methods in a clinical setting.

[8]

[9]

[10]
[11]

[12]

[13]

[14]
[15]
[16]

[17]

ACKNOWLEDGMENT
The authors would like to thank Prof. J. Byrne (University
of Oxford) and Dr. H. von Tengg-Kobligk (Inselspital Bern,
University of Heidelberg) for their valuable clinical input.

[18]
[19]

REFERENCES
[1] A. Schanzer and L. Messina, “Two decades of endovascular abdominal
aortic aneurysm repair: Enormous progress with serious lessons learned,”
J. Amer. Heart Assoc., vol. 1, no. 3, pp. e0000752012.
[2] J. Byrne and I. Szikora, “Flow diverters in the management of intracranial aneurysms: A review,” eJ. Eur. Soc. Minimally Invasive Neurolog.
Therapy, vol. 1225000057, 2012.
[3] M. Adriaensen, J. Bosch, E. Halpern, M. Myriam Hunink, and G. Gazelle,
“Elective endovascular versus open surgical repair of abdominal aortic
aneurysms: Systematic review of short-term results,” Radiology, vol. 224,
no. 3, pp. 739–747, 2002.
[4] A. J. Molyneux, R. S. Kerr, L.-M. Yu, M. Clarke, M. Sneade, J. A. Yarnold,
and P. Sandercock, “International subarachnoid aneurysm trial (ISAT)
of neurosurgical clipping versus endovascular coiling in 2143 patients
with ruptured intracranial aneurysms: A randomised comparison of effects
on survival, dependency, seizures, rebleeding, subgroups, and aneurysm
occlusion,” Lancet, vol. 366, no. 9488, pp. 809–817, 2005.
[5] Z. Kulcsar, E. Houdart, A. Bonafe, G. Parker, J. Millar, A. Goddard,
S. Renowden, G. Gal, B. Turowski, K. Mitchell, F. Gray, M. Rodriguez,
R. van den Berg, A. Gruber, H. Desal, I Wanke, and D. A. Rufenacht,
“Intra-aneurysmal thrombosis as a possible cause of delayed aneurysm
rupture after flow-diversion treatment,” Amer. J. Neuroradiol., vol. 32,
no. 1, pp. 20–25, 2011.
[6] P. I. D’Urso, G. Lanzino, H. J. Cloft, and D. F. Kallmes, “Flow diversion
for intracranial aneurysms a review,” Stroke, vol. 42, no. 8, pp. 2363–2368,
2011.
[7] J. Mas, G. Chatellier, B. Beyssen, A. Branchereau, T. Moulin,
J. Becquemin, V. Larrue, M. Lièvre, D. Leys, J. Bonneville, J. Watelet,
J.-P. Pruvo, J.-F. Albucher, A. Viguier, P. Piquet, P. Garnier, F. Viader,
E. Touze, M. Giroud, H. Hosseini, J.-C. Pillet, P. Favrole, J.-P. Neau,
and X. Ducrocq, “Endarterectomy versus stenting in patients with symp-

[20]
[21]

[22]
[23]
[24]
[25]

[26]

[27]
[28]

2009

tomatic severe carotid stenosis,” New Engl. J. Med., vol. 355, no. 16,
pp. 1660–1671, 2006.
D. Fiorella, P. Lylyk, I. Szikora, M. Kelly, F. Albuquerque, C. McDougall,
and P. Nelson, “Curative cerebrovascular reconstruction with the pipeline
embolization device: The emergence of definitive endovascular therapy for
intracranial aneurysms,” J. NeuroIntervent. Surg., vol. 1, no. 1, pp. 56–60,
2009.
D. Kiousis, A. Wulff, and G. Holzapfel, “Experimental studies and
numerical analysis of the inflation and interaction of vascular balloon
catheter-stent systems,” Ann. Biomed. Eng., vol. 37, no. 2, pp. 315–330,
2009.
R. Schwartz and T. Henry, “Pathophysiology of coronary artery restenosis,” Rev. Cardiovasc. Med., vol. 3, pp. S4–S9, 2002.
P. Watton, N. Raberger, G. Holzapfel, and Y. Ventikos, “Coupling
the hemodynamic environment to the evolution of cerebral aneurysms:
Computational framework and numerical examples,” J. Biomech. Eng.,
vol. 131, p. 101003, 2009.
M. Jamous, K. Satoh, S. Matsubara, J. Satomi, N. Nakajima, M. Uno,
and S. Nagahiro, “Ischemic basilar artery dissecting aneurysm treated by
stenting only,” Neurologia Medico-Chirurgica, vol. 44, no. 2, pp. 77–81,
2004.
S. Cook, P. Wenaweser, M. Togni, M. Billinger, C. Morger, C. Seiler,
R. Vogel, O. Hess, B. Meier, and S. Windecker, “Incomplete stent apposition and very late stent thrombosis after drug-eluting stent implantation,”
Circulation, vol. 115, no. 18, pp. 2426–2434, 2007.
B. Lieber, V. Livescu, L. Hopkins, and A. Wakhloo, “Particle image velocimetry assessment of stent design influence on intra-aneurysmal flow,”
Ann. Biomed. Eng., vol. 30, no. 6, pp. 768–777, 2002.
M. Hirabayashi, M. Ohta, D. Rüfenacht, and B. Chopard, “A lattice Boltzmann study of blood flow in stented aneurism,” Future Generat. Comput.
Syst., vol. 20, no. 6, pp. 925–934, 2004.
Y. Ventikos, E. Holland, T. Bowker, P. Watton, N. Kakalis, M. Megahed,
F. Zhu, P. Summers, and J. Byrne, “Computational modelling for cerebral
aneurysms: Risk evaluation and interventional planning,” Brit. J. Radiol.,
vol. 82, no. Special Issue 1, pp. S62–S71, 2009.
D. Chen, M. Muller-Eschner, D. Kotelis, D. Bockler, Y. Ventikos, and
H. von Tengg-Kobligk, “A longitudinal study of Type-B aortic dissection
and endovascular repair scenarios: Computational analyses,” Med. Eng.
Phys., vol. 35, pp. 1321–1330, 2013.
J. Golzarian and D. Valenti, “Endoleakage after endovascular treatment of
abdominal aortic aneurysms: Diagnosis, significance and treatment,” Eur.
Radiol., vol. 16, no. 12, pp. 2849–2857, 2006.
M. Gawenda, G. Jaschke, S. Winter, G. Wassmer, and J. Brunkwall, “Endotension as a result of pressure transmission through the graft following
endovascular aneurysm repair—An in vitro study,” Eur. J. Vasc. Endovasc.
Surg., vol. 26, no. 5, pp. 501–505, 2003.
C. Lally, F. Dolan, and P. Prendergast, “Cardiovascular stent design and
vessel stresses: A finite element analysis,” J. Biomech., vol. 38, no. 8,
pp. 1574–1581, 2005.
D. Ma, G. F. Dargush, S. K. Natarajan, E. I. Levy, A. H. Siddiqui, and
H. Meng, “Computer modeling of deployment and mechanical expansion
of neurovascular flow diverter in patient-specific intracranial aneurysms,”
J. Biomech., pp. 2256–2263, 2012.
F. Auricchio, M. Conti, M. De Beule, G. De Santis, and B. Verhegghe,
“Carotid artery stenting simulation: From patient-specific images to finite
element analysis,” Med. Eng. Phys., vol. 33, no. 3, pp. 281–289, 2011.
N. Rebelo, R. Fu, and M. Lawrenchuk, “Study of a nitinol stent deployed
into anatomically accurate artery geometry and subjected to realistic service loading,” J. Mater. Eng. Perform., vol. 18, no. 5, pp. 655–663, 2009.
L. Flórez Valencia, J. Montagnat, and M. Orkisz, “3d models for vascular
lumen segmentation in MRA images and for artery-stenting simulation,”
IRBM, vol. 28, no. 2, pp. 65–71, 2007.
S. Appanaboyina, F. Mut, R. Löhner, C. Putman, and J. Cebral, “Computational fluid dynamics of stented intracranial aneurysms using adaptive
embedded unstructured grids,” Int. J. Numer. Methods Fluids, vol. 57,
no. 5, pp. 475–493, 2008.
I. Larrabide, M. Kim, L. Augsburger, M. Villa-Uriol, D. Rüfenacht, and
A. Frangi, “Fast virtual deployment of self-expandable stents: Method
and in-vitro evaluation for intracranial aneurysmal stenting,” Med. Image
Anal., vol. 16, no. 3, pp. 721–730, 2010.
J. Montagnat, H. Delingette, and N. Ayache, “A review of deformable surfaces: Topology, geometry and deformation,” Image Vis. Comput., vol. 19,
no. 14, pp. 1023–1040, 2001.
J. Batina, “Unsteady Euler airfoil solutions using unstructured dynamic
meshes,” AIAA J., vol. 28, no. 8, pp. 1381–1388, 1990.

2010

[29] G. Wheatley, A. Gurbuz, J. Rodriguez-Lopez, V. Ramaiah, D. Olsen,
J. Williams, and E. Diethrich, “Midterm outcome in 158 consecutive
gore tag thoracic endoprostheses: Single center experience,” Ann. Thorac.
Surg., vol. 81, no. 5, pp. 1570–1577, 2006.
[30] L. Pierot, “Flow diverter stents in the treatment of intracranial aneurysms:
Where are we?” J. Neuroradiol., vol. 38, pp. 40–46, 2011.
[31] D. Stoeckel, C. Bonsignore, and S. Duda, “A survey of stent designs,”
Minimally Invas. Ther. Allied Technol., vol. 11, no. 4, pp. 137–147, 2002.
[32] C. Farhat, C. Degand, B. Koobus, and M. Lesoinne, “Torsional springs for
two-dimensional dynamic unstructured fluid meshes,” Comput. Methods
Appl. Mech. Eng., vol. 163, no. 1–4, pp. 231–245, 1998.
[33] F. Blom, “Considerations on the spring analogy,” Int. J. Numer. Methods
Fluids, vol. 32, no. 6, pp. 647–668, 2000.
[34] D. Zeng and C. Ethier, “A semi-torsional spring analogy model for updating unstructured meshes in 3d moving domains,” Finite Elements Anal.
Design, vol. 41, no. 11–12, pp. 1118–1139, 2005.
[35] K. Spranger, C. Capelli, G. Bosi, S. Schievano, and Y. Ventikos, “Comparison and calibration of a real-time virtual stenting algorithm using finite
element analysis and genetic algorithms,” Comput. Methods Appl. Mech.
Eng. (in review), 2014.
[36] C. Bottasso, D. Detomi, and R. Serra, “The ball-vertex method: a new
simple spring analogy method for unstructured dynamic meshes,” Comput.
Methods Appl. Mech. Eng., vol. 194, no. 39, pp. 4244–4264, 2005.

IEEE TRANSACTIONS ON BIOMEDICAL ENGINEERING, VOL. 61, NO. 7, JULY 2014

Katerina Spranger holds the Dipl.-Inf. degree in
Computer Science from the Humboldt University of
Berlin, Germany.
She is currently a postgraduate researcher at the
Department of Engineering Science at the University of Oxford, U.K. Her research interests include
biomedical engineering, simulations of surgical interventions, and predictive computations for medicine.

Yiannis Ventikos holds the Kennedy Chair at University College London, U.K., where he is also the
Head of the Department of Mechanical Engineering.
His research interests include transport phenomena,
(bio)fluid mechanics, clinical computing, minimally
invasive interventional devices design and optimization, and biocomplexity. He has received the M.Eng.
in Naval Architecture and Marine Engineering and
the Ph.D. in Hydrodynamics and Fluid Mechanics
from National Technical University of Athens.

