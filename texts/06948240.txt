1070

IEEE TRANSACTIONS ON BIOMEDICAL ENGINEERING, VOL. 62, NO. 4, APRIL 2015

Exponential Integrators for a Markov Chain Model
of the Fast Sodium Channel of Cardiomyocytes
Tomáš Starý and Vadim N. Biktashev∗

Abstract—The modern Markov chain models of ionic channels
in excitable membranes are numerically stiff. The popular numerical methods for these models require very small time steps to
ensure stability. Our objective is to formulate and test two methods
addressing this issue, so that the timestep can be chosen based on
accuracy rather than stability. Both proposed methods extend
Rush–Larsen technique, which was originally developed to
Hogdkin–Huxley type gate models. One method, “matrix Rush–
Larsen” (MRL) uses a matrix reformulation of the Rush–Larsen
scheme, where the matrix exponentials are calculated using
precomputed tables of eigenvalues and eigenvectors. The other,
“hybrid operator splitting” (HOS) method exploits asymptotic
properties of a particular Markov chain model, allowing explicit
analytical expressions for the substeps. We test both methods
on the Clancy and Rudy (2002) I N a Markov chain model. With
precomputed tables for functions of the transmembrane voltage,
both methods are comparable to the forward Euler method in
accuracy and computational cost, but allow longer time steps
without numerical instability. We conclude that both methods are
of practical interest. MRL requires more computations than HOS,
but is formulated in general terms which can be readily extended
to other Markov chain channel models, whereas the utility of
HOS depends on the asymptotic properties of a particular model.
The significance of the methods is that they allow a considerable
speed-up of large-scale computations of cardiac excitation models
by increasing the time step, while maintaining acceptable accuracy
and preserving numerical stability.
Index Terms—Exponential time-differentiation, ion channel,
Markov chain, numerical methods, operator splitting, Rush–
Larsen method.

I. INTRODUCTION
ATHEMATICAL models are an essential part of the
modern cardiac electrophysiology. They are used for
hypothesis testing in research and as a guide for clinical decision. A typical definition of such a model is a high-dimensional
(tens of equations) system of ordinary differential equations per
excitable unit. Detailed simulations of the heart involve solving such systems for each of millions of cells placed in a mesh

M

Manuscript received June 25, 2014; revised September 17,
2014; accepted October 21, 2014. Date of publication November
5, 2014; date of current version March 17, 2015. The work of
T. Starý was supported by the University of Exeter Ph.D. Studentship
and the work of V. N. Biktashev was supported in part under EPSRC Grant
EP/I029664/1. Asterisk indicates corresponding author.
∗ V. N. Biktashev is with the College of Engineering, Mathematics and
Physical Sciences, University of Exeter, Exeter EX4 4QF, U.K. (e-mail: v.n.
biktashev@exeter.ac.uk).
T. Starý is with the College of Engineering, Mathematics and Physical
Sciences, University of Exeter, Exeter EX4 4QF, U.K. (e-mail: T.Stary@
exeter.ac.uk).
This paper has supplemental material available at http://ieeexplore.ieee.org
(File size: 301004 B).
Color versions of one or more of the figures in this paper are available online
at http://ieeexplore.ieee.org.
Digital Object Identifier 10.1109/TBME.2014.2366466

representing the cardiac tissue. Such large-scale models can be
computationally extremely expensive; hence, significant efforts
are directed to develop efficient numerical methods for solving
such systems.
A typical cardiac excitation model is centered around the
Kirchhoff circuit law which gives
dVm 
+
I
(1)
Istim (t) = C
dt


where C is the cell membrane’s capacitance, Vm = Vm (t) is
the transmembrane potential difference, and I ,  = 1, . . . , L,
are currents through ion-specific channels. The currents, in turn,
are determined by the Ohm’s law



(2)
I = G P (t) Vm (t) − E (X(t))
 is the ion-specific electromotive force, depending
where E (X)
 via the Nerst equation, G is the
on the ionic concentrations X
total conductance of channels of type  when they are all open,
and P is the probability of those channels to be open.
 are intra and extracellular
The components of the vector X
ionic concentrations, which change in time in the obvious way in
accordance with the ionic fluxes and the corresponding volumes;
some concentrations in some models are assumed constant. The
dynamics of the open probabilities is much more nontrivial, as it
reflects the conformation dynamics of the proteins constituting
the ion channels.
The classical description of these dynamics, going back to
Hodgkin and Huxley (1952) [1], has the form

yi
(3)
P (t) =
i∈I()

with a popular, although different from the original Hodgkin
and Huxley’s, interpretation that the set I() corresponds the
subunits of the channel, called “gates.” These subunits are assumed statistically independent, each of them can be either in
an “open” or a “closed” state, and the channel is open if and
only if each of the subunits is open. Variables yi then are open
probabilities of the gates, and their dynamics are described by
dyi
= αi (Vm )(1 − yi ) − βi (Vm )yi
dt

(4)

where αi (Vm ) are opening rates and βi (Vm ) are closing rates.
For instance, the original Hodgkin–Huxley description of
the fast sodium current (INa ) channel uses # I(INa ) = 4
gates, three of which, called m-gates, have identical opening α1 (Vm ) = α2 (Vm ) = α3 (Vm ) = αm (Vm ) and closing
β1 (Vm ) = β2 (Vm ) = β3 (Vm ) = βm (Vm ) rates, and the fourth,

0018-9294 © 2014 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See http://www.ieee.org/publications standards/publications/rights/index.html for more information.

STARÝ AND BIKTASHEV: EXPONENTIAL INTEGRATORS FOR A MARKOV CHAIN MODEL OF THE FAST SODIUM CHANNEL

1071

called h-gate, has rates α4 (Vm ) = αh (Vm ) and β4 (Vm ) =
βh (Vm ), hence for this case we have
PI N a (t) = m3 h

(5)

dm
= αm (Vm )(1 − m) − βm (Vm )m
(6)
dt
dh
= αh (Vm )(1 − h) − βh (Vm )h.
(7)
dt
A more recent approach is modeling the probabilities of the
channel molecules, as a whole, to be in specific conformation
states, without the restricting assumptions of statistically independent subunits and only two states for any subunit. This gives
generic continuous-time Markov chain (MC) models. Let the
probability of the th channel to be in the kth state at time t
be uk (t) (“state occupancy”), k ∈ K(), K() = # K(), and
all such probabilities be considered components of the state
(column-) vector u = (uk ) = u (t). Let gk be the relative permeability of the state k, then we have

gk uk (t).
(8)
P (t) =
k =K()

Typically, gk = δk ,k ∗ where k ∗ is the “open state.” The time
evolution of the state vector is described by the system of linear
ODEs, known in particular as Kolmogorov (forward) equations,
or master equation, of the form
du
= A(Vm )u
(9)
dt
where the nondiagonal components of the matrix A(Vm ) are
the transition rates (TR) between the states,and the diagonal
components are defined by the condition
k ∈K uk = 1 and
consequently sum of any column of A should be zero.
The ODE system for cellular membrane can be solved on
a computer using standard numerical solvers. A typical solver
iteratively computes the states of the system using time-stepping
algorithms, that is computing the states at times tn = t0 + nΔt.
The size of the time step Δt is inversely proportional to the
computational cost, measured as CPU time required for the
computation. Increasing the time step is a straightforward way
of reducing the computational cost.
The maximal acceptable time step is limited by considerations
of accuracy and stability (see e.g., [2, Sections 5.10 and 5.11]).
Whereas the former is “relative” in that it depends on the aims of
the research, the latter has a more “absolute” character in that if
stability conditions are not satisfied, the solution is unusable for
any purpose. Typically, when the time step exceeds the stability
limit, the numerical solution is characterized by wild oscillations
around the exact solution, and quite often will lead to numerical
overflow.
Simple explicit solvers suffer from instabilities the most, and
implicit, stable methods, applicable to generic systems of ODEs,
are complicated and often costly. The motivation for our research was that taking into account the specific properties of
the problem can offer some advantages. Specifically, we have
in mind two distinct considerations.
One consideration is that the TRs can range through several
orders of magnitude, and some of them can be much faster than

Fig. 1. Instability of IN a MC model at longer time steps. The model was
solved using FE method using three different step sizes: Δt = 10 μs, Δt =
40 μs, and Δt = 44 μs. The top panel shows the membrane potential (V m ), the
bottom panel shows state occupancy of the open state O.

other processes described by the excitable cell model. This split
of the speeds of the variables suggests a possibility to exploit
asymptotic methods.
The other consideration is the linearity of the system (9).
Here, we are inspired by the example of the exponential integrator algorithm developed by Rush and Larsen in 1978 [3].
It is based on the assumption that the transmembrane voltage,
on which the TRs in the gate model (4) depend, changes only
slightly during one time step Δt. So during one time step, the
TRs can be approximated by constants, and (4) is then solved
analytically. The solution can be conveniently defined in terms
of the “steady state” ȳi = αi (Vm )/[αi (Vm ) + βi (Vm )] and the
“time constant” τi = 1/[αi (Vm ) + βi (Vm )] at a given potential
Vm presumed constant


Δt
yin +1 = ȳi (Vm ) − [ȳi (Vm ) − yin ] exp −
. (10)
τi (Vm )
The Rush–Larsen (RL) scheme is easy to implement, gives
good results and is very popular in computational cardiac electrophysiology. Its stability and approximation properties have
been extensively discussed in the literature, including its relation
to general exponential integrators family, its extension beyond
gating variables by linearization, and improving its approximation properties, see, e.g., [4]–[6]. However it is designed for a
single ODE and is not immediately applicable for MC models
which are systems of coupled ODEs. And yet MC models are
known to suffer from severe numerical instability issues, just as,
or even more than, the gate models (see Fig. 1). The classical
techniques for numerical solution of continuous-time MC models involve finding the eigenvalues and associated eigenvectors
of the transition matrix. Direct implementation of this approach
to very large MCs is problematic, see, e.g., [7]. However, the

1072

IEEE TRANSACTIONS ON BIOMEDICAL ENGINEERING, VOL. 62, NO. 4, APRIL 2015

TABLE II
CHANGE OF TR TERMINOLOGY
Standard

Fig. 2.

MC model of IN a channel.

TABLE I
CHANGE OF STATES VARIABLES TERMINOLOGY
Standard

Our

initial value

O
C1
C2
C3
IC 3
IC 2
IF
IM 1
IM 2

O
P
Q
R
S
T
U
V
W

4.386 × 10 −8
5.329 × 10 −5
1.064 × 10 −2
8.018 × 10 −1
1.436 × 10 −1
1.907 × 10 −3
1.111 × 10 −5
8.417 × 10 −4
4.118 × 10 −2

MCs describing ionic channels are relatively small so the direct
approach is feasible.
In this paper, we discuss two methods for numerical solution
of MC models based on these two considerations.
II. METHODS
A. Models
To test the suggested numerical methods, we have chosen the
MC model of the INa channel by Clancy and Rudy [8] (see
Fig. 2), which is one of the most popular MC models. We used
the formulation of the MC model and the whole cell model into
which it was incorporated, as implemented in the authors’ code
kindly provided by C.E. Clancy. It most closely corresponds
to the Luo–Rudy model [9] with modifications described in
[10], [11], and some further minor differences. For the sake
of reproducibility of our results, we describe the whole model
in the supplementary material, highlighting all the differences
from the published models that we have detected. For the same
purpose, we put a simplified version of the C code we used in
the simulations described below in the supplementary materials.
For convenience, we changed the notation for the MC states
and TRs. The states were named in alphabetical order, starting
with O for the open state, in a clockwise direction as in Fig. 2.
See Tables I and II for the correspondence with the original notation. The model contains nine interconnected states. The state
O represents the conformation of the ion channel that allows
the flow of ions between the intracellular and extracellular environment. The remaining states (P , Q, R, S, T , U , V and W )
represent nonconductive conformations of the channel, so we
can say that for this model gk = δk ,1 , where u1 = O. There are
11 possible bidirectional transitions between states, but some of
the corresponding 22 TRs are described by identical functions,
so there are only 14 distinct TR definitions. We denote the TRs
by α with a subscript showing the direction of the transition,

Our

α11
α12
α13
β1 1
β1 2
β1 3
α2
β2
α3
β3
α4
β4
α5
β5

αR Q , αS T
αQ P , αT U
αP O
αQ R , αT S
αP Q , αU T
αO P
αO U
αU O
αU P , αT Q , αS R
αP U , αQ T , αR S
αU V
αV U
αV W
αW V

e.g., αP O is the transition rate from state P into state O. See
Table II for the link with the original notations.
The TRs are shown in Fig. 3 as functions of the transmembrane potential Vm in a physiologically relevant range. The values of TRs vary across several orders of magnitude, from 10−11
to 102 ms−1 . Some of the TRs are high at the lower potentials,
some are fast at higher potentials, and some are uniformly low.
The conductive (open) state O is the only state that has immediate effect on the INa current. The remaining eight states of the
model can affect the current only indirectly by transitions to the
open state O. The time evolution of a generic state occupancy
state uk is described by a differential equation of the form

duk
=
(αk  ,k uk  − αk ,k  uk )
(11)
dt


k ∈K (k )

where K (k) is the set of all the states interconnected with state
k, which can be readily found from the diagram. For example,
the occupancy of the open state, O, is described by the following
equation:
dO
= αP O P + αU O U − (αO P + αO U ) O.
dt
By taking the sum of (11) for all k, one can see that the sum
of the right-hand sides equals to zero, and therefore the system
observes a states conservation law, which is
consistent with the
definition of uk as probabilities, implying k ∈K uk = 1. This
is of course a generic property of a continuous MC. So the
differential equations in the model are not independent, which
creates a possibility of reducing the number of equations from
nine to eight, by computing one of the occupancies through
the conservation law rather than from its differential equation.
However, the computational gain from this is insignificant, and
instead we used any deviations from the conservation law as an
indicator of the accuracy of the computations.
B. Numerical Methods
1) Forward Euler (FE): The standard FE method is the simplest timestepper for differential equations. It defines the solution at the next time step, un +1 = u (tn +1 ), in terms of the same

STARÝ AND BIKTASHEV: EXPONENTIAL INTEGRATORS FOR A MARKOV CHAIN MODEL OF THE FAST SODIUM CHANNEL

1073

Fig. 3. TR of IN a MC model. The left panel shows fast TR at high potentials: subsystem A 0 ; the middle panel shows fast TR at low potentials: subsystem A 1 ;
and the right panel shows slow TR in the entire range of potentials: subsystem A 2 .

at the previous time step, un = u (tn ), using one-step forwardtime finite different approximation of the time derivative, which
for the system (9) gives
un +1 = un + ΔtA(Vm (tn ))un .

(12)

The time discretization step Δt = tn +1 − tn is presumed here
the same for all steps of a simulation.
2) Matrix Rush–Larsen (MRL): The proposed MRL method
assumes that the matrix A(Vm ) changes only slightly during
one time step and therefore can be approximated by a constant.
The solution of (9) can then be written in terms of the matrix
exponential
un +1 = exp [A(Vm (tn )) Δt] un .

(13)

We assume that the matrix A(Vm ) is diagonalizable, i.e., can
be represented in the form A(Vm ) = S(Vm )Λ(Vm )S(Vm )−1 ,
where matrix S(Vm ) is composed of the eigenvectors concatenated as column vectors, and matrix Λ(Vm ) contains eigenvalues placed on the corresponding places on the diagonal. A
sufficient condition of diagonalizability of a matrix is that all its
eigenvalues are distinct, and this is the generic situation; but we
of course check that it actually takes place in every case. Then
the matrix exponential is calculated as
un +1 = S(Vm ) exp (Λ(Vm )Δt) S(Vm )−1 un

(14)

where the exponential exp [Λ(Vm )Δt] of the diagonal matrix Λ(Vm )Δt is obtained by exponentiation of its diagonal
elements.
As the numerical solution of the eigenvalue problem is computationally expensive, we precompute the matrices S(Ṽj ),
S(Ṽj )−1 and Λ(Ṽj ) for a fine grid of physiological potentials, Ṽj = Vm in + jΔV , j ∈ J = {0, 1, . . . , jm ax }, Ṽj ≤
Vm ax , Vm in = −100, Vm ax = 70, ΔV = 0.01 (all in mV) before compile time and save them in a file.
At start time, the eigenvalue and eigenvector matrices are
loaded from the file and we precompute, for Δt used in the
particular simulation, the transition matrices
 	 
  	 

	 

	 

−1
T j = T Ṽj = S Ṽj exp Λ Ṽj Δt S Ṽj
(15)

for all j ∈ J . At the run time, the solver simply refers to the
tabulated transition matrix T j
un +1 = T j (n ) un

(16)

where Ṽj (n ) is the tabulated transmembrane potential that is the
nearest to Vm (tn ).
Along with the code, we provide precomputed files for a voltage step size of ΔV = 0.1 (size of 4.85 MB), that are sufficient
to obtain accurate results. The tables with ΔV = 0.01 mV of
48.5 MB size, used for the simulations presented, are available
from the authors upon request.
The method of tabulation (tab.) can be applied to all the presented numerical methods. However, its benefit is most essential
in the MRL method, because matrix exponentiation is computationally expensive. The accuracy of the tabulation is dependent
on the voltage step (here 0.01 mV) which is a matter of choice
depending on memory availability and allowable precompile
and start-time computation time.
3) Hybrid Operator Splitting (HOS): The MRL achieves the
purpose in principle but is relatively costly as multiplication by
a dense K × K matrix T j (n ) is required at each time step. On
the other hand, it did not at all exploit the specific structure of
the TR, illustrated by Fig. 3, that is, that the matrix A(Vm )
is sparse and some TRs are much faster than others for some
voltage ranges. Hence, we propose an HOS method, which combines FE and MRL, and exploits the asymptotic structure of the
TRs. In this method, we set
A(Vm ) = A0 (Vm ) + A1 (Vm ) + A2 (Vm )
as described in Fig 3: A0 contains only TRs that are fast at
high values of Vm (αR Q , αS T , αQ P , αT U , αP O and αO U ); A1
contains only TRs that are fast at low values of Vm (αP Q , αU T ,
αQ R , αT S and αO P ); and A2 contains only uniformly slow
TRs (αR S , αQ T , αP U , αS R , αT Q , αU P , αV W , αW V , αU O ,
αU V and αV U ). Explicit expressions for Aj are given in the
Supplement.
Every timestep is then done in three substeps
un +1/3 = exp(ΔtA0 (Vm (tn ))) un

(17)

un +2/3 = exp(ΔtA1 (Vm (tn ))) un +1/3

(18)

1074

IEEE TRANSACTIONS ON BIOMEDICAL ENGINEERING, VOL. 62, NO. 4, APRIL 2015

un +1 = un +2/3 + ΔtA2 (Vm (tn )) un +2/3 .

(19)

In our case the matrix exponentials in the two fast subsystems
(17) and (18) are found analytically, through solving the corresponding ODE systems. This is possible because some of the
equations corresponding to the matrices A0 (Vm ) and A1 (Vm )
are coupled in a specific manner and can be solved one by one
where solution of one equation is substituted in the next, etc.
The full expressions and the method of derivation are given in
the Supplement; here, we present the solution for state O in (17)
as an example
On +1/3 = μO U On + KP O Pn + KQ O Qn + KR O Rn
where
KP O =

αP O (μP O − μO U )
αO U − αP O

KQ O =

αP O αQ P (μQ P − μO U )
(αP O − αQ P )(αO U − αQ P )
−

KR O = −

αP O αQ P (μP O − μO U )
(αP O − αQ P )(αO U − αP O )
αP O αQ P αR Q (μQ P − μO U )
− αR Q )(αP O − αQ P )(αO U − αQ P )

(αQ P

+

αP O αQ P αR Q (μP O − μO U )
(αQ P − αR Q )(αP O − αQ P )(αO U − αP O )

+

αP O αQ P αR Q (μR Q − μO U )
(αQ P − αR Q )(αP O − αR Q )(αO U − αR Q )

−

αP O αQ P αR Q (μP O − μO U )
− αR Q )(αP O − αR Q )(αO U − αP O )

μj k = e

(αQ P

−α j k Δ t

.

The slow subsystem (19) uses FE, and since it contains only
uniformly slow TRs, it can tolerate large time-steps, allowed by
other components of the cell model, without loss of stability.
C. A Priori Error Estimates
Estimates by standard methods (e.g., [2, Chapter 5], see
details in the Supplement), show that all three numerical
schemes have local
truncation errors of the second order,

the coefficients E vary:
i.e., EΔt2 + O Δt3 , although


for FE we have EFE ≤ 12 A2 + dA/dVm |dVm /dt| ,
for MRL we have EM RL = 12 dA/dVm |dVm /dt|, and for
HOS it is composed of contributions of the three substeps plus the error due to operator splitting, EHOS ≤
1
2 |dVm /dt| (dA0 /dVm  + dA1 /dVm  + dA2 /dVm ) +
1
2
where EOS = 12 [A1 , A0 ] + [A2 , A0 ] +
2 ||A2 || + EOS ,
[A2 , A1 ], and [X, Y ] ≡ XY − Y X. So comparison of
MRL and HOS with FE depends on the solution, but in any case
accuracy of HOS it contingent on A0 , A1 and A2 not being
large at the same time, to ensure relative smallness of EOS .
D. Implementation
Most of the algorithms described here were implemented
in C language in double precision floating point arithmetics

and compiled using GNU compiler collection (version 4.7.2).
The exception is computation of eigenvalues and eigenvector
tables, which was done using mathematical software Sage [12]
(version 5.9). Simulation were performed on Intel Core i5-3470
CPU with the clock frequency 3.20 GHz under GNU/Linux
operating system (distribution Fedora 18).
III. RESULTS
Fig. 4 shows the detail of the first millisecond of simulated
cardiac excitation, the onset of an action potential (AP). The
INa MC model was solved using the three suggested integration
methods: FE, MRL, and HOS, as described in the methods
section. The model was solved with time step Δt = 10 μs, Δt =
40 μs, and Δt = 100 μs, except for FE, which was also solved
for Δt = 1 μs, to be used as a reference, but not for Δt =
100 μs, due to instability.
The model excitable cell was initially at the resting state, and
at the time t = 1 ms, an AP was initialized by instantaneous
injection of potassium ions, raising the membrane potential to
Vm = −35 mV. The initial conditions of the states of the INa
MC model are specified in Table I and the initial states of the
remaining variables of the model can be found in the supplementary material. Before the initiation, more than 90% of the
channels reside in the states R and S, which require at least
three transitions to get to the open state. After the initiation, the
channels start to transit rapidly toward the open state O and then
to the state U . Within about 0.7 ms almost all channels reside
in the state U . Then, the channels slowly transit to the state V ,
where they stay until the resting potential Vm is recovered. The
states U and V are similar to the situation when the inactivation
gate h is closed in the gate model. The states S and T have less
than 10% occupancy during all the stages of the AP. The plot
of W is omitted, as this variable changes very little during the
time interval shown.
The results for the time step Δt = 10 μs are consistent in all
panels. The FE is still stable at time step Δt = 40 μs, however,
compared to MRL and HOS, the FE solution is less accurate,
resulting in a higher peak and faster decay of both the open state
O occupancy and the resulting INa current.
Comparison of the solutions for O(t) with the reference
O∗ (t), obtained by FE with Δt = 1 μs, is shown in Fig. 4
(first column, fourth row). We see that MRL and HOS approximate O∗ better than FE at the same time steps. This is consistent with results of evaluation of the error estimates over the
AP solution: we have max(EFE ) ≈ 2700, max(EM RL ) ≈ 118,
max(EHOS ) ≈ 125, with max(EOS ) ≈ 19, all in ms−2 , and
min(EFE /EHOS ) ≈ 2.3, min(EFE /EM RL ) ≈ 3.2 (see the Supplement). This suggests that exponential integrators can be useful, for their accuracy, even when instability is not a concern,
say in systems with slower dynamics, such as IKs .
At longer time steps, FE is unstable (Fig. 1 illustrates a mild
case of the instability), while MRL and HOS continue to provide stable solutions. At Δt = 100 μs, the peak of the most
important component of u , the occupancy of the open state O,
is slightly lower than at shorter timesteps. On the other hand,
the decrease of the peak of the total INa current in these two

STARÝ AND BIKTASHEV: EXPONENTIAL INTEGRATORS FOR A MARKOV CHAIN MODEL OF THE FAST SODIUM CHANNEL

1075

Fig. 4. Cardiac cell AP simulations (detail of the first second) with IN a MC model solved using: HOS method–light colours; MRL–semi-dark colours; and
FE–dark colours; The left column shows: membrane potential (V m ), sodium current (IN a ), error calculated as deviation from the states conservation law, and
deviation of the state occupancy O from the solution using FE with Δt = 1 μs (O ∗ ); the other two columns show the state occupancies. The model was solved
with time step Δt = 10 μs, Δt = 40 μs, and Δt = 100 μs represented by thick, middle thick, thin lines, respectively.

methods (HOS, MRL at Δt = 100 μs) is relatively small compared to the decrease of the open state occupancy. Also, the
decay of the INa current in the MRL Δt = 100 μs is slower
than in the other cases. Note that the lead of the APs onsets
at Δt = 100 μs against smaller time steps is comparable to the
value of Δt.
Approximation of the whole APs rather than just their onsets
is illustrated in Fig. 5.
Further increase of the time steps (not shown) in MRL and
HOS gives significant errors in the AP, e.g., at Δt = 200 μs
there is a 30-mV overshoot. Stability persists for much longer:
for HOS the solution becomes unphysical (a negative concentration) at about Δt = 2 ms without loss of stability, and for MRL
an instability occurs at about 7.5 ms, although the solution is
then also very different from the true AP.
Table III illustrates the efficiency of the three methods at three
different time steps Δt. This was done by measuring time taken
by simulations consisting of 100 pulses with a cycle length
(CL) of 1000 ms without any output. The pulses were initialized
by an instantaneous injection of potassium ions of a sufficient
amount to set the membrane potential to Vm = −35 mV. The
table shows times taken by the whole cell model (“Total”) and

by the MC model computations (“INa ”). The times shown are
median values from six separate simulations in each case to
minimize the effect of other processes running on the computer.
At Δt = 10 μs, FE is the most efficient method. Computation of INa accounts for 21.8% and 31.5% of the overall computation cost in FE and HOS, respectively. Tabulation allows
reduction of the computation cost of INa by 49.1% and 65.3%
in FE and HOS. MRL was used only with tabulation using
the precomputed eigenvalues and eigenvectors matrices and the
computational cost at the Δt = 10 μs is comparable with FE.
These proportions are consistent with the results at time step
Δt = 40 μs and Δt = 100 μs for MRL and HOS. So, at the
same time step, the computational costs of the proposed methods are slightly higher, but the accuracies are somewhat better,
compared to FE. The most important benefit of HOS and MRL
is, however, the possibility of using larger time steps.
IV. CONCLUSION
Both proposed methods maintain stability at larger time steps,
and improve the accuracy of the solution at the same time
step, compared to the explicit ODE solver (FE). When tabulated,

1076

IEEE TRANSACTIONS ON BIOMEDICAL ENGINEERING, VOL. 62, NO. 4, APRIL 2015

subsystems can be solved using diagonalization like in the MRL
method, which might require additional computational time.
Finally, we comment on the order of approximation. In this
paper, we considered first-order schemes, and they are most
popular in practice. However, the approximation order can
be improved by using more sophisticated methods, both for the
whole cell model (say using Runge–Kutta approach) and for the
exponential solvers. For the original RL scheme, higher-order
variants have been proposed and tested [4], [5], and the same
ideas can be extended to the matrix case as well. Naturally, HOS
method may then need to involve a more sophisticated operator
splitting method to correspond.
Another appealing direction for further research is application
of the proposed methods to other important MC models. MRL
is straightforward for any MC where TRs depend only on one
variable, otherwise tabulation will be a bit more problematic.
The success of the HOS approach will depend on the asymptotic
properties of the TRs.
Fig. 5. Approximation properties of HOS (Δt = 100 μs) and MRL (Δt =
100 μs) compared to FE (Δt = 10 μs) during a single cell simulation of four
AP with CL of 1000 ms (logarithmic scale): membrane potential V m (top panel),
open state occupancy O (bottom panel).

TABLE III
ELAPSED SIMULATION TIME [S]

ACKNOWLEDGMENT
The authors would like to thank C. E. Clancy for the permission to use the original authors code for this study and
S. Sherwin for encouraging discussions.
REFERENCES

Δ t = 10 μs

Δ t = 40 μs

Δ t = 100 μs

I N a Model

IN a

Total

IN a

Total

IN a

Total

FE
FE (tab.)
MRL (tab.)
HOS
HOS (tab.)

4.88
2.48
2.96
8.11
2.81

22.34
19.98
20.45
25.71
20.31

1.24
0.60
0.74
2.01
0.71

5.59
5.01
5.16
6.43
5.11

0.28
0.81
0.29

2.06
2.58
2.05

Cell model [8] 100 pulses with CL = 1000 ms.

those methods are comparable to FE in computational cost. As
expected, using larger time steps results in reduction of computational cost.
MRL method extends the popular RL method, developed
for gate models, to MC models. MRL is more universal than
HOS, and may be made “automatic.” The only restriction of our
implementation is the assumption of diagonalizability of matrix
A(Vm ) for all voltages. If in another model this happens not
to be the case, then some more sophisticated approach would
be needed. If nondiagonalizability is a regular feature, say due
to identical definitions of some of the TRs, then a Jordan form
can be used instead; if it only happens at selected voltages, then
interpolation of matrices T (Vm ) may be sufficient.
HOS method depends on the possibility to split the TR to multiple (three in our case) subsystems according to their speeds,
and solve each of the subsystems on its own. Our solution benefits from the possibility of solving the fast subsystems analytically. Implementing the analytical solution results in even
better speed-up as the resulting timestepping matrices are sparse.
However, the possibility of a suitable analytical solution is not
guaranteed for a general MC model. In this case, the fast time

[1] A. L. Hodgkin and A. F. Huxley, “A quantitative description of membrane current and its application to conduction and excitation in nerve,”
J. Physiol., vol. 117, no. 4, pp. 500–544, 1952.
[2] R. L. Burden and J. D. Faires, Numerical Analysis. Boston, MA, USA:
Brooks/Cole, 2011.
[3] S. Rush and H. Larsen, “A practical algorithm for solving dynamic membrane equations,” IEEE Trans. Biomed. Eng., vol. 25, no. 4, pp. 389–392,
Jul. 1978.
[4] J. Sundnes, R. Artebrant, O. Skavhaug, and A. Tveito, “A second-order
algorithm for solving dynamic cell membrane equations,” IEEE Trans.
Biomed. Eng., vol. 56, no. 10, pp. 2546–2548, Oct. 2009.
[5] M. Perego and A. Veneziani, “An efficient generalization of the RushLarsen method for solving electro-physiology membrane equations,” Electron. Trans. Numerical Anal., vol. 35, pp. 234–256, 2009.
[6] M. E. Marsh, S. T. Ziaratgahi, and R. J. Spiteri, “The secrets to the success
of the Rush-Larsen method and its generalizations,” IEEE Trans. Biomed.
Eng., vol. 59, no. 9, pp. 2506–2515, Sep. 2012.
[7] A. Reidman and K. Trivedi, “Numerical transient analysis of Markov
models,” Comput. Oper. Res., vol. 15, no. 1, pp. 19–36, 1988.
[8] C. E. Clancy and Y. Rudy, “Na+ channel mutation that causes both Brugada and long-QT syndrome phenotypes: A simulation study of mechanism,” Circulation, vol. 105, no. 10, pp. 1208–1213, 2002.
[9] C. H. Luo and Y. Rudy, “A dynamic-model of the cardiac ventricular action-potential. I. Simulations of ionic currents and concentration
changes,” Circulation Res., vol. 74, no. 6, pp. 1071–1096, 1994.
[10] J. L. Zeng, K. R. Laurita, D. S. Rosenbaum, and Y. Rudy, “Two components of the delayed rectifier K+ current in ventricular myocytes of the
guinea-pig type. Theoretical formulation and their role in repolarization,”
Circulation Res., vol. 77, no. 1, pp. 140–152, 1995.
[11] P. C. Viswanathan, R. M. Shaw, and Y. Rudy, “Effects of IK r and IK s
heterogeneity on action potential duration and its rate dependence: A
simulation study,” Circulation, vol. 99, no. 18, pp. 2466–2474, May. 1999.
[12] W. Stein et al. (2013). Sage Mathematics Software (Version 5.9) [Online].
Available: http://www.sagemath.org

Authors’, photographs and biographies not available at the time of publication.

