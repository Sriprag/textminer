2698

IEEE TRANSACTIONS ON BIOMEDICAL ENGINEERING, VOL. 61, NO. 11, NOVEMBER 2014

Constraint-Based Soft Tissue Simulation for Virtual
Surgical Training
Wen Tang∗ and Tao Ruan Wan, Member, IEEE

Abstract—Most of surgical simulators employ a linear elastic
model to simulate soft tissue material properties due to its computational efficiency and the simplicity. However, soft tissues often have elaborate nonlinear material characteristics. Most prominently, soft tissues are soft and compliant to small strains, but after
initial deformations they are very resistant to further deformations
even under large forces. Such material characteristic is referred as
the nonlinear material incompliant which is computationally expensive and numerically difficult to simulate. This paper presents a
constraint-based finite-element algorithm to simulate the nonlinear
incompliant tissue materials efficiently for interactive simulation
applications such as virtual surgery. Firstly, the proposed algorithm models the material stiffness behavior of soft tissues with a
set of 3-D strain limit constraints on deformation strain tensors.
By enforcing a large number of geometric constraints to achieve
the material stiffness, the algorithm reduces the task of solving
stiff equations of motion with a general numerical solver to iteratively resolving a set of constraints with a nonlinear Gauss–Seidel
iterative process. Secondly, as a Gauss–Seidel method processes
constraints individually, in order to speed up the global convergence of the large constrained system, a multiresolution hierarchy
structure is also used to accelerate the computation significantly,
making interactive simulations possible at a high level of details .
Finally, this paper also presents a simple-to-build data acquisition
system to validate simulation results with ex vivo tissue measurements. An interactive virtual reality-based simulation system is
also demonstrated.
Index Terms—Nonlinear soft tissue simulation and modeling,
robotic-assisted surgery, virtual surgical training.

I. INTRODUCTION
FFICIENT and accurate simulation of biological soft tissues is a key computational component in virtual reality
(VR)-based surgical simulators, as well as in robotic-assisted
surgery and image-guided surgery for intraoperative dynamic
guidance [23]. Despite the rapid development in computer simulation technologies, achieving accurate soft tissue simulation remains challenging, especially medical applications require fast
and accurate computations in order to accommodate user interactions and haptic feedbacks.
Modeling material nonlinearity of biological tissues often
involves setting up complex constitutive models to determine
deformation behaviors of soft tissues [3], [16]. It is well acknowledged that tuning material parameters for these consti-

E

Manuscript received January 15, 2014; revised April 11, 2014; accepted May
14, 2014. Date of publication May 23, 2014; date of current version October
16, 2014. Asterisk indicates corresponding author.
∗ W. Tang is with the School of Computing, University of Teesside, Middlesbrough, TS1 3BA, U.K. (e-mail: w.tang@tees.ac.uk).
T. R. Wan is with School of Informatics, University of Bradford, Bradford
BD7 1DP, U.K. (e-mail: t.wan@bradford.ac.uk).
Color versions of one or more of the figures in this paper are available online
at http://ieeexplore.ieee.org.
Digital Object Identifier 10.1109/TBME.2014.2326009

tutive models to find approximations to their real-world counterparts is a complex and time-consuming task [13]. In recent
years, efforts have been made to model the parameterization of
complex biomechanical models as an inverse problem that are
solved by optimization. For example, the estimation of elastic
properties of soft tissue is solved as a least-squares problem
in [6], and an evolutionary algorithm is used to estimate the
parameters of a complex organ behavior model taking into account of various real patient datasets in [24]. Previous methods
for accelerating nonlinear finite-element computations include
precomputing various quantities of a constitutive model [14],
modal analysis to compute deformations in a reduced subspace
[12], as well as GPU executions [22] and data-driven approaches
[3]. Still, a linear model is mostly used in surgical simulators
due to its computational efficiency and simplicity [5], [19].
The distinctive feature of soft tissues such as skin and relaxed
muscles is the so-called nonlinear material incompliant, which
are easily deformed under small forces, but beyond some thresholds soft tissues become very stiff and resistant to large deformations even under large forces [4]. The stiffness characteristic
is due to the macroscopic behavior of the materials that are
submissive to small deformations only within some thresholds.
Such material stiffness determines the nonlinear stress–strain
relationship of soft tissues and is the key in capturing physical characteristics of the materials. In this paper ,we propose
a constraint-based algorithm to simulate the highly incompliant constitutive regimes of soft tissues through the use of a
large number of geometric constraints to enforce the material
stiffness.
Most numerical methods perform poorly for large constraint
systems both in terms of system convergency and computational efficiency, because the equations of motion of a large
constraint system are infinitely stiff and a small time integration
step must be carefully chosen to avoid the numerical instability. Instead of using a general numerical solver to solve a set
of stiff equations of motion, the proposed algorithm employs
a Gauss–Seidel type procedure to resolve the constraints iteratively. As Gauss–Seidel methods process constraints individually, in order to speed up the global convergence of the large
constrained system, a multiresolution hierarchy mesh structure is developed to accelerate the global convergence of the
constrained system significantly. The multiresolution approach
enforces constraints at each level of the hierarchy structure
with different mesh resolutions, making interactive simulations
possible for highly incompliant tissue properties at a higher
level of detail. We show a simple-to-build acquisition system
to validate the simulation results with ex vivo tissue measurements and an interactive VR-based simulation system is also
demonstrated.

0018-9294 © 2014 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See http://www.ieee.org/publications standards/publications/rights/index.html for more information.

TANG AND WAN: CONSTRAINT-BASED SOFT TISSUE SIMULATION FOR VIRTUAL SURGICAL TRAINING

II. MODELING OF NONLINEAR SOFT TISSUES
A. Principal Stretches
Classic approaches try to use various constitutive models to
describe the stress–strain relationship to model nonlinear soft
tissue behaviors [16]. Instead, we apply constraints directly on
the symmetric strain tensor of each finite element (tetrahedron
or triangle) to modify the stress–strain relationship nonlinearly
to prevent soft tissues from excessive stretching or compressing.
We first diagonalize the deformation gradient of each element.
The material stiffness is characterized by strain ratios with some
thresholds along principal directions of deformations. We then
apply constraints directly on the symmetric strain tensor of each
element.
Most cellular tissues such as livers and skins are treated as
isotropic, hyperelastic, and incompressible materials [7], [10].
The state of soft tissue deformation is defined by the deformation
gradient F, which is a 3 × 3 matrix given by
F(X) =

∂x
∂X

(1)

where X is the coordinate of a vertex in the material space
and x is the coordinate in the world space. We compute the
singular value decomposition of the deformation gradient on
each tetrahedral element F = UΣ̂VT , where U and V are
orthonormal matrices, and Σ̂ is a nonnegative diagonal matrix
expressed by
Σ̂ = diag{λ1 , λ2 , λ3 }.

(2)

The nonnegative diagonal entries λ1 , λ2 , and λ3 are eigenvalues representing ratios of stretch and compression in the three
principal directions invariant to rigid transformations. Using
eigenvalues of the principle strain to model soft tissue material
is not new in biomedical engineering, for example, in the case of
uniaxial deformations, the deformation gradient is modeled as a
1
1
diagonal tensor given by [9]: Σ̂ = diag{λ, λ− 2 , λ− 2 }, where
λ is the (applied) stretch in the principal directions. We employ
the modified Neo-Hookean material using an energy density
function defined by [3]
W =

β
μ
(I1 − 3) − μ log J + (log J)2
2
2

(3)

E
Eν
where μ = 2(1+ν
) and β = (1+ν )(1−2ν ) are the Lamé coefficients with E being the Young’s modulus and ν being the Poisson ratio. Estimation of the elasticity parameters of E and ν
is described in Section IV-A. The three principal invariants
+ λ22 + λ23 , I2 = λ41 + λ42 + λ43 , and
are expressed as I1 = λ21 √
2 2 2
I3 = λ1 λ2 λ3 . In (3), J = I3 . We then analytically differentiate energy (3) with respect to the invariants to compute forces.
Therefore, for stress defined by a strain energy density function,
it can be shown that the diagonal matrix Σ̂ yields a diagonal
stress that is invariant under the rotation of the material space
[3]


∂W ∂W ∂W
,
,
.
(4)
P(Σ̂) = diag
∂λ1 ∂λ2 ∂λ3

2699

Once we have calculated the stress P(F), the force on a
tetrahedral vertex can be found by multiplying P(F) with an
area-weighted normal of the tetrahedron [11]. Furthermore, we
implement a multithreading algorithm to parallel compute the
SVD procedures on tetrahedron elements in (2) to improve the
computational time significantly, since SVD is a costly computation (see Section IV-B for details).
B. Strain Limiting Constraints
Equation (4) reveals that the elastic energy is a function of the
singular values λ1 , λ2 , λ3 of the deformation gradient, which
are stretches and compressions corresponding to the scaling
in the orthogonal principal strain directions. Our constraintbased algorithm enforces the 3-D orthogonal scaling constraints
on the principal strains by clamping the principal stretch ratios at defined maximum and minimum values, resulting λm ax
and λm in for isotropic scaling. For example, λm ax = 1.25 and
λm in = 0.75 specify the maximum of 25% of stretching and
compressing along the principal strain directions, preventing a
tetrahedron from undergoing large deformations. This leads to
three clamped principal strains defined by
in
m ax
)
λ∗1 = clamp(λ1 , λm
1 , λ1
in
m ax
λ∗2 = clamp(λ2 , λm
)
2 , λ2
in
m ax
λ∗3 = clamp(λ3 , λm
)
3 , λ3

(5)

Thus, a new diagonal strain matrix is constructed based on
the constrained values as: Σ̂∗ = diag{λ∗1 , λ∗2 , λ∗3 }. Substituting
Σ̂∗ into (4) yields a new constrained stress tensor


∂W ∂W ∂W
P(Σ̂∗ ) = diag
,
,
.
(6)
∂λ∗1 ∂λ∗2 ∂λ∗3
Thus, deformation forces on tetrahedron nodes are recomputed based on the constrained (6). The presence of constraints
in the principal directions is clamping the stress at some maximum values and modifying the constitutive model near the
origin to remove the singularity, which regularizes the system
and enables dynamic simulations remain stable even for deformable objects that simultaneously undergo both free-flying
rigid motion and deformations. More importantly, these modifications can be applied to arbitrary constitutive models and our
experimental setup is aimed at validating the algorithm to be as
accurate as possible for medical simulations.
C. Multiresolution Constraint Enforcement
The proposed strain-limiting algorithm reduces a global solution approach of using the classic method of solving stiff equations of motion to a set of Gauss–Seidel iterations. Because a
Gauss–Seidel type solver enforces constraints individually, it
can be slow to convergence for a system with a large number
of constraints. Taking the view that a hierarchical constraint enforcement can greatly accelerate the system convergence [15],
we construct a multilevel hierarchical structure using different
tetrahedral mesh resolutions at multilevels and each level of

2700

IEEE TRANSACTIONS ON BIOMEDICAL ENGINEERING, VOL. 61, NO. 11, NOVEMBER 2014

Fig. 1. Multiresolution hierarchy: a base surface mesh of a liver is extracted from an MRI dataset and a fine to coarse hierarchy of tetrahedral meshes is generated
from the base mesh, containing 17.1, 15.3, 0.6, and 0.23 K tetrahedra at each level, respectively.

Fig. 2. Geometric correspondence between elements in a tetrahedral hierarchy: solid lines are a coarse mesh H (j ) containing a subset of higher resolution
meshes H (i ) with barycentric coordinates highlighted in dotted lines.

the hierarchy is solved by a Gauss–Seidel iterative process.
Therefore, our multiresolution approach enforces unilateral
constraints from fine meshes to coarser meshes, and then translate the solutions of coarser meshes back to finer levels. This
process is termed as up- and down-sampling processes. Fig. 2
shows the geometric correspondence between elements in a
tetrahedral hierarchy.
The multiresolution hierarchy process starts with the physically based computation on the bases mesh. Information of the
base mesh is down-sampled to carry out the simulation on coarse
meshes. At each coarser mesh level, nonlinear Gauss–Seidel iterations are run to enforce limiting constraints on the current
coarser level. Results of the nonlinear stain limiting algorithm
are then up-sampled on finer level up the hierarchical chain
to enforce constraints on the base mesh. We obtained an MRI
dataset of a liver from our local hospital with ethic clearance
approved by our organizations. The segmentation process was
carried out manually in the medical image open source software
GIMIAS [8] to obtain a base surface mesh of the liver. We then
created a hierarchy of surface meshes using the base mesh. TetGen [21] was used to convert surface meshes into tetrahedral
meshes, containing m levels of meshes H (i) , for i = 0, m − 1,
from the finest base level H (0) to the coarsest level of mesh
H (m −1) (see Fig. 1).
For every tetrahedron in a coarser mesh H (j ) , all vertices of a
finer mesh H (i) inside this tetrahedron are determined. For each
vertex in H (i) , its closest element in H(j) and its corresponding barycentric coordinates are computed. The coordinates are
used as interpolation weights for sampling a scalar or a vector field defined over the coarser mesh to the finer mesh using
linear interpolation. Mapping values from the finer mesh to the
coarse mesh is done using these same weights. The multiresolution mesh hierarchy process pipeline is shown in Fig. 3. The
method described here can be divided into a number of stages
of computations:

Fig. 3. Multiresolution mesh hierarchy process pipeline for our simulation
system.

1) dynamic simulation and enforce constraints;
2) downsampling projections;
3) strain limiting on coarse meshes;
4) enforce constraints;
5) upsampling strain limited results.
Given an initial displacement values on the fine mesh, we
perform the multiresolution algorithm on the hierarchical data
structure
1) sample positions on the finest level H (0) to obtain pi on
the coarsest level H (m −1) ;
2) loop;
3) start at the coarsest level: H (i) ← H (m −1) ;
4) save all positions pi of level H (i) in a state vector qi ;
5) run linear Gauss–Seidel iterations to enforce strain limiting constraints;
6) if H (i) = 0 stop else go to the next finer level: H (i) ←
H (i−1) ;
7) sample positions on level H (i) ;
8) end loop.
Color maps in Fig. 4 show strain distributions of a soft tissue
simulation. In these images, strain values are scaled to between
[0, 1], where value 0 representing the green color shows the
zero strain of the deformation and value 1 representing in red
indicates the largest strain of the deformation. Images (a) and
(b) compare the convergency of the constraint enforcements between a multiresolution hierarchy approach to that of using only
a single mesh with the same finest level mesh resolution. As can
be seen that the multiresolution algorithm archives better strain
convergency with only 20 constraint iterations in total, whereas
the fine only single mesh simulation shows larger strains after
50 constraint iterations. This test illustrates the effectiveness
of the proposed multiresolution algorithm for modeling highly

TANG AND WAN: CONSTRAINT-BASED SOFT TISSUE SIMULATION FOR VIRTUAL SURGICAL TRAINING

2701

Fig. 4. Strain distributions shown in color map on a soft tissue (dark grey indicates large strains and light grey indicates small strains). Images (a) and (b) show
the finest mesh level, where using a single mesh resolution requires a large number of iterations compared with a multiresolution with only 20 iterations. Images
(c), (d), and (e) show a three-level multiresolution hierarchy strain distributions, the finer the mesh is, there are less strains and the better material stiffness.

Fig. 5. (a) Overview of the data acquisition system and its components: the
force probe was inserted into the trocar cover that was fitted with a linear
position sensor. The force sensor was attached to the tip of the probe and the
A/D interface kit was connected to a computer on a Windows operating system,
and the force–displacement measurement was taken from ex vivo tissue samples.
(b) Stretching experiment setup.

incompliant soft tissue materials. The strain distributions across
different levels of a three-level mesh hierarchy are shown in
images (c), (d), and (e) with five iterations on each level.

III. DATA ACQUISITION
We developed a simple-to-build data acquisition system for
capturing soft tissue deformations ex vivo, which was used to
record the indentation and stretch tests on ex vivo samples.
Simulation results were validated against results obtained by
these tests. While in vivo experiments can measure soft tissue
behaviors in its physiological state [20], ex vivo tests, however,
offer good controls over laboratory experimental conditions [4].

A. Experimental Setup
For indentation tests, the force measurement was obtained
by a force contact prob (a long thin solid shaft of different tip
shapes). A square force sensing resistor of 1.5 in × 1.5 in was
attached to the prob tip for measuring tissue force responses.
Fig. 5 shows schematics of the system. The force sensor was
connected to a Phidget Voltage Divider and a USB Interface Kit
8/8/8 by Trossen Robotics for A/D converting controlled from
Windows. A force–displacement transducer (linear position sensor) was fitted inside a trocar cover in which the probe was sliding through to take the measurement of force–displacement for
indentation tests.

Tests were made along a user-defined straight path with a
constant velocity. The force sensor has the pressure range [1.5,
150 psi] and the actuation force range [100 g, 10 kg] with
a repeatable force reading. The linear position sensor had a
6-mm-wide active cavity.
The data acquisition system also consisted of a testing board
and a pair of slats with one slat fixed on the board and another
was free to move vertically and horizontally. The stretching
measurements were conducted by using this novel experimental
setup aimed at capturing tissue stretch behaviors by measuring
stretch ratios using the biaxial tensile method [4]. The same
force sensor and the linear position sensor were used for a skin
sample of size 80 mm × 80 mm fixed between the two slats on
the testing board. Repeated stretching tests were carried out in
the two orthogonal stretch directions.

B. Experimental Procedures
Indentation tests were aimed at validating the force–
displacement responses of computer simulation results. These
tests also demonstrated tissue relaxation behaviors due to constant and periodic step strains. The stretch tests were aimed
at evaluating force-stretch behaviors of the simulated soft
tissue.
Porcine liver and abdominal tissue samples were tested. Tissue samples (previously frozen) were procured just slightly over
a 24-h period postmortem. We precondition tissues samples as
described in research literature [7] to obtain consistent results.
All samples were tested at room temperature (21 ◦ C ± 3 ◦ C).
Three indentation depths were applied with 5 mm (testing
data-1), 10 mm (testing data-2), and 15 mm (testing data-3)
to capture the force–displacement responses, respectively. Deformation examples were taken from a set of different surface
points that were well distributed over surface of the sample tissues. In tissue relaxation tests, a sample was indented to the
predefined depths in separate trials; then, the indenter was kept
in place until the tissue was fully relaxed. For stretch tests,
the skin tissue was stretched along each of the biaxial directions to a predefined stretch length. Fig. 6 captures nonlinear characteristics of the skin and shows a simulation example of the proposed algorithm on a three-level multiresolution
hierarchy.

2702

IEEE TRANSACTIONS ON BIOMEDICAL ENGINEERING, VOL. 61, NO. 11, NOVEMBER 2014

TABLE I
ESTIMATION OF ELASTICITIES
Parameter
Porcine-liver
E (kPa)
ν
Porcine-abdominal
E (kPa)
ν
Skin-pad
E (kPa)
ν

Initial

Iterations

Estimate

15
0.45

1500
1500

16.36
0.44

30
0.40

2000
2000

32.15
0.43

50
0.45

1500
1500

47.75
0.46

Fig. 6. Simulation example of horizontal stretch of the simulated skin using
three levels of multiresolution triangle elements with 2048, 968, and 338 triangle
elements at level 0, 1, and 2, respectively.

IV. RESULTS AND DISCUSSION
A. Material Parameters
In the context of medical simulations, the finite-element
model with the modified Neo-Hookean material is shown in
(3). It is still a challenging problem to obtain material properties
as Young’s modulus and Poission ratio. In this paper, the elasticity parameter estimations is carried out as an inverse problem
by minimizing the quadratic norm of the difference between the
measured displacements obtained with the data acquisition system and the displacements resulted from the simulation model
[6]. The recovered Young’s modulus and Poisson ratio through
an offline optimization program are then used in the multiresolution strain limiting simulations.
1) Inverse Problem: Assuming soft tissues are roughly incompressible isotropic homogeneous materials can significantly
reduce the number of elasticity parameters [17]. Furthermore,
according to [7], Poisson ratio of soft tissues is selected in the
range of 0.35 < ν < 0.45. During an optimization process, if
the value of Poisson ratio is fixed, it leaves Young’s modulus as
the only unknown.
After applying the finite-element method, (7) describes the
external force f and displacement u for all the nodes
Ku = f

(7)

where K is the stiffness matrix, which depends on the elasticity parameters (Young’s modulus and Poisson ratio, and the
geometry of the elements; f is a vector of external forces. For a
3-D object with N nodes, K is a 3N × 3N matrix. The soft tissue material parameters needed in the simulator are p = [E, ν],
where E is Young’s modulus and ν is Poisson ratio. For a set
of given indentation forces, displacements of a group points on
tested tissue samples and the simulated soft tissues are recorded.
The objective function to be minimized is defined as the difference between the displacements ur (p) in the sample tissue and
the displacements us (p) in simulated tissue at the corresponding
locations
1 s
u (p) − ur (p)2 .
Φ(p) =
(8)
2

Fig. 7. Computational time with respect to CPU cores used and the number
of tetrahedra computed.

The parameter p = [E, ν] is iteratively updated using a descent algorithm. We employ the L-BFGS method based on the
numerical analysis library ALGLIB [1] to minimize the above
objective function. At the kth iteration, a descent direction Δpk
is computed based on the gradient of Φ, and we search for an
optimal step size λ along the direction based on the value and
slop of the function
Φ(λ) = Φ(pk + λΔpk )

(9)

where pk is the vector containing the current estimate of the
elasticity parameters. The gradient of the objective function is
given by the chain rule

(10)
∇Φ(p) =
JT Dus (p) − ur (p)
where J is the Jacobian matrix of u(p) and D is a matrix with
each row essentially the spatial derivative of us (p) − ur (p)
with respect to the jth axis. By differentiating both sides of
(7), the derivatives of u with respect to the elasticities can be
computed


 ∂u 
∂K
u+K
= 0.
(11)
∂Ej
∂Ej
Therefore, the Jacobian matrix for Young’s modulus
	 can
 be
computed by solving (11) for each column Jj , K ∂∂Euj =


∂K
∂ E j u, similarly, solving for the Jacobian matrix for Poisson ratio. The L-BFGS optimization algorithm uses the history
of the gradient in previous steps to estimate the curvature and

TANG AND WAN: CONSTRAINT-BASED SOFT TISSUE SIMULATION FOR VIRTUAL SURGICAL TRAINING

Fig. 8. Computational time comparison of single- and multiresolution simulations: single resolution has 3200 elements, multiresolution has four levels
with 3200 elements (level-0), 1800 elements (level-1), 800 elements (level-2),
and 200 elements (level-3).

2703

Fig. 9. Comparisons between (a) sample tissues and (b) simulated soft tissues,
and (c) a simulated heart example.

TABLE II
TIME AND SIMULATION PERFORMANCE

(0)

No. tets H
levels
Time/frame
Step length
λmax
E(kPa)
ν
Iterations

Porcine-liver

Porcine-abdominal

Skin-pad

17.1 K
4
8.45 s
0.004
1.59
16.36
0.44
155

16.4 K
4
7.0 s
0.004
1.5
32.15
0.43
165

11.6 K
4
6.58 s
0.001
1.5
47.75
0.46
125

compute a symmetric positive-definite approximation of the
Hessian matrix [18]. Therefore, we do not need to supply the
Hessian to the optimizer. To accelerate the optimization process, while optimizing Young’s modulus, Poisson ratio is kept
constant for a number of steps, then using the resulting Young’s
modulus to optimize Poisson ratio fora number of steps, and so
on.
2) Parameter Estimation: Initial values of elasticity parameters for optimization are chosen based on common values used
in medical simulation, for Young’s modulus within the range 10
kPa < E < 60 kPa and Poisson ratio between 0.3 < ν < 0.45.
Table I lists initial material parameters and the estimated parameter values through optimization.
Fixed number of iterations is used in the optimization process
for parameter examinations. The optimization is an offline process. The elasticity parameters resulting from the optimization
are then used in the multiresolution strain limiting simulations.
B. Simulation of Soft Tissue
We developed a simulation system in C++ using OpenGL
graphics API. In our implementation, the single-value decomposition (SVD) computation for each tetrahedron element is parallel computed with multithreading operations. A mesh dataset
is designed into tetrahedral batches which are dedicated to a list
of threads by the multithreading component. Since a node can
belong to several tetrahedron elements, care must be taken to
ensure that the memory of same variables is not accessed by

Fig. 10. Comparison of the relaxation processes between simulated and experiment tissues for 10-mm indentation depth.

different threads at the same time, otherwise the result will be
undefined. The approach taken in our system implementation
is not to update the forces directly on the nodes soon after the
thread finishing, but to write its value into a temporary buffer
thatduplicates the shared nodes. This buffer is then accessed
after the parallel pass so that each node is updated safely.
Fig. 7 shows the results of computational time in milliseconds
with respect to the number of CPU cores used and the number
of tetrahedra, demonstrating an overall speedup in parallel computing SVD operations. It is worth noting that the speedup using
multicores in parallel computing is limited by the time needed
for the sequential fraction of the program where threads for one
step in the algorithm have to wait for the threads of the previous
step to signal that they are ready. Although the synchronization and reconstruction processes introduce slight computation
overhead as seen in Fig. 7 where the cost of synchronization outweighs the benefit of parallel when using three CPU cores than
two cores, it is not a problem because the overall performance
gain is definitely noticeable.
Tests were carried out in a single processor eight-core 3.40GHz Intel Xeon CPU with 16-GB RAM. The Euler integration
scheme was employed with step lengths chosen between 0.001
and 0.004 as shown in Table 1. Fig. 8 shows computational speed

2704

IEEE TRANSACTIONS ON BIOMEDICAL ENGINEERING, VOL. 61, NO. 11, NOVEMBER 2014

Fig. 11.

Force–displacement measurements taken from ex vivo (a) porcine-abdominal, (b) porcine-liver, and (c) skin-pad tissues and simulation data.

Fig. 12.

(a) and (b): stretching experiment compares stretching strain–force responses between simulated and skin-pad sample.

up by using the multiresolution approach. Fig. 8 shows computation times on a multiresolution hierarchy with 3200 elements
at the level-0, and 1800, 800, and 200 elements at levels 1, 2,
and 3, respectively. A single mesh with 3200 elements and 200
constrained iterations requires an average of 40-ms computation
time, whereas a multiresolution four-level approach requires an
average of 11-ms for a total of 200 iterations (50 iterations
on each level). The significant speed up demonstrates that the
multiresolution approach can quickly archive convergence, because only 50 iterations are applied to the most dense mesh
with 3200 elements. The subsequent meshes in the each hierarchy has far fewer constraints that can be enforced with 50
iterations. As can be seen in Fig. 8, the same multiresolution hierarchy with 20 iterations on each level archives an interactive
6-ms computational time, whereas Table II demonstrates much
higher numbers of tetrahedrons and iterations.
Fig. 9 shows comparisons between ex vivo samples and simulated soft tissues using the multiresolution finite-element algorithm. Parameters used for simulations are listed in Table II.
Images in column (c) show a simulated heart with parameters
E = 50.0 kPa, ν = 0.45, and λmax = 1.20.

C. Validation of the Force and Displacement Relationship
We defined a set of corresponding points both in the sample
tissue and the simulated models, for which force and displacement measurements were taken at these locations to validate the
proposed multiresolution nonlinear simulation algorithm. Two
ex vivo porcine tissues were tested in indentation tests, which
were of a size of 8-cm3 abdominal tissue porcine-abdominal
and a porcine-liver tissue. A suturing skin pad skin-pad of size
8 cm × 12 cm × 2 cm was also used in indentation tests, which
was considered as is an ideal testing media for isotropic soft
tissue materials.
Tissue relaxation tests evaluate the material behavior in terms
of the force–time relationship to show the material nonlinearity after an indentation force being released. Fig. 10 compares
relaxation behaviors of the simulated data and tested tissue samples after 10-mm indentation depth. The close match between
the two demonstrates that the capability of the proposed constrained finite-element algorithm can effectively capture soft tissues’ material properties. Nonlinear material properties of these
samples were evaluated as force–displacement relationships as

TANG AND WAN: CONSTRAINT-BASED SOFT TISSUE SIMULATION FOR VIRTUAL SURGICAL TRAINING

shown in Fig. 11 for indentation tests of simulation and tissue
samples.

2705

proposed approach could capture anisotropy by using different
stretch ratios with respect to each principal directions.
REFERENCES

D. Force and Stretch Ratio
Stretch tests are designed to measure force-deformation responses along two biaxial directions to show material nonlinear
characteristics. The authors in [7] and [4] show that the material
nonlinearity can be expressed as an exponential function given
df
by the force–stretch ratio relationship: |f (λ) = γeα λ , dλ
=
l
αf , λ = l 0 , where f (λ) is the measured force, l and l0 are
the stretched and the rest tissue length, respectively. α and
γ are coefficients of the tissue stiffness which can be found
(λ)
, the stress
through curve-fittings. Taking the derivative dfdλ
due to stretching along two biaxial directions is dependent on
stretching ratio λ. In our stretch tests, λ is the (applied) stretch
in the principal directions in (2).
In Fig. 6, simulation parameters were E = 180, ν = 0.45.
Stretch tests were carried out on a 8 cm2 square skin sample
using the experimental setup shown in Fig. 5. Triangle meshes
were used in our simulation for modeling the skin deformation using the proposed multiresolution algorithm. We build
a 2 × 2 deformation matrix from dx and dX , where x is the
current position and X is the reference position of a vertex.
Thus, we compute 2-D strain-limiting along the two principal stretch directions using triangular elements. Fig. 12(a) and
(b) compares the simulation data with the testing data, which
demonstrates the nonlinear biphasic behavior of the skin tissue under stretch forces with highly stiff incompliant material
behaviors.

V. CONCLUSION AND FUTURE WORK
We present a novel strain-based constraint finite-element
method for simulating nonlinear homogeneous soft tissues efficiently. The algorithm is capable of modeling rich nonlinear
deformations in a straightforward finite-element framework.
The proposed algorithm achieves an average of 11-ms computational time interactive frame rate on a four-level multiresolution hierarchy with 50 constrained iterations on each level,
a 70% speed up compared with a single level with the same
total number of iterations. Therefore, the algorithm offers effective simulations for nonlinear soft tissue properties with highly
incompliant material characteristics. Simulation results were
validated by experimental data captured by a simple-to-build
system. Measurements on ex vivo soft tissues were taken and
compared with simulation data. We would like to implement
a VR suturing application for which the proposed algorithm
is applicable in terms of isotropic and incompliant material
behaviors.
We aim to improve our tests in the future work including
the selection of tissue samples, i.e., tissues that are mixed with
glandular and fibrous materials such as kidney. These soft tissues will challenge the current assumptions of isotropic material
behavior and anisotropic materials will need to be addressed in
our future work. It is also worth exploring to what extent the

[1] ALGLIB User Guide. (Apr. 2014). [Online]. Available: http://www.alglib.
net/
[2] B. Bickel, M. Baecher, A. M. Otaduy, W. Matusik, H. Pfister, and
M. Gross, “Capture and modeling of non-linear heterogeneous soft tissue,” ACM Trans. Graphics—Proc. SIGGRAPH 2009, vol. 28, no. 3,
pp. 1081–1094, Aug. 2009.
[3] J. Bonet and R. D. Wood, Nonlinear Continuum Mechanics for Finite
Element Analysis, 2nd ed. Cambridge, U.K.: Cambridge Univ. Press,
2008.
[4] I. Brouwer, J. Ustin, L. Bentley, A. Sherman, N. Dhruv, and F. Tendick,
“Measuring in vivo animal soft tissue properties for haptic modeling in
surgical simulation,” Stud. Health Technol. Inform., vol. 81, pp. 69–74,
2001.
[5] N. Chentanez, R. Alterovitz, D. Ritchie, L. Cho, K. K. Hauser, K. Goldberg, J. R. Shewchuk, and J. F. O’Brien, “Interactive simulation of surgical needle insertion and steering,” in Proc. ACM SIGGRAPH, Aug. 2009,
pp. 88–1-10.
[6] H. Eskandari, S. E. Salcudean, R. Rohling, and I. Bell, “Real-time solution of the the finite element inverse problem of viscoelasticity,” Inverse
Problems, vol. 27, no. 8, pp. 085002–085002, Aug. 2011.
[7] Y. C. Fung, Biomechanics: Mechanical Properties of Living Tissue, 2nd
ed. New York, NY, USA: Springer-Verlag, 1993.
[8] (Apr. 2013). [Online]. Available: http://www.gimias.net/
[9] G. A. Holzapfel, Nonlinear Solid Mechanics: A Continuum Approach for
Engineering. New York, NY, USA: Wiley, 2004.
[10] J. D. Humphrey, “Continuum biomechanics of soft biological tissues,”
Proc. Roy. Soc. Lond. A, vol. 459, pp. 3–46, 2003.
[11] G. Irving, J. Teran, and R. Fedkiw, “Tetrahedral and hexahedral invertible
finite elements,” Graph. Models, vol. 68, no. 2, pp. 66–89, 2006.
[12] D. James and D. Pai, “DyRT: Dynamic response textures for real time deformation simulation with graphics hardware,” ACM Trans. Graph. (SIGGRAPH Proc.), vol. 21, no. 3, pp. 582–585, 2002.
[13] K. K. Mendis, R. L. Stalnaker, and S. H. Advani, “A constitutive relationship for large deformation finite element modeling of brain tissue,” J.
Biomech. Eng., vol. 117, pp. 279–285, 1995.
[14] M. Müller, L. McMillan, J. Dorsey, and R. Jagnow, “Real-time simulation of deformation and fracture of stiff materials,” in Proc. Eurographic
Workshop Comput. Animation Simul., 2001, pp. 113–124.
[15] M. Müller, “Hierarchical position based dynamics,” in Proc. Virtual Reality Interactions Phys. Simul., 2008, pp. 1–10.
[16] R. W. Ogden, Nonlinear Elastic Deformations. New York, NY, USA:
Dover, 1997.
[17] E. Park and A. M. Maniatty, “Shear modulus reconstruction in dynamic
elastography: Time harmonic case,”Phys. Med. Biol., vol. 51, pp. 3697–
3721, 2006.
[18] J. Nocedal and S. J. Wright, Numerical Optimization, New York, NY,
USA: Springer, 1999.
[19] P. Pratt, D. Stoyanov, M. Visentini-Scarzanella, and G.-Z. Yang, “Dynamic
guidance for robotic surgery using image-constrained biomechanical models,” in Proc. 13th Int. Conf. Med. Image. Comput. Comput.-Assisted Interven., Part I, 2010, pp. 77–85.
[20] E. Samur, M. Sedef, C. Basdogan, L. Avtan, and O. Duzgun, “A robotic
indenter for minimally invasive measurement and characterization of
soft tissue response,” Med. Image Anal., vol. 11, no. 4, pp. 361–373,
2007.
[21] (Nov. 2013). [Online]. Available: http://wias-berlin.de/softwaretetgen/
[22] Z. Taylor, M. Cheng, and S. Ourselin, “High-speed nonlinear finite element
analysis for surgical simulation using graphics processing units,” IEEE
Trans. Med. Imag., vol. 27, no. 5, pp. 650–663, May 2008.
[23] W. Tang, R. T. Wan, D. Gould, T. How, and W. N. John, “A real-time
nonlinear elastic approach to simulating guide-wire and catheter insertions
based on cosserat rod,”IEEE Trans. Biomed. Eng., vol. 59, no. 8, pp. 2211–
2218, Aug. 2012.
[24] P. F. Vidal, P.-F. Villard, and É Lutton, “Tuning of patient-specific
deformable models using an adaptive evolutionary optimization strategy,” IEEE Trans. Biomed. Eng., vol. 59, no. 10, pp. 2942–2949,
Oct. 2012.
[25] H. Wang, J. F. O’ Brien, and R. Ramamoorthi, “Multi-resolution isotropic
strain limiting,” ACM Trans. Graph., vol. 29, no. 6, pp. 156:1–156:10,
2010.

2706

IEEE TRANSACTIONS ON BIOMEDICAL ENGINEERING, VOL. 61, NO. 11, NOVEMBER 2014

Wen Tang received the Ph.D. degree in engineering
and computer science from the University of Leeds,
Leeds, U.K.
She is currently an Associate Professor in
the School of Computing, University of Teesside,
Middlesbrough, U.K. Her research interests are in
physically based computer simulation algorithms,
data-driven analysis and interactive techniques, and
medical simulation and visualization.

Tao Ruan Wan (M’06) received the Ph.D. degree in
engineering and computer science from the University of Leeds, Leeds, U.K.
He is currently with the School of Creative Technology, University of Bradford, Bradford, U.K. as a
Senior Lecturer. His research interests are in the area
of virtual reality simulation and modeling, including
medical image analysis, surgical simulation, interactive technologies in human–computer interactions
and haptic interfaces.

