1764

IEEE JOURNAL OF BIOMEDICAL AND HEALTH INFORMATICS, VOL. 18, NO. 6, NOVEMBER 2014

A Standardized SOA for Clinical Data Interchange
in a Cardiac Telemonitoring Environment
Roberta Gazzarata, Fabio Vergari, Tullio Salmon Cinotti, and Mauro Giacomini, Member, IEEE

Abstract—Care of chronic cardiac patients requires information interchange between patients’ homes, clinical environments,
and the electronic health record. Standards are emerging to support clinical information collection, exchange and management
and to overcome information fragmentation and actors delocalization. Heterogeneity of information sources at patients’ homes calls
for open solutions to collect and accommodate multidomain information, including environmental data. Based on the experience
gained in a European Research Program, this paper presents an
integrated and open approach for clinical data interchange in cardiac telemonitoring applications. This interchange is supported by
the use of standards following the indications provided by the national authorities of the countries involved. Taking into account the
requirements provided by the medical staff involved in the project,
the authors designed and implemented a prototypal middleware,
based on a service-oriented architecture approach, to give a structured and robust tool to congestive heart failure patients for their
personalized telemonitoring. The middleware is represented by a
health record management service, whose interface is compliant to
the healthcare services specification project Retrieve, Locate and
Update Service standard (Level 0), which allows communication
between the agents involved through the exchange of Clinical Document Architecture Release 2 documents. Three performance tests
were carried out and showed that the prototype completely fulfilled
all requirements indicated by the medical staff; however, certain
aspects, such as authentication, security and scalability, should be
deeply analyzed within a future engineering phase.
Index Terms—Electronic health record (EHR), healthcare services specification project (HSSP), healthcare, interoperability,
telemedicine solution.

Manuscript received November 26, 2013; revised May 16, 2014; accepted
June 20, 2014. Date of publication July 1, 2014; date of current version November 3, 2014. This work was supported in part by CHIRON project of the European Joint Undertaking on Embedded Systems ARTEMIS which was cofunded
by the EU and by the National Authorities (CHIRON: GA no. 100228).
R. Gazzarata is with the Department of Informatics, Bioengineering, Robotics
and System Engineering, University of Genoa, Genoa 16145, Italy (e-mail:
roberta.gazzarata@dist.unige.it).
F. Vergari is with the Department of Energy and Information, and the Advanced Research Center on Electronic Systems for Information and Communication Technologies E. De Castro, University of Bologna, Bologna 40125, Italy
(e-mail: fabio.vergari@unibo.it).
T. S. Cinotti is with the Department of Information Science and Engineering
and the Advanced Research Center on Electronic Systems for Information and
Communication Technologies E. De Castro, University of Bologna, Bologna
40125, Italy (e-mail: tullio.salmoncinotti@unibo.it).
M. Giacomini is with the Department of Informatics, Bioengineering, Robotics and System Engineering and the Center of Excellence for
Biomedical Research, University of Genoa, Genoa 16145, Italy (e-mail:
mauro.giacomini@dist.unige.it).
Color versions of one or more of the figures in this paper are available online
at http://ieeexplore.ieee.org.
Digital Object Identifier 10.1109/JBHI.2014.2334372

I. INTRODUCTION
ECHNOLOGICAL-scientific progress in the medical field
is extending the population’s life expectancy all around the
word with the consequence that the population is aging: in fact,
in 1990, a 60 year old person had a life expectancy of 18 years
and in 2011 this period increased to 20 years [1]. The occurrence of chronic diseases and multimorbidity is continuously
increasing. Specifically, in 2008, 58.5% of adult deaths between
the ages of 30 and 70 years were caused by chronic noncommunicable diseases [1]. In the USA, the amounts spent to treat
chronic patient represent 75% of the total health costs [2]. This
percentage is increasing, but the economic constraints (especially in case of sustained public health costs) will force health
stakeholders to find more competitive approaches to treat these
patients [3].
One possible solution is represented by the use of telecare
systems whose main aim is to provide a hospital-like level of
medical assistance to chronic patients while maintaining them
at home with the intensive use of information and communication technologies [4]. According to many reviews, the complete
achievement of this goal has not yet been reached [5]–[7]. Previous studies indicated that one of the main problems of the
acceptance of telemedicine for chronic patients was the lack of
integration with the public health information system [8], [9].
Moreover, Parè et al. stated that “more studies are still required
in this area to build an in-depth body of knowledge related to
its clinical effects, cost effectiveness, impact on the utilization
of health services, and acceptance by health care providers.” In
particular, in the treatment of chronic illnesses, the main focus
should be put on integration of the tele-homecare approach with
the overall patient care process [3]. Lastly, van den Berg et al.
stated that none of the considered studies (even the most recent
ones) were integrated with the regular patient care process; the
cause of this was indicated as the lack of data transfer abilities
of the proposed solutions [7].
Taking into account these issues, the Artemis agency [10]
cofinanced the European project CHIRON (Cyclic and personcentric Health management: Integrated appRoach for hOme,
mobile and clinical eNvironments) [11] from 2010 to 2013.
The main target of the project was to propose an integrated
framework for person-centric health management throughout
the complete care cycle. During the development of the project
two pilot sites were set up to telemonitor seriously ill cardiac
patients (affected by congestive heart failure (CHF)). One of
the project deliverables was a middleware to integrate the data
collected in the patients’ home, summarized in an electronic
health record (EHR), and the hospital environment. The project
had a large participation of technical partners (research centers,

T

2168-2194 © 2014 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See http://www.ieee.org/publications standards/publications/rights/index.html for more information.

GAZZARATA et al.: STANDARDIZED SOA FOR CLINICAL DATA INTERCHANGE IN A CARDIAC TELEMONITORING ENVIRONMENT

universities, and private companies) as well as some medical
partners. The advice of the physicians involved was important in
obtaining both the necessary medical knowledge and in defining
the feature of the final product in order to enhance the probability
of acceptance by the medical community [12]–[15].
Another secondary aim of the CHIRON project was to facilitate the coexistence of the EHR standards (Health Level Seven
Version 3 (HL7 v3)/International Organization for Standardization (ISO) Clinical Document Architecture Release 2 (CDA
R2) [16], European Committee for Standardization (CEN)/ISO
13606 [17] and openEHR [18], [19]) in a real application environment. The authors focused their activity on this target.
Based on the experience gained in the project, the paper
presents an integrated and open approach for clinical data interchange in cardiac telemonitoring applications supporting the
most popular emerging standards. In this project, two different
approaches were used to meet the requirements of the CEN/ISO
13606: HL7 CDA R2 and openEHR [20]. The proposed solution is based on the service-oriented architecture (SOA) and was
designed and developed within the CHIRON project.
This paper is organized as follows: the next section enlightens
some of the critical aspects of SOA-based middleware systems
proposed in the literature to connect the actors involved in telemonitoring solutions and presents the SOA approach integrated
with the indications provided by the healthcare service specification project (HSSP) standards as a possible solution to overcome these issues. Section III presents the materials treated in
this paper: standardized medical reports, exchanged among the
involved actors, the requirements provided by the medical staff
and the home platform adopted. In Section IV, the authors describe and justify the technical approach to middleware design
and implementation. In Section V, the authors present the prototypal middleware developed and a performance test. Finally,
Section VI concludes this paper.
II. RELATED WORK
In recent years, one of the design and technology strategies
adopted in telemonitoring solutions to implement clinical information systems middleware was the SOA approach [21]–[24].
The main reason for the diffusion of the SOA paradigm was that
it proposed a highly feasible approach to promote the easy integration and alignment of new and existing solutions into a cohesive architecture [25]. An SOA is formed by a set of networkaccessible and platform neutral software services, which can
encapsulate the functionality and information of existing applications and provides them through well-defined interfaces [26],
[27]. This aspect makes the SOA suitable for the healthcare
scenario where the reuse of software is a primary evaluation
criterion considered by healthcare organizations [28], [29].
The pure SOA approach is not sufficient to guarantee interoperability. It is necessary to have a standard message format to
map medical and administrative information which can be only
efficiently interchanged through standardized functions and protocols [30]. This explains why a lack of integration with the public health information system is still present even in SOA-based
telemonitoring systems [30].

1765

Taking into account these considerations, in 2005, the HSSP
was formed by the HL7 International and the Object Management Group (OMG) in order to define health industry SOA
standards which promote interoperability [30]. The main HSSP
objective was to use the SOA approach to support interoperability between applications and distributed and heterogeneous
devices, which belong to independent socio-health system organizations [30]. The aim of each HSSP project was the standardization of a specific service, which was related to a functional
socio-health domain, as a generic service [30].
Kawamoto et al. recognized chronic disease management
as a possible task for the “Healthcare Specific Task Service”
category of the SOA services classified by the HSSP [30].
III. MATERIALS
The core idea behind the proposed middleware may apply to
telemonitoring of patients affected by any chronic disease. In
fact, the management of chronic diseases is always characterized by the extensive use of historical data which allows medical
staff to provide personalized treatment for patients throughout
the course of illness [31]–[34]. Within the CHIRON project, the
authors implemented this planning idea to allow the telemonitoring of chronic patients affected by CHF class III [35], who
had already been hospitalized. Knowledge of the specific class
of the patients monitored was essential in identifying the parameters to be considered. For CHF, an extensive search of medical
literature, performed by the medical staff involved in the project,
yielded over 60 parameters, with differing significance values,
considered as potential risk factors [36]. Among these, some
were characterized by low time variability, i.e., those referring
to demographic or pharmacological aspects, while others were
highly dynamic, e.g., certain clinical and biological parameters,
and therefore had to be frequently monitored. In detail, medical
staff indicated the following requirements.
1) Vital and environmental signs must be collected three
times per day, made available to the Intensive Care Unit
(ICU) for occasional evaluation within an hour, and processed with specific algorithms by the platform hosted in
the patient’s home in order to identify critical events.
2) In case of critical events, the platform must generate an
alarm to inform the ICU (e.g., sms, e-mail, phone call).
3) The medical staff, informed of the critical situation, must
have access to the complete clinical history of the patient
within 15 min.
The devices and sensors used in this solution, with the corresponding vital and environmental signs observed, are listed in
Table I. These sets of devices and sensors represent a typical
example of a body-home integrated sensor network.
In the proposed CHIRON prototype, the home solution was
based on an open platform, named Smart-M3 [37], [38]. SmartM3 decouples producers and consumers who do not need to
know each other’s protocol and connectivity solution, as they
exchange information through the platform itself [37]. While
providing a publish/subscribe mechanism and semantic representation of information, Smart-M3 is an interoperability enabler for sensors, controllers, user interfaces, reasoners, and

1766

IEEE JOURNAL OF BIOMEDICAL AND HEALTH INFORMATICS, VOL. 18, NO. 6, NOVEMBER 2014

TABLE I
LIST OF DEVICES WITH THE CORRESPONDING MEASURED PARAMETERS
Device

Parameters

body scale
blood pressure monitor
pulse oximeter
wearable vital signal monitor
Wireless Environmental Sensor
Network

body weight
diastolic, systolic, mean blood pressure
and heart rate
saturation of peripheral oxygen, heart rate
heart rate, breathing rate, skin temperature,
activity index, posture
environmental temperature, humidity, dust
concentration, pollution

data communication interfaces as well. The platform integrates
different communication technologies, domain-specific connectivity standards, and legacy devices with simple adapters and
abstraction layers [39]. Home automation network standards
like Konnex (KNX - ISO/IEC 14543) [40] and Modbus [41] or
health specific connectivity standards like Continua [42] can be
integrated to build multidomain Smart-M3 centered ecosystems
according to the smart space-based design paradigm which is
agnostic with respect to domain-specific connectivity solutions
[37]. Smart M3 was used to integrate different partner contributions and to develop the home prototype as orchestration
of different legacy and prototypal CHIRON sensors, CHIRON
business-logic software and third-party solutions [39], [43], including the HL7 dispatcher to integrate the home platform with
the proposed middleware.
The medical report can be an additional useful tool to provide
a personalized care management solution [44]. In this study, the
patients were already hospitalized; therefore, the first type of
medical report available was the discharge summary document.
In many cases, it was provided in CDA R2 format, so clinical information was well-defined, machine readable, and could therefore be automatically extracted to configure the algorithms that
manage the alarm system in the home telemonitoring platform,
which manages the body-home integrated sensors network, as
will be described in the following sections.
IV. METHODS
In order to satisfy the requirements indicated by the physicians, the middleware had to connect three agents involved in the
telemonitoring of CHF patients: the home platform, the EHR,
and the ICU. Within the CHIRON project, the partners decided
to adopt the CDA R2 standard for the information interchange
between these agents and the formalism proposed by openEHR
for the storage of health information within the EHR. In order to
provide a robust communication channel between the three distinct agents, which would not be able to lose the recorded data,
the authors decided to integrate a temporary database which was
emptied when the EHR was updated.
For the design of the middleware, the authors took into account the indication provided by the HSSP in order to facilitate
the integration of the telemonitoring system proposed by the
CHIRON project with external applications, devices and services; in particular, they decided to implement a health record
management service (HRMS) to connect the agents through the

exchange of observations contained within the medical report.
This service belongs to the “healthcare specific task service” category of the SOA services indicated by the HSSP [30], and the
corresponding HSSP standard the Retrieve, Locate and Update
Services (RLUS) Release 1 was adopted [45].
The RLUS provides a set of web service interfaces through
which health information resources can be accessed and managed, independent of their nature, by information systems within
and between healthcare organizations [46]. The RLUS standard,
as all HSSP products, is distributed through the HL7 service
functional model (SFM) and the OMG service technical model
(STM) [47]. The SFM provides a service interface specification
at a functional level while the STM specifies the literal technical
requirements of the service [47]. SFM for RLUS is available at
[46], STM for RLUS is available at [48] and some templates of
web service description language (WSDL) and XML schema
definition (XSD) files are available in [49].
In the RLUS, the nature of the health information resource
is managed through the semantic signifier concept [46]. A semantic signifier is defined as “the manifestation of a computable
information model, tagged with a name and version and capable
of being used and enforced by reference” [30]. This approach
allows abstraction of the RLUS capabilities from different resource types and data structures which can therefore be managed
in a flexible and standardized manner [46]. In the proposed solution, the authors decided to adopt the CDA R2 as a semantic
signifier because it provided a generic and flexible structure
which could be used to map the clinical content of different
types of medical reports [50]. In order to constrain the CDA R2
specification for each use case, an implementation guide (CDA
R2 IG) could be provided [50]. A CDA R2 IG was initially
produced by HL7 International and then each country-specific
HL7 Affiliate Organization was authorized to edit a national IG
version appropriate for the realm healthcare context [51]. At
present, the HL7 Italian affiliate has not yet produced an Italian
CDA R2 IG which can be adopted for the use case proposed in
this paper, but it is working on the localization of two HL7 International CDA R2 IGs: “Implementation Guide: CDA Release
2 – Care Record Summary Release 2 Discharge Summary” [52]
and “Implementation Guide: CDA Release 2 – Continuity of
Care Document (CCD)” [53]. For this reason, the authors, who
were participating (as HL7 Italy members) in this localization
process, decided to focus the implementation on these Italian IG
draft versions, taking into account each possible modification.
Specifically, in this application, the content of the produced
CDA R2 documents was limited to the header and the “Vital
Signs” body section, in the case of both the discharge summarization note and the continuity of care document, as only these
parts were interesting for the purpose of the project.
The STM defines two levels of conformance to the RLUS
standard, which depend on the state of service interfaces implementation [48]. The RLUS standard, Level L0, requires the
implementation of the so-called RLUS management and query
interface which provides all the capabilities needed to manage
and access the health information resources mapped through
the specific semantic signifier [48]. The compliance to RLUS
Level L1 requires, in addition to compliance to RLUS Level L0,

GAZZARATA et al.: STANDARDIZED SOA FOR CLINICAL DATA INTERCHANGE IN A CARDIAC TELEMONITORING ENVIRONMENT

1767

TABLE II
RLUS MANAGEMENT AND QUERY INTERFACE CAPABILITY NEEDED TO UNDERSTAND THE PROPOSED SOLUTION
Capability
Get()

Put()

Discard()

Aim

Input parameters

Output parameters

To retrieve a single health information resource,
mapped through a specific semantic signifier, which
fulfills the specific query performed by the client.

Instance of RLUSSearchStruct (a well-defined and
machine readable data structure to describe a
search based on filter criteria or examples and the
name of the semantic signifier to retrieve).

Requested resource only if it exists and if
it is unique.

To store an instance of a logical record in the
repository.

To either physically or logically delete resources
from the repository.

Instance of RLUSWriteCommandEnum (a
structure to contain an enumeration indicating the
action the service must perform: insert only, update
only or “upsert.” “Upsert” means that first the
service has to check whether the resource already
exists and then, if so, it executes an update, but if
not, it executes an insert).
Instance of RLUSPutRequestSrcStruct (a structure
to contain the semantic signifier, which maps the
logical record, and security, source, and network
address context of the caller of the Discard()
operation which is necessary to retrieve data to
clean the RLUS and audit logs).
Logical record mapped through a specific semantic
signifier.
Instance of RLUSSearchStruct (as defined in
Get()). Instance of RLUSPutRequestSrcStruct (as
defined in Put()).

Instance of RLUSStatusCode (a structure
to contain the code indicating whether the
operation was successful or not and a
corresponding message).
Instance of RLUSStatusCode (as defined
in Get()). Logical record identifier.

Instance of RLUSStatusCode (as defined
in Get()).

Fig. 1. Workflow supported by the middleware: black arrows represent the request (continuous line) and respond (dashed line) of Get() capability, dark gray
arrows represent the request (continuous line) and respond (dotted line) of Put() capability and light gray arrows represent the request (continuous line) and respond
(dashed line) of Discard() capability. Double gray arrows represent the connection between the ILS and the EHR supported by API over HTTP. Thick black arrow
represents the sms which the home platform sends to the ICU.

the implementation of all capabilities which allow dynamic
metadata management, that is the definition and manipulation
of RLUS semantic signifiers [48]. A “minimum RLUS implementation,” that is compliance to RLUS Level L0 [48], was
sufficient for the purpose of the proposed solution because the
semantic signifier used was unique and therefore operations to
define and manipulate it were not necessary.
The functions provided by the RLUS management and query
interface are Get(), List(), Locate(), Put(), Discard(), Describe(),
and Initialize() [48]. Table II presents only the functions needed
by the reader to understand the proposed solution.

The RLUS standard, as with all HSSP products, is explicitly
an interface specification, not an implementation specification
[46]. In fact, the RLUS can be adopted with different internal
technical implementations which can be either a registry and
repository architecture or an integrated application which can
be based, for example, on an XML database or a RIM-based
application architecture [54] solution [46]. In this paper, the authors decided to design and then implement a structured query
language (SQL) database based on a subset of HL7 v3 reference
information model (RIM) [55] in order to take advantage of the
high query capability provided by SQL database management

1768

IEEE JOURNAL OF BIOMEDICAL AND HEALTH INFORMATICS, VOL. 18, NO. 6, NOVEMBER 2014

systems (DBMSs) useful to respond to filter requests in the
Get() capability. Finally, for implementation of the services,
the authors adopted the windows communication foundation
(WCF) framework since it addressed the SOA needs, supported interoperability and integration and unified programming
models [56].
V. RESULTS
A. Proposed Solution
1) Architecture: The main result of this work was a standardized prototypal middleware which was able to support an architecture which aimed to give a structured and robust tool to CHF
patients for their personalized telemonitoring. The middleware
was formed by an HRMS, whose interface was compliant to the
RLUS standard (Level 0). The HRMS allowed communication
between the agents, which were involved in this complex patient
treatment, through the exchange of CDA R2 documents. Fig. 1
shows this workflow in a schematic way. The authors would like
to emphasize that the HRMS clients, described in this section,
were implemented in order to develop a full prototypal solution
within the CHIRON project. In a real applicative context, these
agents could be replaced with any application which is able to
create and read CDA R2 documents which fulfill the indications
by the IGs adopted.
The trigger event of the telemonitoring scenario is the discharge of the CHF patient from the hospital, or in the CHIRON
scenario from the ICU; contextually, the physician draws up the
discharge summarization note using the ICU application. Once
it has been completed, the ICU application saves a copy of
this CDA R2 document in the hospital information system and
sends another copy to the HRMS, using the Put() functionality
(Arrow 1—Fig. 1). Afterward, the HRMS processes the CDA
R2 document, stores only the information which is relevant for
the purpose, i.e., the one contained in the header and in the
“Vital Signs” section and it responds to the Put() request
(Arrow 2—Fig. 1).
When the telemonitoring platform is installed, its client interacts with the HRMS through the Get() capability to download
the CDA R2 document which contains only the header and “Vital
Signs” section of the discharge summarization note (Arrows 3
and 4—Fig. 1), sets the alarms and calls the Discard() functionality to delete this clinical document from the temporary
database (Arrows 5 and 6—Fig. 1). When the actual telemonitoring is working a consultation note (i.e., a continuity of care
document), which contains measured values enclosed within the
“Vital Signs” section, is synchronically generated and sent to
the HRMS, by calling the Put() capability (Arrow 7—Fig. 1);
in the same way as described earlier, the HRMS processes and
responds to this request (Arrow 8—Fig. 1).
In order to connect the HRMS to the EHR of the specific
patient, an instance location service (ILS) was also included in
the architecture. One of the operations provided by the ILS was
UpdateEHR(); when this capability is invoked by a client, the
ILS calls the HRMS Get() functionality to obtain a CDA R2
document which contains all the observations which are stored
in the temporary database for the specific patient (Arrows 9 and

10—Fig. 1). Then, it interacts with the specific EHR to update
its content with the observed values (Arrows 11 and 12—Fig. 1)
and, by calling the HRMS Discard() functionality, it deletes all
the clinical documents whose observations are already stored
in the EHR from the temporary database (Arrows 13 and
14—Fig. 1).
When the ICU medical staff want to check the evolution of the
patient’s status, the ICU client calls the HRMS Get() operation
(Arrow 15—Fig. 1). The HRMS processes this request, interacts
with both the temporary database and the EHR through the ILS
(Arrows 16, 17, 18, and 19—Fig. 1), and produces and returns a
CDA R2 documents which fulfills the specific query performed
by the physician (Arrow 20—Fig. 1). When one or more vital
or environmental signs go out of range, as indicated by the
medical staff in the discharge summarization note, the home
platform creates a particular continuity of care document, a
transfer summarization note and sends it as an input parameter
of the HRMS Put() capability (Arrows 21 and 22—Fig. 1).
In addition, the home platform sends an informative sms to
the medical staff (Arrow 23—Fig. 1) who can call the HRMS
Get() capability to obtain this specific CDA R2 document which
contains the parameter values which generated the alarm in the
“Vital Signs” section. To perform this request, the medical staff
can use the ICU client.
In the following description, the authors first provide implementation details of the HRMS and then focus attention on
the content of the data structures exchanged in the workflow
described earlier. Finally, the numeric results relating to the performance test of the communication between the home platform
and the HRMS are shown. This test was also useful in indicating
which agent should invoke the ILS to update the EHR.
As relates to the transfer methods, Arrows 11, 12, 17, and
18 use application programming interface (API) calls over
HyperText Transfer Protocol over Secure Socket Layer
(HTTPS); Arrow 23 is a sms over Global System for Mobile
Communications or higher; all other arrows use Simple Object
Access Protocol over HTTPS.
2) HRMS: The HRMS is formed by a WCF service, located
on a server (Single Processor Quad Core Xeon 3470, 2.93 GHz,
6 GB Random Access Memory (RAM), 64 bit Windows Server
2008 R2 Standard Edition), whose interface represents a “minimum RLUS implementation.” The definition of this interface is
provided to the client through a WSDL file while the structures
of the object (i.e., the semantic signifier) and datatypes, which
are used to call the service functionality, are supplied through
different XSD files. In this prototype, in order to manage access
to the health information resources, the authors decided to adopt
an authorization mechanism based on certificate exchanges between the HRMS and the clients.
When the HRMS receives a CDA R2 document as an input
parameter of the Put() functionality from an authorized client,
it extracts and stores the enclosed observations in the temporary
database following the algorithm shown in Fig. 2.
When the HRMS receives a Get() request from an authorized
client, it first processes the RLUSSearchStruct input parameter
and interacts with the temporary database performing the corresponding SQL query. In this prototype, the authors focused

GAZZARATA et al.: STANDARDIZED SOA FOR CLINICAL DATA INTERCHANGE IN A CARDIAC TELEMONITORING ENVIRONMENT

Fig. 2. Algorithm adopted by the HRMS to process the CDA R2 document
received.

1769

the implementation of searches based on filter criteria. In this
specific implementation, it is important to highlight that the
temporary database only stored the observations until the ILS
updated the EHR. For this reason, the HRMS must consider the
identity of the client which has called the Get() functionality. In
fact, if the client is the ILS or the home platform, it must only
consider the observations which are stored in the temporary
database. Otherwise, if the client is the ICU application, it must
consider the observations which are stored in the EHR which are
accessible to the HRMS through the ILS. Anyway, the HRMS
creates a new CDA R2 document which contains all the observations which fulfill the specific query performed by the client and
returns it to the client with a RLUSStatusCode instance, which
indicates that the operation was successful. If the HRMS does
not find any observation, it returns a RLUSStatusCode instance,
which indicates that the operation was unsuccessful.
Finally, when the HRMS receives a Discard() request from
an authorized client, it processes the RLUSSearchStruct input
parameter and interacts with the temporary data base with the
same mechanism described for the Get() capability. Also, in
this case, the HRMS must consider the identity of the client that
has called the Get() functionality. In fact, to allow elimination
of the observations, it must correspond to the one indicated
by the client, which previously stored the CDA R2 document,
within the RLUSPutRequestSrcStruct instance input parameter
of Put() capability. If this condition is verified, the HRMS deletes
the observations which fulfill the client query and returns a
RLUSStatusCode instance, which indicates that the operation
was successful. In the other case, or if there is no observation
to delete, the HRMS returns an error as in the case of Get() and
Put() capabilities.
3) ICU Discharge Client: The ICU Discharge Client consists of a web application which was implemented to simulate
the hospital client, which was used to write the discharge summarization note when the patient is discharged from the hospital
and is going to be telemonitored. It provides the medical staff
with a form to automatically create a simple CDA R2 document
formed by the header and a section related to “Vital Signs” which
contains the last observed values during the patient’s hospitalization and the expected ranges of values compatible with the
actual status of the patient. When the physician saves this clinical document, the ICU client automatically sends it to the HRMS
as an input parameter of the Put() functionality. In addition, it
indicates that the HRMS must “insert only” this medical report
(RLUSWriteCommandEnum input parameter) and that the specific patient’s home platform will be the caller of the Discard()
operation (input parameter RLUSPutRequestSrcStruct).
4) Home Platform: The home platform system was responsible for collecting and processing heterogeneous physiological
and environmental sensor data from different devices. The discharge summarization note of the specific patient, which could
be obtained through the HRMS Get() functionality, was automatically elaborated to configure the alarm algorithms. In this
way, each instance of the algorithm was personalized for the
specific patient. Fig. 3 shows an example of the search based
on filter criteria which the home platform can use as part of
the RLUSSearchStruct input parameter of this capability. The

1770

IEEE JOURNAL OF BIOMEDICAL AND HEALTH INFORMATICS, VOL. 18, NO. 6, NOVEMBER 2014

Fig. 3. Example of RLUSSearchCriteria instance adopted by home platform
to get the discharge summarization note (corresponding LOINC code 18842-5)
of the specific patient.

same example could also be adopted as an input parameter of
the Discard() operation to delete this CDA R2 document from
the temporary database.
Physically the home solution, which was adopted within the
CHIRON project, consisted of a gateway (i.e., a low-cost personal computer (PC)) connected to Internet and environmental
and physiological sensors (reported in Table I) communicating
via wireless technology (i.e., ZigBee and Bluetooth). The gateway hosted different local services cooperating via the SmartM3 platform: one of these services was the HL7 dispatcher
which collected all vital and environmental parameters related
to the patient from Smart-M3, mapped them in the corresponding observations and created a CDA R2 document which was
sent to the HRMS as an input parameter of the Put () capability. The action which the HRMS had to perform was indicated
as “insert only” (RLUSWriteCommandEnum input parameter),
while the caller of the Discard() capability was the ILS (RLUSPutRequestSrcStruct input parameter).
In order to satisfy the requirements indicated by medical staff,
in the prototype, the HL7 dispatcher service was configured at

runtime to automatically send a transfer summarization note and
an sms when the home platform identified a critical situation
and to send a consultation note when the patient acquired a new
measurement [38]. The home platform was developed from a
previous study by the authors [57], [58].
5) Instance Locate Service: From the technical point of view,
this service is a WCF service, located on the same server as mentioned earlier, which was developed to manage the connection
between the HRMS and the EHRs of telemonitored patients.
Among all the capabilities which the ILS provides, two are
important to correctly understand the workflow: UpdateEHR()
and Get().
The UpdateEHR operation allowed the EHR to be fed with
the observations produced by the home platform for a specific
patient, which were then sent to the HRMS as a consultation
note and stored in the temporary database. This capability had
one input parameter which was the patient id, mapped through
the patientRole CDA R2 class; the patient id and the type of the
CDA R2 document (i.e., consultation note) were used to create
the RLUSSearchStruct instance of the HRMS Get() capability
through a search, based on filter criteria, similar to the one
shown in Fig. 3. After that the ILS completed the EHR update,
it used the same RLUSSearchStruct instance to delete from the
temporary database all the observations, stored in the EHR,
through the Discard() capability [20].
The signature of the ILS Get() function is identical to that of
the HRMS Get() function. It was developed to allow the HRMS
to obtain a CDA R2 document which contained the observations
stored in the EHR and fulfilled the search performed by the client
who requested the HRMS Get() capability.
6) ICU Document Visualization Client: This client is a web
application which was developed to provide the medical staff
with a tool to check the evolution of the patient’s health status
by visualizing a CDA R2 document. The tool allowed physicians to indicate a few simple filter criteria on some CDA R2
document fields (e.g., effectiveTime or code elements of observations) which the client then automatically inserted into the
RLUSSearchStruct input parameter of HRMS Get() capability.
B. Performance Test
Performance tests were carried out in order to investigate
the quality of the proposed prototype. In particular, a stress test
was executed to evaluate system responsiveness under simulated
workloads. All tests described below were performed by one or
more personal computers (PCs) (Intel Xeon 1.86 GHz, 4 GB
RAM, 64 bit Windows 8) running simulating home platform
clients providing set of observed values described in Table I.
Each PC was connected to a 100 Mb/s wired local area network
(LAN).
At the beginning, the authors adopted an asynchronous EHR
update policy; therefore, the ILS UpdateEHR() capability was
invoked by an internal component of the EHR used in the project.
The main aim of the first test was to check the fulfillment of
medical staff requirements. Specifically, no recorded data may
be lost and all collected data have to be stored in the temporary
database within 15 min. The analysis was performed by sending

GAZZARATA et al.: STANDARDIZED SOA FOR CLINICAL DATA INTERCHANGE IN A CARDIAC TELEMONITORING ENVIRONMENT

1771

of 10, ranged from 0.26 to 1.09 s with a mean value of 0.38 s
and a standard deviation of 0.10 s.
In order to evaluate the significance of the differences between
these mean values (experiment 2 versus experiment 3), a t-test
was run on these datasets, providing the fulfillment of its prerequisites. In particular, the normal distribution of the sets was
assessed (Table III summarizes the parameters that demonstrate
the normality of the two distributions).
The t-test result (p < 0.05) showed that the mean time to send
a clinical document in experiment 3 was significantly higher
than the time used in experiment 2, for a limited amount (9%).
Fig. 4.

Experiment 1 results.

10 000 CDA R2 documents, each containing 13 observations,
which corresponded to all available measured parameters, from
a single platform. These clinical documents were sent in groups
of 100 CDA R2 documents at a time and the mean time to
send each group of documents to the HRMS was measured. At
the beginning, the database was empty and at the end of the
experiment 130 000 observations were stored.
In order to calculate this mean value, the time interval was
considered between the first Put() request issued by the client
and the 100th acknowledgment received.
The results of this experiment showed that the mean time
required to send a CDA R2 document rose linearly from 0.40 s
for the first group to 4.39 s for the 100th group with an increase
of 997% (see Fig. 4).
Most likely, this trend was due to the increasing size of the
temporary database and consequent increase of its read-access
latency. In fact, the HRMS had to query the database to check
if the observations had been already stored before executing
the RLUSWriteCommandEnum input parameter of the Put()
request.
In order to verify this hypothesis, the same experiment was
repeated with a synchronous EHR update. In this case, the home
platform, emptied the temporary database by calling the UpdateEHR() functionality provided by the ILS and waited for the
corresponding acknowledgement before sending a new group
of 100 clinical documents (see Fig. 5). Fig. 6 shows the results.
The mean time to send a CDA R2 document, within a group
of 100, is included in a range from 0.34 to 0.41 s with a mean
value of 0.35 s and a standard deviation of 0.02 s.
This experiment demonstrates that the number of observations stored within the database affects the HRMS response
time. For this reason, the authors decided to adopt a synchronous
EHR update policy to test system performance on a simulated
telemonitoring scenario with 14 platforms concurrently sending
clinical documents to the HRMS. In this case, 14 PCs (equipped
as described earlier) were simultaneously used. In this experiment, each platform sent 1000 CDA R2 documents for a total
of 14 000 clinical documents. The mean transmission time was
measured on groups of ten documents each. Fig. 7 shows the
results of experiment 3. The mean time to send a CDA R2 document from 14 home platforms concurrently, calculated in groups

VI. DISCUSSION
This paper presents the middleware of the CHIRON project
whose aims were to allow standardized communication between
the agents involved in the telemonitoring of CHF class III patients: the home platform, the hospital environment (ICU), and
a standardized EHR. Within the project, a prototype of this middleware was implemented, focusing on the features which could
facilitate integration with the external e-health world. The experiment tests showed that this prototype completely fulfilled
all requirements indicated by the medical staff.
Nevertheless, these standardization characteristics allow the
middleware to ideally communicate with any hospital/home application with the capability to produce and read a discharge
summarization note and CCD document. The only requirement
is that these CDA R2 documents must be compliant to the same
CDA R2 Implementation Guides adopted in the proposed solution. This aspect allows the middleware to also be adopted
in other medical domains since disease specificity only influenced the selection of sensors and devices, the data processing
algorithms, and the timing constrains.
The prototype described earlier was implemented within the
CHIRON project, in which the authentication and the security
aspects were decided to be handled by the HTTPS technology
and involved certificates. This aspect should be deeply analyzed
within a possible future engineering phase when more sophisticated technologies such as enterprise service bus (ESB) should
be adopted. This architectural choice is also suggested by HSSP
guidelines [59]. For this future work, a straightforward widening
of the application field is also envisioned.
In detail, other CDA R2 IGs should be used such as the “Implementation Guide: CDA R2 - Personal Healthcare Monitoring
Report” [60], which could not be adopted in this prototypal implementation because there was no suitable Italian localization
available yet.
Another issue which should be addressed is represented by
the relationship between horizontal standards like SOA and vertical standards like CDA R2 IGs; this aspect will cause a certain
increase in software development load; in fact, the absence of
automatic tools to translate the constraints described in the IGs
will be replaced with an additional implementation activity [61].
A similar implementation workload increase will be required if
the middleware has to take into account the information provided by integrating the healthcare enterprise profiles whose
compatibility is assured by the RLUS standard [46], [48].

1772

Fig. 5.

IEEE JOURNAL OF BIOMEDICAL AND HEALTH INFORMATICS, VOL. 18, NO. 6, NOVEMBER 2014

Sequence diagram of experiments 2 and 3.

TABLE III
T TEST
Parameter
Arithmetic mean
Standard Deviation
Median
Skewness

Fig. 6.

Experiment 2 results.

Fig. 7.

Experiment 3 results.

Experiment 2

Experiment 3

0.35
0.02
0.35
1.96

0.38
0.10
0.38
1.94

In order to adopt the proposed solution within a real medical application, scalability issues should also be considered. At
prototypal level, the performance measured with less than 20
home platforms may be satisfactory, as the one simulated by
the authors was sufficient. Nevertheless, the results of the stress
tests carried out provided that a drastic increase in telemonitored
patients will require coordinated and load-balanced servers with
storage tools giving better performance than a single relational
DBMS. In a future release closer to the real deployment, the
high performance of the storage capabilities of the temporary
databases will allow the maintenance of an asynchronous EHR
update.
ACKNOWLEDGMENT
The authors would like to thank: the CHIRON partners (in
particular Francesco Morandi, Enrico Poncini, Chiara Petrioli,

GAZZARATA et al.: STANDARDIZED SOA FOR CLINICAL DATA INTERCHANGE IN A CARDIAC TELEMONITORING ENVIRONMENT

Gaia Maselli, Angelo Capossele, Andrea Vitaletti, Luca Filipponi, Simone Naso, Viola Parodi, Paolo Emilio Puddu, Jan-Marc
Verlinden, Kevin Keene, and Carlos Cavero Barca for the collaboration in research and implementation activities and Silvio
Bonfiglio and Letizia Gabrielli for their coordination activities);
Massimo Gazzarata for the medical collaboration and support;
Jennifer McDermott for the English revision and Maria Eugenia
Monteverde and Valeria Pupella for editorial help.
REFERENCES
[1] World Health Organization (WHO), World Health Statistics 2013. WHO
Library Cataloguing-in-Publication Data, 2013.
[2] Centers for Disease Control and Prevention (2014, May). The
Power to Prevent, the Call to Control: At a Glance 2009. [Online].
Available:
http://www.cdc.gov/chronicdisease/resources/publications/
AAG/chronic.htm
[3] G. Paré, M. Jaana, and C. Sicotte, “Systematic review of home telemonitoring for chronic diseases: The evidence base,” J. Amer. Med. Informat.
Assoc., vol. 14, no. 3, pp. 269–277, 2007.
[4] F. Mair and P. Whitten, “Systematic review of studies of patient satisfaction
with telemedicine,” BMJ, vol. 320, no. 7248, pp. 1517–1520, 2000.
[5] C. Ruggiero, R. Sacile, and M. Giacomini, “Home telecare,” J. Telemed.
Telecare, vol. 5, no. 1, pp. 11–17, 1999.
[6] E. Seto, “Cost comparison between telemonitoring and usual care of
heart failure: A systematic review,” Telemed. J. e-Health, vol. 14, no. 7,
pp. 679–686, 2008.
[7] N. van den Berg, M. Schumann, K. Kraft, and W. Hoffmann,
“Telemedicine and telecare for older patients—A systematic review,” Maturitas, vol. 73, no. 2, pp. 94–114, 2012.
[8] T. L. Finch, F. S. Mair, and C. R. May, “Teledermatology in the UK:
Lessons in service innovation,” Br. J. Dermatol., vol. 156, no. 3, pp. 521–
527, 2007.
[9] C. R. May, T. L. Finch, J. Cornford, C. Exley, C. Gately, S. Kirk,
K. N. Jenkings, J. Osbourne, A. L. Robinson, and A. Rogers, “Integrating
telecare for chronic disease management in the community: What needs
to be done?” BMC Health Serv. Res., vol. 11, no. 1, pp. 131–141, 2011.
[10] ARTEMIS Agency. (2014). [Online]. Available: http://www.artemisju.eu/
[11] Cyclic and person-centric Health management: Integrated appRoach for
hOme, mobile and clinical eNvironments (CHIRON) Project. (2014). [Online]. Available: http://www.chiron-project.eu/
[12] S. Robinson, K. Stroetmann, and V. Stroetmann, “Tele-homecare for
chronically ill patients: Improved outcomes and new developments,”
J. Inf. Technol. Healthcare, vol. 2, pp. 251–262, 2004.
[13] L. B. Young, P. S. Chan, and P. Cram, “Staff acceptance of tele-ICU
coverage—A systematic review,” CHEST J., vol. 139, no. 2, pp. 279–288,
2011.
[14] Y. Kowitlawakul, “The technology acceptance model: Predicting nurses’
intention to use telemedicine technology (eICU),” Comput. Informat.
Nursing, vol. 29, no. 7, pp. 411–418, 2011.
[15] J. Moeckli, P. Cram, C. Cunningham, and H. S. Reisinger, “Staff acceptance of a telemedicine intensive care unit program: A qualitative study,”
J. Crit. Care, vol. 28, no. 6, pp. 890–901, 2013.
[16] Health Level 7 version 3 (HL7 v3) Clinical Document Architecture Release
2 (CDA R2). (2014). [Online]. Available: http://www.hl7.org/implement/
standards/product_brief.cfm?product_id = 7
[17] European Committee for Standardization (CEN)/International Organization for Standardization (ISO) 13606. (2014). [Online]. Available:
http://www.en13606.org/the-ceniso-en13606-standard
[18] openEHR [Online]. Available: http://www.openehr.org/
[19] O. Kilic and A. Dogac, “Achieving clinical statement interoperability using R-MIM and archetype-based semantic transformations,” IEEE Trans.
Inf. Technol. Biomed., vol. 13, no. 4, pp. 467–477, Jul. 2009.
[20] R. Gazzarata, F. Vergari, J.-M. Verlinden, F. Morandi, S. Naso, V. Parodi,
T. S. Cinotti, and M. Giacomini, “The integration of e-health into the
clinical workflow–electronic health record and standardization efforts,” in
Impact Analysis of Solutions for Chronic Disease Prevention and Management, New York, NY, USA: Springer, 2012, pp. 107–115.
[21] J. M. Corchado, J. Bajo, D. I. Tapia, and A. Abraham, “Using heterogeneous wireless sensor networks in a telemonitoring system for healthcare,”
IEEE Trans. Inf. Technol. Biomed., vol. 14, no. 2, pp. 234–240, Mar. 2010.
[22] F.-C. Chang, “A framework for prototyping telecare applications,” J. Inf.
Hiding Multimedia Signal Process., vol. 5, no. 1, pp. 61–71, 2014.

1773

[23] D. G. Katehakis, S. G. Sfakianakis, G. Kavlentakis, D. N. Anthoulakis,
and M. Tsiknakis, “Delivering a lifelong integrated electronic health
record based on a service oriented architecture,” IEEE Trans. Inf. Technol.
Biomed., vol. 11, no. 6, pp. 639–650, Nov. 2007.
[24] V. G. Koutkias, I. Chouvarda, A. Triantafyllidis, A. Malousi, G. D. Giaglis,
and N. Maglaveras, “A personalized framework for medication treatment
management in chronic care,” IEEE Trans. Inf. Technol. Biomed., vol. 14,
no. 2, pp. 464–472, Mar. 2010.
[25] E. Vasilescu and S. K. Mun, “Service oriented architecture (SOA) implications for large scale distributed health care enterprises,” in Proc. 1st
Trans. Disciplinary Conf. Distribut. Diagnosis Home Healthcare, 2006,
pp. 91–94.
[26] Y. V. Natis, Service-Oriented Architecture Scenario. Stamford, CT, USA:
Gartner Res., 2003.
[27] K. Kawamoto and D. F. Lobach, “Proposal for fulfilling strategic objectives of the US roadmap for national action on decision support through
a service-oriented architecture leveraging HL7 services,” J. Amer. Med.
Informat. Assoc., vol. 14, no. 2, pp. 146–155, 2007.
[28] M. W. Bridges, “SOA in healthcare, sharing system resources while enhancing interoperability within and between healthcare organizations with
service-oriented architecture,” Health Manage. Technol., vol. 28, no. 6,
pp. 6–8, 2007.
[29] J. Mykkänen, A. Riekkinen, M. Sormunen, H. Karhunen, and P. Laitinen, “Designing web services in health information systems: From
process to application level,” Int. J. Med. Informat., vol. 76, no. 2,
pp. 89–95, 2007.
[30] K. Kawamoto, A. Honey, and K. Rubin, “The HL7-OMG healthcare
services specification project: Motivation, methodology, and deliverables
for enabling a semantically interoperable service-oriented architecture for
healthcare,” J. Amer. Med. Informat. Assoc., vol. 16, no. 6, pp. 874–881,
2009.
[31] S. A. Hunt, D. W. Baker, M. H. Chin, M. P. Cinquegrani, A. M. Feldman,
G. S. Francis, T. G. Ganiats, S. Goldstein, G. Gregoratos, and M. L. Jessup,
“ACC/AHA guidelines for the evaluation and management of chronic
heart failure in the adult: Executive summary” J. Amer. Coll. Cardiol.,
vol. 38, no. 7, pp. 2101–2113, 2001.
[32] M. P. Dubé, J. H. Stein, J. A. Aberg, C. J. Fichtenbaum, J. G. Gerber, K. T. Tashima, W. K. Henry, J. S. Currier, D. Sprecher, and
M. J. Glesby, “Guidelines for the evaluation and management of dyslipidemia in human immunodeficiency virus (HIV)-infected adults receiving antiretroviral therapy: Recommendations of the HIV Medicine
Association of the Infectious Disease Society of America and the Adult
AIDS Clinical Trials Group,” Clin. Infectious Dis., vol. 37, no. 5,
pp. 613–627, 2003.
[33] S. Schutte-Rodin, L. Broch, D. Buysse, C. Dorsey, and M. Sateia, “Clinical guideline for the evaluation and management of chronic insomnia in
adults,” J. Clin. Sleep Med., vol. 4, no. 5, pp. 487–504, 2008.
[34] P. Fraccaro V. Pupella, R. Gazzarata, C. Dentone, G. Cenderello, P. De
Leo, F. Bozzano, G. C. Finocchio, A. De Maria, and D. Fenoglio, “The
Ligurian human immunodeficiency virus clinical network: A web tool to
manage patients with human immunodeficiency virus in primary care and
multicenter clinical trials,” Medicine 2.0, vol. 2, no. 2, pp. e5:1–11, 2013.
[35] New York Heart Association (NYHA), Nomenclature and Criteria for
Diagnosis of Diseases of the Heart and Great Vessels. Little, Brown
Medical Division, 1979.
[36] M. Luštrek, B. Cvetković, M. Bordone, E. Soudah, C. Cavero, J.
M. Rodrı́guez, A. Moreno, A. Brasaola, and P. E. Puddu, “Supporting clinical professionals in decision-making for patients with chronic
diseases,” in Proc. 15th Int. Multiconf. Inf. Soc., Ljubljana, 2012,
pp. 126–129.
[37] J. Honkola, H. Laine, R. Brown, and O. Tyrkko, “Smart-M3 information sharing platform,” in Proc. IEEE Symp. Comput. Commun., 2010,
pp. 1041–1046.
[38] F. Vergari, R. Gazzarata, F. Morandi, V. Parodi, S. Naso, A. Arezza,
T. S. Cinotti, and M. Giacomini, “A standardized middleware as the core
of a telemonitoring European project,” Stud. Health Technol. Informat.,
vol. 180, pp. 497–501, 2012.
[39] L. Filipponi, A. Vitaletti, G. Landi, V. Memeo, G. Laura, and P. Pucci,
“Smart city: An event driven architecture for monitoring public spaces
with heterogeneous sensors,” in Proc. Fourth Int. Conf. Sensor Technol.
Appl., 2010, pp. 281–286.
[40] Konnex. (2014). [Online]. Available: http://www.knx.org/knxen/index.php
[41] Modbus. (2014). [Online]. Available: http://www.modbus.org/
[42] Continua. (2014). [Online]. Available: http://www.continuaalliance.org/
[43] F. Morandi, L. Roffia, A. D’Elia, F. Vergari, and T. S. Cinotti, “RedSib: A Smart-M3 semantic information broker implementation,” in Proc.

1774

[44]
[45]
[46]
[47]
[48]
[49]
[50]
[51]
[52]

[53]

[54]
[55]
[56]
[57]

[58]

[59]
[60]
[61]

IEEE JOURNAL OF BIOMEDICAL AND HEALTH INFORMATICS, VOL. 18, NO. 6, NOVEMBER 2014

12th FRUCT Conf. Open Innovations Assoc., Oulu, Finland, Nov. 2012,
pp. 86–98.
Z. Yoediono and R. Snyderman, “Proposal for a new health record to
support personalized, predictive, preventative and participatory medicine,”
Pers. Med., vol. 5, no. 1, pp. 47–54, 2008.
HL7 Version 3 Standard: Retrieve, Locate, and Update Service (RLUS)
Release 1. (2014). [Online]. Available: http://www.hl7.org/implement/
standards/product_brief.cfm?product_id=89
S. Lotti, J. Koisch, A. P. Honey, S. Robinson, and K. Kawamoto, Service Functional Model Specification Retrieve, Locate and Update Service
(RLUS), Release 1. HL7, 2012.
R. Hamm, A. Estelrich, N. Canu, F. Oemig, and S. Nachimuthu, HL7 Common Terminology Services, Release 2: Service Functional Model Specification, Normative Release. HL7, 2013.
Retrieve, Locate, and Update Service (RLUS) Specification, Version 1.0.1,
OMG, 2011.
Documents Associated With RLUS, Version 1.0.1. (2014). [Online].
Available: http://www.omg.org/spec/RLUS/1.0.1/
R. H. Dolin, L. Alschuler, S. Boyer, C. Beebe, F. M. Behlen, P. V.
Biron, and A. S. Shvo, “HL7 clinical document architecture, release 2,”
J. Amer. Med. Informat. Assoc., vol. 13, no. 1, pp. 30–39, 2006.
HL7 (2014, May). HL7 Renement, Constraint and Localization, Release 2
[Online]. Available: http://www.hl7.org/v3ballot/html/infrastructure/
conformance/conformance.htm
L. Alschuler, C. Beebe, K. W. Boone, R. H. Dolin, B. Marquard,
L. Bryan, R. Grapp, M. Morsch, and S. Hardy, Implementation Guide
for CDA Release 2.0 Care Record Summary Release 2 Discharge Summary, Draft Standard for Trial Use. HL7, 2009.
R. H. Dolin, L. Alschuler, C. Beebe, F. M. Behlen, K. W. Boone,
D. Gabriel, R. Geimer, G. Giannone, V. “Juggy” Jagannathan, L. McKnight, P. Mitchell, R. Peters, D. Russler, A. Shabo, S. E. Waldren, P. A.
Van Dyke, B. Yencha, and A. Zuckerman, HL7 Implementation Guide:
CDA Release 2—Continuity of Care Document (CCD). HL7, 2007.
HL7 RIM (Reference Information Model) based application architecture (RIMBAA) working group. (2014). [Online]. Available:
http://wiki.hl7.org/index.php?title=RIMBAA
HL7 Reference Information Model (RIM). (2014). [Online]. Available:
http://www.hl7.org/implement/standards/rim.cfm
W. Zhang and G. Cheng, “A service-oriented distributed frameworkWCF,” in Proc. Int. Conf. Web Inf. Syst. Mining, 2009, pp. 302–305.
F. Vergari, S. Bartolini, F. Spadini, A. DElia, G. Zamagni, L. Roffia, and
T. S. Cinotti, “A smart space application to dynamically relate medical and
environmental information,” in Proc. Conf. Design Autom. Test Europe,
2010, pp. 1542–1547.
F. Vergari, T. S. Cinotti, A. D’Elia, L. Roffia, G. Zamagni, and C. Lamberti,
“An integrated framework to achieve interoperability in person-centric
health management,” Int. J. Telemed. Appl., vol. 2011, pp. 549282:1–10,
2011.
The Practical Guide to SOA in Healthcare. HL7, OMG, 2008.
L. Alschuler, C. Beebe, K. W. Boone, R. H. Dolin, R. Geimer, I. Gejdos,
N. Kushalnagar, R. Cnossen, and D. Bogia, HL7 Implementation Guide
for CDA R2—Personal Healthcare Monitoring Report. HL7, 2010.
J. Mykkänen and M. Tuomainen, “Balancing between local requirements,
interoperability standards, and SOA principles-case ebooking of health
services,” Finnish J. eHealth eWelfare, vol. 4, no. 1, pp. 10–19, 2012.

Roberta Gazzarata was born in Savona, Italy, on
June 4th 1985. She graduated in biomedical engineering in 2007, and received the Master’s and Ph.D. degrees in bioengineering from the University of Genoa,
Genoa, Italy, in 2010 and 2014, respectively.
She is currently a Postdoctoral Researcher in
the Nano-biotechnology and Medical Informatics
Laboratory, Department of Informatics, Bioengineering, Robotics and System Engineering, University of
Genoa. She is author of one journal paper in press
and some conference papers on this subject. Her research interests include medical informatics with special reference to format
and vocabulary standards.
Dr. Gazzarata received the Joachim W. Dudeck Award in 2013 for the
best paper presented at the International HL7 Interoperability Conference by a
young researcher (less than 35 years of age) in health informatics for the paper:
R. Gazzarata and M. Giacomini “Advanced Service Oriented Architecture
(SOA) for the reuse of clinical data to enhance the collaboration between actors
involved in the treatment of chronic and/or infectious diseases.”

Fabio Vergari was born in Rimini, Italy, on February 22nd 1982. He graduated in electronic engineering in 2004 and received the Master’s degree in
electronic systems for biomedical applications and
the Ph.D. degree in bioengineering from the University of Bologna, Bologna, Italy, in 2007 and 2011,
respectively.
Since 2011, he has been a Postdoctoral Researcher
at the University of Bologna, doing research on embedded systems and semantic interoperability in the
healthcare domain.
Dr. Vergari received the Second Best Poster Presentation Award at the 1st
IEEE EMBS Summer School on Emerging Technologies and Applications in
Telemedicine in Smolenice in 2013.

Tullio Salmon Cinotti was born in Bologna, Italy,
on May 7th, 1950. He graduated in electrical engineering at the University of Bologna, Bologna, in
1974.
He is currently an Associate Professor (1987) in
the School of Engineering and Architecture, University of Bologna, where he is in charge of courses
on computer architecture, logic design and interoperability of embedded systems for undergraduate and
master students in electronics, telecommunications,
automation and computer engineering. He has a long
standing experience in joint research with primary Italian and International academic, research and industrial institutions. He is coauthor of papers written
with researchers from Intel Labs, Nokia Research, Siemens Corporate Technology, Telecom Italia Lab, VTT, Polytechnic of Milano, and University of Kent.
His research interest is focused on embedded systems and on semantics-based
data distribution architectures for multidomain environment-driven ecosystems,
including tele-homecare ecosystems. He currently leads a research group on semantic architectures at ARCES Labs, University of Bologna. He has led in the
past and is currently leading the University of Bologna participation in European research initiatives focused on interoperability in the areas of open cultural
heritage, smart environments and electric mobility.
Prof. Cinotti is a member of the ARTEMIS-IA SRA Workgroup.

Mauro Giacomini (M’06) was born in Genoa, Italy,
on April 17th 1963. He received the Master’s degree in electronic engineering from the University of
Genoa, Genoa, in 1987, and the Ph.D. degree in bioengineering from the Polytechnic of Milan, Milano,
Italy, in 1993.
He is currently an Aggregate Professor of bioengineering in the Department of Informatics, Bioengineering, Robotics and System Engineering, University of Genoa. He has been involved in more than
20 projects financed by EU since III framework; he
has published more than 60 papers in international referred journals over the
past 20 years and about 350 published works. He teaches biomedical engineering and bioengineering courses of study and some medical specialization
courses for doctors. His research interests include medical informatics with
special reference to application of standards in medical data treatment, medical
knowledge-based systems and to the development of data bases of importance
in medicine and biology; microbial classification methods based on artificial
neural networks and studies on antibiotic resistance; the study of biological
systems by modeling, data and signal analysis.
Prof. Giacomini is member of IEEE EMBS, Center of Excellence for Biomedical Research—University of Genoa, HL7 Italy Board, and Associazione Italiana
d’ Informatica Medica—European Federation for Medical Informatics. He was
an Associate Editor of the IEEE TRANSACTIONS ON BIOMEDICAL ENGINEERING
from 2006 to 2012.

