3340

IEEE TRANSACTIONS ON BIOMEDICAL ENGINEERING, VOL. 60, NO. 12, DECEMBER 2013

Coordinator Traffic Diffusion for Data-Intensive
Zigbee Transmission in Real-time
Electrocardiography Monitoring
Chinyang Henry Tseng, Member, IEEE

Abstract—Zigbee is expected to have an explosive growth in
wireless medical monitoring systems because it possesses the advantages of low cost, safe power strength, and easy deployment.
However, limited work focuses on solving the bottleneck issue at
the Zigbee coordinator in a data-intensive system to guarantee
transmission reliability of life-critical data. This paper proposes
coordinator traffic diffusion (CTD) method to redirect excessive
traffic from coordinator to the sink in electrocardiography (ECG)
medical application. CTD router, which implements CTD design,
automatically redirects ECG data traffic to the sink node without
involving the coordinator, and thus reliable real-time ECG monitoring service can be delivered precisely. CTD design is tested in
both TI CC2530 Zigbee platform and NS2 simulation. Experimental result demonstrates that a CTD design can assist routers in
successfully delivering real-time ECG data samples reliably with
the best transmission rate, 24 kb/s. This performance cannot be
achieved by the original Zigbee design.
Index Terms—Coordinator, coordinator traffic diffusion (CTD),
electrocardiography (ECG), end device (ED), router, sink, zigbee.

I. INTRODUCTION
N recent years, the demand for healthcare e-services increases because of the population aging phenomenon, insufficient nursing manpower, and sharply rising healthcare cost in
all regions of the world, especially in the developed countries.
The medical e-services include chronic disease monitoring and
personal wellness and fitness monitoring, such as electrocardiography (ECG) for heart-disease patients. An ECG is used
to measure and diagnose abnormal heart rhythms, particularly
abnormal rhythms caused by damage to the conductive tissue
that carries electrical signals, or by electrolyte imbalances.
In traditional ECG monitoring process, ECG data are first
collected for some period of time and then semimanually sent
to experts for diagnosis. This asynchronous process requires
heavy human intervention for its completion and might cause
delay in emergency treatment. Therefore, to reduce overhead
and improve medical efficiency, a real-time ECG monitoring
system is prominent.

I

Manuscript received February 15, 2013; revised April 30, 2013; accepted May
31, 2013. Date of publication June 5, 2013; date of current version November
18, 2013.
The author is with the Department of Computer Science and Information
Engineering, National Taipei University, Taipei 237, Taiwan (e-mail: tsengcyt@
gm.ntpu.edu.tw).
Color versions of one or more of the figures in this paper are available online
at http://ieeexplore.ieee.org.
Digital Object Identifier 10.1109/TBME.2013.2266373

ZigBee is a typical wireless sensor communication technology and is expected to have an explosive growth in wireless
control and monitoring applications because of its low cost and
easy deployment. Besides home and building automation, industrial control and embedded sensing applications, Zigbee is
also widely used in e-healthcare systems. Numerous medical
monitoring systems [5]–[9], allowing patients to maintain their
independence and mobility, have been developed. Furthermore,
Zigbee low radiation and low power consumption bring patients
a healthy and reliable caretaking services.
ZigBee builds upon the physical layer and medium access
control defined in IEEE standard 802.15.4 [10]. Zigbee stack has
four additional components: network layer, application layer,
ZigBee device objects (ZDOs), and manufacturer-defined application objects for customization and total integration. ZDOs, the
main improvements, are responsible for keeping device roles,
managing requests to join a network, discovering devices and
security. Zigbee supports star, tree, and mesh network topologies
and, for all topologies, ZigBee must have one coordinator device
responsible for a personal area network (PAN) creation, parameter control, and fundamental maintenance. No inter-PAN communication is allowed. Zigbee uses ad hoc on-demand distance
vector (AODV) routing protocol to automatically construct an
ad hoc network as routes are needed. ZigBee nodes can stay in
sleep mode most of the time and switch from sleep to active
mode within 30 ms when tasks are given. This on-demand characteristic results in average low-power consumption and long
battery life.
A large-scale wireless Zigbee network, connecting numerous
devices into a single network, is needed for building a thorough
ECG monitoring system tracking dozens of patient health conditions concurrently. However, the deployment of a large number
of Zigbee devices potentially causes overwhelming traffic load
at the coordinator. In a Zigbee network, a coordinator forms a
PAN and is responsible for forwarding all the sensed data in that
PAN to the sink, the backend server. Therefore, bottleneck problem at the coordinator can paralyze the network and cause data
loss or delay to bring life-threatening damage in the medical
system. This coordinator bottleneck issue becomes even more
serious in data-intensive ECG system, which delivers a large
amount of continuously sequential sensor data.
To provide better ECG monitoring services, moderate transmission power in the gastrointestinal tract [1] is studied, while
some others focus on ECG signal generation [2] and the
signal coding algorithm [3] for better graphic demonstration
of patient’s physical conditions. Reliable transmission is also

0018-9294 © 2013 IEEE

HENRY TSENG: COORDINATOR TRAFFIC DIFFUSION FOR DATA-INTENSIVE ZIGBEE TRANSMISSION

investigated to reduce Zigbee traffic overhead [4] and to balance coordinators’ loadings between PAN networks [11], [12].
Most of these works can enhance Zigbee performance but they
require modifications of current Zigbee stack design and only
work in certain scenarios. Therefore, we need a more generic
solution, compatible with the current Zigbee stack, for the coordinator bottleneck issue caused by the inadequate coordinator
design.
To solve bottleneck issue at the coordinator, we propose
the coordinator traffic diffusion (CTD) method on the ECG
monitoring system by detouring partial traffic without routing
through coordinator. Utilizing CTD can simulate multiple PAN
to achieve load balancing; meanwhile, it keeps connection flexibility of a single PAN. To ease CTD integration without modifying existing Zigbee layers, CTD layer is inserted between
media access control (MAC) and network (NWK) layers in a
router, called a CTD router. During cluster binding for sending
ECG data, the CTD layer intercepts the binding control packet
and modifies its destination address from coordinator to its own
address. In this way, CTD group, consisting of CTD routers,
can automatically redirect traffic to the sink node (SN) without involving the coordinator. We implement CTD routers in TI
CC2530 Zigbee platform and NS2 simulation and use MIT-BIH
arrhythmia database [13] as real ECG data input. According to
MIT-BIH database, the Zigbee network is supposed to deliver
720 samples/s from each ECG sensor device to achieve real-time
ECG monitoring. If each sample is a 4- B floating number, the
transmission speed should be at least 23 kb/s. Experiment results
demonstrate the Zigbee network assisted with CTD Routers can
achieve this qualified transmission speed, 750 samples/s or 24
kbps, but the original Zigbee network can only achieve 550
samples/s, which is below the desired speed. Therefore, a Zigbee network assisted with CTD Routers can successfully deliver
reliable real-time ECG data samples in time.
The remainder of this paper is organized as follows: Section
II illustrates how Zigbee assists ECG monitoring. Section III
presents the CTD design. Section IV gives experimental results
and this study is concluded in Section V.
II. ZIGBEE IN REAL-TIME ECG MONITORING
A. Zigbee Basis and Transmission Concerns
ZigBee is a wireless communication protocol and is popular in
remote control and monitoring applications. Zigbee is excellent
for medical applications because of its long life and low-radio
transmission power. To begin with, we define the following
terms to address concerns of ECG medical application in a
Zigbee network.
In a Zigbee network, sink node, denoted as SN, is the backend
server who collects sensor data from PANs. A PAN is directly
connected with SN by direct communication link (DCL). The
high-speed network, such as Bluetooth or Universal Serial Bus
(USB), are often selected as DCL media. There is no communication between PANs. Each PAN has its own unique coordinator,
routers, and end devices (EDs). We denote the unique coordinator of the PAN as C, a router as R, and an end device generating
ECG data as ED. The CTD router is a specialized R that directly

Fig. 1.

3341

ECG monitoring scenario

forward sensor data to SN through DCL without going through
C. We denote a CTD router as RCTD .
To calculate the performance matrix for each ED, we introduce the following measurements. NED is the number of ECG
data samples generated and sent out by each ED per second.
NSN is the number of ECG data samples received at SN per
second from the ED. The SD_RATIO is the sample successful delivery ratio from the ED, and can be calculated from the
equation NSN /NED .
To provide the real-time ECG chart, NSN must be higher than
NED to guarantee that the SN can process more ECG samples
than those generated by EDs in each time unit. In a PAN, all
samples generated by EDs are sent to C before being received at
SN. Therefore, C has to maintain high NSN for its own Zigbee
interface, and becomes the bottleneck of the PAN when EDs
generate more data than it can process. The SD_RATIO may
also decrease dramatically due to the bottleneck, and greater
queuing delay and network congestion will both happen. This
is the major concern for ECG data transmission in a Zigbee
network.
B. Wireless-Networked ECG Monitoring Scenario
The overall ECG monitoring scenario is shown in Fig. 1.
There are three phases in our scenario. The phases in sequence
from ECG to monitoring center are Phase 1: Data Sensing phase,
Phase 2: Zigbee Transmission phase, and Phase 3: Monitoring
phase.
In Phase 1, patients carry wearable ECG collecting sensed
ECG data. The ECG data source for experiment is Massachusetts
Institute of Technology (MIT)–Beth Israel Hospital (BIH) Arrhythmia Database [13]. The MIT-BIH Arrhythmia Database
contains 48 half-hour excerpts of two-channel ambulatory ECG
recordings, which has been done with signal conditioning and
then is fed as inputs to the microcontroller. The conditioning
stage includes filtering noise and amplifying the original signal.
We use ZigBee transmission module and ECG data to simulate
the scenario of actual patients who wear ECG Zigbee devices.
Each channel recording contains 360 samples/s with 11-bit resolution, and each sample is decoded as a float number. Usually
MIT-BIH database has two sets of ECG data presenting two

3342

Fig. 2.

IEEE TRANSACTIONS ON BIOMEDICAL ENGINEERING, VOL. 60, NO. 12, DECEMBER 2013

Traditional Zigbee data transmission topology.

ECG data lines, one major signal line and one reference line. To
display ECG samples of both lines in real time, Zigbee transmission rate needs to be higher than 23 kbps, with which Zigbee
can deliver 7204-B samples/s.
Phase 2, Zigbee Transmission, is what this paper focuses
on to reliably deliver data-intensive wireless flow for real-time
ECG monitoring. Patients are sensitive to high-radio transmission power devices supported by Wifi or Bluetooth whose transmission power is usually 100 mW [14]. Therefore, this paper
uses ZigBee as the medical application transmission medium.
Zigbee’s low transmission power (1 mW) brings no threats to
chronic-disease patients wearing monitoring devices for a long
period of time. Besides, Zigbee’s long battery life also ensures
uninterrupted monitoring services.
In traditional Zigbee, as illustrated in Fig. 2, it is better to
let each ED have its own dedicated Router (R) connecting to
coordinator (C) and SN. These dedicated paths from EDs to
SN can guarantee reliable delivery under light traffic condition.
However, when traffic become intense, C might have no capacity
to handle data burst and cause data loss, which is critical to
medical monitoring.
To workaround this issue, CTD Router (RCTD ) is proposed to
replace R and redirect data to SN directly without going through
C. People might argue CTD solution works similarly to multiple
PANs, in which multiple Cs can share intense data destined for
SN to solve bottleneck at a single C. However, multiple-PAN
turns a Zigbee network into many isolated partitions, which
are difficult to be deployed and managed. For example, if one
PAN fails, its EDs cannot transmit data to SN anymore, since
no inter-PAN communication is allowed in Zigbee. However,
our CTD solution works to simulate multiple-PAN but keep all
Zigbee nodes connected as in a single PAN. In CTD scenario,
if one R fails, its connected ED can find another dedicated path
to SN. This improves network sustainability and reliability. The
detailed design of CTD is elaborated in Section III.
The third phase is the monitoring data center consisting of
monitoring and information processing system, which is an
ECG display software developed by C# programming language.
The ECG display panel with a user-friendly interface is shown
in Fig. 3. We list the monitoring functionalities in four main
parts.

Fig. 3.

ECG display software.

1) Part 1—Connection Settings: It determines the connection parameters for Zigbee communications. The parameters include connection port number, data transmission
rate, and ECG tracing line type. From proper connection
setting, it can ensure the quality of received ECG data for
real-time ECG data monitoring.
2) Part 2—Patient’s Information: from this control panel part,
medical personnel can select different ECG signal types
(Modified Lead II, MLII, is the default), the room number and patient ID of some specific patient they want to
monitor.
3) Part 3-ECG Data Control: In general, medical personnel
can record received ECG data, replay the data, and catch
screenshots in data control panel whose functionalities are
described below:
a) SEND: After all parameters are set in Part 1 and Part
2, Send button start to retrieve the indicated patient’s
ECG data from Database to be drawn on Monitoring
Chart (Part 4).
b) CLEAR: Clear ECG tracings on the monitoring
chart.
c) Screenshot: Catch screenshots from the monitoring
chart.
d) SAVE FILE: Save the current patient’s ECG data in
digital form to a file.
e) CLOSE PORT: Close connections.
4) Part 4-ECG Monitoring Chart: It displays patients’ ECG
tracings.
In summary, the process of ECG real-time data monitoring
is done through three phases in our scenario. In Data Sensing
phase, real-time ECG data signals can be retrieved from patients
or from data records in MIT-BIH Arrhythmia Database [13],
and ECG signals are decoded as double-precision floating point
numbers. In Zigbee transmission phase, the Zigbee network
with CTD design transmits ECG data numbers with sufficient
and reliable data rate. In Monitoring phase, the ECG display
panel software represents the numbers according to ECG signal type and depicts them in a monitoring chart. The chart can

HENRY TSENG: COORDINATOR TRAFFIC DIFFUSION FOR DATA-INTENSIVE ZIGBEE TRANSMISSION

Fig. 4.

CTD Concept illustration.

Fig. 6.

Fig. 5.

3343

CTD group illustration.

display two types of ECG tracings, major signal and reference
lines, simultaneously. To support multiple ECG data monitoring
of several patients in real time, several ECG display software
instances can be run for each monitored patient. Different patients’ ECG flow will be recognized and differentiated according
to the Part 2-Patient’s Information setting. The SN is a powerful
back-end server with the most efficient hardware and large data
storage. Once the bottleneck problem is solved at C, SN can
handle concurrent ECG transmission paths from different EDs.
III. METHOD
A. CTD Concept
We introduce the CTD method to solve the coordinator bottleneck issue in the traditional Zigbee sensor network. The basic
concept is described in Fig. 4. In Fig. 4(a), data flows generated
at ED must take C as the last hop to SN. In Fig. 4(b), RCTD
can share the traffic load of C by forwarding traffic, supposed to
pass through C originally, to SN directly. Therefore, under the
same traffic load, the burden of C can be reduced to half. As the
Zigbee network enlarges, additional RCTD can be added easily.
B. CTD Group
To reduce traffic passing through coordinator C to mitigate
bottleneck issue, we introduce the CTD group. The CTD group
consists of several RCTD , which has direct communication link
(DCL) connecting SN. In Fig. 5, while receiving data samples
from ED toward the C, RCTD forward the data to SN by DCLs
instead of C. Each RCTD in the CTD group is responsible for a

CTD layer in Zigbee stack.

single ECG data transmission path. The CTD group can handle
huge data load in parallel without going through C, and thus
CTD group can alleviate traffic burden at C. In addition, CTD
group size is flexibly extendable by simply adding more RCTD
for supporting newly joined EDs.
In our CTD design, one RCTD is allowed for connecting
multiple EDs, but the number of connected EDs needs to be
configured according to application data transmission intensity
to prevent the same bottleneck problem encountered in the traditional Zigbee design. For example, in our ECG monitoring
implementation, RCTD is configured to be connected to at most
one ED, since ECG data from more than one patient at the
maximum data rate will exceed the data capacity an RCTD can
process.
To handle mobility issue, ED can connect to another available
RCTD as moving. To ensure ED connection stability, a hospital
environment should be deployed with an enough number of
RCTD , acting like base stations in a cellular network. Widely
deployed RCTD is feasible because Zigbee devices are cheap as
well as easily deployed.
C. CTD Layer
For being compatible with existing Zigbee standard, we introduce a CTD layer. The CTD layer is designed for RCTD
to redirect data flows from C to SN without modifying Zigbee stacks. The CTD layer intercepts data packets between
MAC and NWK layers and subsequently performs data traffic
diffusion.
Fig. 6 illustrates how CTD layer works. In Step 1, to start
sending ECG data samples with a new cluster binding, ED
sends a cluster binding request to C. In Step 2, RCTD receives
the request, but it does not forward the request to C. Instead, its
CTD layer intercepts the request and modifies the destination
address in the binding request to be itself instead of C, the
original destination address.
Since the destination becomes its own, the request will be
handled by itself. So, in Step 3, its NWK layer forward the
request to the upper layer, application subsystem (APS) layer,
and does not forward the request to C. In Step 4, APS handles the request, establishes the cluster binding toward ED, and

3344

IEEE TRANSACTIONS ON BIOMEDICAL ENGINEERING, VOL. 60, NO. 12, DECEMBER 2013

Fig. 8.
Fig. 7.

Sink throughput test.

TI CC2530 Zigbee 2007/PRO development board.

sends APS (ACK) message back to an ED to confirm the cluster
binding. Based on the new cluster binding, the ED will send
ECG data to RCTD directly, and RCTD sends the data to SN
through its DCL.
Only Step 2 requires CTD implementation, while other steps
simply reuse the existing Zigbee design, and C will not be notified. If C is involved in the process, the new design needs to
handle APS ACK from C, as well as other related complicated
issues. To avoid this, CTD design just requires minimum modification to add CTD layer at RCTD . The CTD design can be fully
compatible with all Zigbee layers, applications, and nodes – ED,
R, C, SN. Therefore, CTD becomes a clean and efficient solution
for Zigbee data traffic diffusion with great compatibility.
IV. RESULTS
A. Tested by Embedded System
To evaluate CTD performance, we implement CTD mechanism on TI CC2530 Zigbee 2007/PRO embedded system development board, as shown in Fig. 7. Each ECG data sample is 4-B
floating point number, which are fed into the board through a
USB port and sent out through the Zigbee antenna. According to
the ECG monitoring scenario in Section II, the expected Zigbee
data transmission rate should be at least 720 samples/s.
First, we set up a 300 s experiment to discover the best transmission strategy for the Zigbee network. From the observation
of the experiment, the performance, such as SD_RATIO, drops
significantly when sending interval is longer than 2 ms. Besides,
we also found transmission quality drops when the distance between any two Zigbee devices is greater than 20 m in the indoor
hall way. Therefore, we conclude requirements of reliable indoor Zigbee transmission are sending each packet every 2 ms
within maximum 20-m transmission range.
Subsequently, we setup our experiment according to the requirements described in the previous paragraph to discover CTD
performance and the best transmission rate. The topology is an
SN connected to two distinct EDs through two separate paths,
which are (SN ← C ← R ← ED) and (SN ← RCTD ← R ←
ED), respectively.

In the original Zigbee network, C needs to handle data traffic
from both EDs. With RCTD , theoretically, C only needs to handle half the traffic from its directly connected ED. From Fig. 8,
our experiment proves that NSN in CTD is better than NSN in the
original Zigbee design. This shows CTD group indeed redirects
excessive traffic from coordinator to the sink, and successfully
resolves bottleneck problem at the coordinator.
Second, to test data transmission rate and data loss tolerance
of CTD compared to the original Zigbee, we increase the size
of the packets, sent from each ED, from 2 to 16 B sequentially. From experiment observations, the sending rate of each
ED approximately falls between 6K and 40 K b/s, and NED
falls between 188 and 1250 samples/s, respectively. Since our
experiment topology has two EDs, the total data rate received
at SN is twice the data rate mentioned previously (i.e., 12K to
80K).
The best Zigbee transmission rate is supposed to be higher
than our expected ECG data transmission requirement, 720 samples/s. As illustrated in Fig. 8, as CTD is applied, the best NSN
is 750 samples/s (24 kb/s) when packet size is 8 B. Increasing
the size of packets sent from ED does not result in better NSN
because of the limited receiving buffer in the Zigbee embedded system. Therefore, we conclude the best NSN throughput is
achieved when the packet size is 8 B (NED = 750 samples/s),
which is the most appropriate sending rate. In other words, excessive sending rate cannot provide better throughput.
As the result, when CTD is applied, we obtain the best NSN ,
750 samples/s, which is above 720 samples/s, the ECG data
real-time display rate. However, NED in the original Zigbee
network is below 720 samples/s. Therefore, the Zigbee network
assisted with CTD can satisfy real-time ECG data display rate.
We try to investigate the SD_RATIO to confirm the discovered
performance results in Fig. 8. As shown in Fig. 9, with the same
packet size, SD_RATIO of CTD is better than SD_RATIO of
the original Zigbee design. In CTD design, SD_RATIO remains
close to 99% when packet size is smaller than 8 B. However,
once the packet size exceeds 8 B, SD_RATIO drops dramatically
and the throughput becomes much worse. Therefore, the largest
preferred packet size should be chosen when SD_RATIO is close
to 99% because it provides the best transmission reliability.

HENRY TSENG: COORDINATOR TRAFFIC DIFFUSION FOR DATA-INTENSIVE ZIGBEE TRANSMISSION

3345

C. Discussion

Fig. 9.

Delivery ratio test.

Fig. 10.

Scalability Test.

B. Tested by NS2
For testing if CTD design is scalable, similar experiments are
conducted in NS2 environment. The network size is 200∗200 m2
with 40-m transmission range. The simulation duration is set to
300 s. For each ED, the CBR rate is 24 kb/s (NED is 750
samples/s), which is higher than ECG real-time data display
rate, 23 kb/s (NED is 720 samples/s). Each ED first connects R
and then takes C or RCTD as the last hop to SN. This simulation
demonstrates the scenario in which SN connects several pairs
of ED and R (ED-R pair). Each ED-R pair is a path from the
ED to SN.
In Fig. 10, as the number of ED-R pairs increases, SD_RATIO
of CTD design is far better than SD_RATIO of the original Zigbee network. The SD_RATIO of CTD is close to 99% and shows
CTD can successfully deliver reliable ECG samples; whereas,
SD_RATIO of the original Zigbee network is below 70% and
even the whole network is paralyzed with 7 ED-R paths because
the coordinator buffer is full. This proves CTD mechanism is far
more scalable than the original Zigbee stack as the network expands. Besides, we also found no data transmission interference
occurs as the network expands. This is because Zigbee device
communication is based on IEEE 802.15.4, which can prevent
concurrent data transmission paths from interfering with each
other.

The experiment demonstrates that CTD implementation in TI
CC2530 embedded system supports real-time ECG data transmission reliably. Figs. 8 and 9 show that, with CTD design, ECG
transmission rate can achieve 24 kb/s, which is above the 23-kb/s
requirement with ignorable data loss. This transmission quality
cannot be achieved in the original Zigbee stack. Besides, NS2
simulation result in Fig. 10 only shows the performance of the
first six paths because the original Zigbee network is paralyzed
with seven concurrent data paths due to a full coordinator buffer.
While the original Zigbee network is paralyzed, CTD routers
remain 99% SD_RATIO and this proves that the CTD design
can support multiple reliable ECG data transmission paths.
As known, there is no inter-PAN communication among multiple PANs. In multiple-PAN scenario, it is possible that one PAN
is overloaded, whereas others are with light traffic. However, no
inter-PAN communication can allow dynamic route switching
for load balancing among PANs. To simulate traffic distribution of Multiple-PAN as well as to keep node connectivity of
single-PAN, RCTD is proposed. RCTD is designed to imitate
coordinator’s role to forward data to SN directly. Therefore, a
CTD group with multiple CTD routers can simulate multiplePAN scenario in which traffic can be distributed into several
PANs for load balancing.
Although the simulation shows good performance of CTD
group, there are still some limitations which will be implemented in the future work. The inadequacy is the lack of dynamic RCTD switching (DRS). Currently, with easy deployment
of RCTD , each ED node can transmit data to SN with a dedicated path for a more promising transmission quality without
involving the coordinator. However, when nodes move out of
their RCTD range or RCTD is also overloaded, DSR needs to
be applied for connecting traffic to another RCTD for reliable
connection and load balancing. This is our limitation and our
future work as well.
Practically, a medical environment can be deployed with
enough RCTD , and the CTD Group can handle the correspondingly large amount of ECG data flows. Some RCTD might idle
for moving Zigbee nodes to join in or for sharing data of an
overloaded RCTD or of the coordinator. If the data traffic exceeds the capacity the current network can process, additional
RCTD can be added to handle excessive data. With DRS, the
CTD design can represent great scalability and flexibility.
V. CONCLUSION
This study presents Zigbee data diffusion solution, CTD, to
address the coordinator bottleneck problem for real-time dataintensive ECG data transmission. Our experiment results show
that the CTD design provides more reliable ECG data transmission than the original Zigbee does. The CTD design can
simulate the flow diffusion effect of multiple-PAN, and Zigbee
nodes retain the flexibility to be connected dynamically as in
a single PAN. Furthermore, the design of the CTD layer only
inserts an additional CTD layer in CTD Router without modifying Zigbee standard. Therefore, the CTD design can be fully
compatible with existing Zigbee stack and applications. The

3346

IEEE TRANSACTIONS ON BIOMEDICAL ENGINEERING, VOL. 60, NO. 12, DECEMBER 2013

experiment demonstrates that CTD implementation in TI
CC2530 embedded system supports real-time ECG data transmission reliably. In conclusion, CTD solution successfully provides reliable ECG real-time data transmission that the original
Zigbee stack cannot.
REFERENCES
[1] P. Valdastri, A. Menciassi, and P. Dario, “Transmission power requirements for novel zigbee implants in the gastrointestinal tract,” IEEE Trans.
Biomed. Eng., vol. 55, no. 6, pp. 1705–1710, Jun. 2008.
[2] P. E. McSharry, G. D. Clifford, L. Tarassenko, and L. A. Smith, “A Dynamical model for generating synthetic electrocardiogram signals,” IEEE
Trans. Biomed. Eng., vol. 50, no. 3, pp. 289–294, Mar. 2003.
[3] R. Nygaard, G. Melnikov, and A. K. Katsaggelos, “A rate distortion optimal ECG coding algorithm,” IEEE Trans. Biomed. Eng., vol. 48, no. 1,
pp. 28–40, Jan. 2001.
[4] S. Chen, T. Kao, C. Chan, C. Huang, C. Chiang, C. Lai, T. Tung, and
P. Wang, “A Reliable transmission protocol for zigbee-based wireless
patient monitoring,” IEEE Trans. Inf. Technol. Biomed., vol. 16, no. 1,
pp. 6–16, Jan. 2012.
[5] A. A. Altun and N. Bascifci, “A wireless sensor network based on zigbee
for ECG monitoring system,” in Proc 5th int. Conf. Appl. Inf. Commun.
Technol., Oct. 2011, pp. 1–5.
[6] C. Ken and X. Liang, “A Zigbee based mesh network for ECG monitoring system,” in Proc 5th int. Conf. Bioinform. Biomed. Eng., Jun. 2010,
pp. 1–4.
[7] K. Ernest and I. ElBabli, “A Zigbee-based telecardiology system for remote healthcare service delivery,” in Proc 1st Middle East Conf. Biomed.
Eng., Feb. 2011, pp. 442–445.

[8] D. R. Zhang, C. J. Deepu, X. Y. Xu, and Y. Lian, “A Wireless ECG plaster
for real-time cardiac health monitoring in body sensor networks,” Biomed.
Circuits Syst. Conf., pp. 205–208, Nov. 2011.
[9] W. Lin, “Real time monitoring of electrocardiogram through
IEEE802.15.4 network,” in Proc 8th Int Conf. Expo Emerging Technol. a
Smarter World, Nov. 2011, pp. 1–6.
[10] Wireless Medium Access Control (Mac) And Physical Layer (Phy) Specification For Low-Rate Wireless Personal Area Networks (LR-WPANs),
IEEE Standard for Information technology—Telecommunications and
information exchange between systems—Local and metropolitan area
networks—Specific requirements, IEEE Computer Society, Sponsored
by the LAN/MAN Standards Committee, IEEE Standard 802.15.4,
2003.
[11] K. Zen, H. Lenando, and M. N. Jambli, “Load balancing based on nodes
distribution in mobile sensor network,” in Proc Int. Conf. IT in Asia, Jul.
2011, pp. 1–6.
[12] K. Huang, C. Tseng, J. Wang, and T. Yang, “A Controller-assisted distributed (CAD) load balancing scheme for zigBee networks,” in Proc Int.
Conf. Parallel Process. Workshops, Sep. 2011, pp. 1–5.
[13] A. Goldberger, A. LAN, L. Glass, J. Hausdorff, P. Ivanov, R. Mark,
J. Mietus, G. Moody, C. Peng, and H. Stanley, “PhysioBank, PhysioToolkit, and PhysioNet: Components of a new research resource for
complex physiologic signals,” Circulation, vol. 101, no. 23, pp. 215–220,
2000.
[14] [Online]. Available: Wiki. dbm, http://en.wikipedia.org/wiki/DBm

Author’s photograph and biography not available at the time of publication.

