IEEE JOURNAL OF BIOMEDICAL AND HEALTH INFORMATICS, VOL. 18, NO. 1, JANUARY 2014

183

A Level-Crossing Based QRS-Detection Algorithm
for Wearable ECG Sensors
Nassim Ravanshad, Student Member, IEEE, Hamidreza Rezaee-Dehsorkh, Student Member, IEEE,
Reza Lotfi, Member, IEEE, and Yong Lian, Fellow, IEEE

Abstract—In this paper, an asynchronous analog-to-information
conversion system is introduced for measuring the RR intervals of
the electrocardiogram (ECG) signals. The system contains a modified level-crossing analog-to-digital converter and a novel algorithm for detecting the R-peaks from the level-crossing sampled
data in a compressed volume of data. Simulated with MIT-BIH
Arrhythmia Database, the proposed system delivers an average
detection accuracy of 98.3%, a sensitivity of 98.89%, and a positive prediction of 99.4%. Synthesized in 0.13 μm CMOS technology
with a 1.2 V supply voltage, the overall system consumes 622 nW
with core area of 0.136 mm2 , which make it suitable for wearable
wireless ECG sensors in body-sensor networks.
Index Terms—Analog-to-digital converter (ADC), asynchronous
analog-to-information conversion system, level-crossing sampling,
QRS detection, wearable electrocardiogram (ECG) monitoring
devices.

I. INTRODUCTION
EVEL-CROSSING sampling is getting popular in a wide
class of low-power sensor–interface systems due to its simplicity and superior power efficiency. The activity-dependent
nature of this sampling scheme, in which a new sample is
taken only when a significant change occurs in the input-signal
value, leads to a considerable performance improvement in the
data acquisition systems when operating on sparse burst-like
signals. The advantages of level-crossing sampling over traditional Nyquist sampling were first reported in [1], where its
ability in data compression is demonstrated. The application
of level-crossing sampling scheme to analog-to-digital converters (ADCs) also attracted much attention [2], [3]. Other systems utilizing the level-crossing sampling has been reported in
the past decade including speech [3]–[5], ultrasound [6], accelerometer [7], and biomedical signal acquisition [8]. Utilizing
level-crossing sampling for creating an event-driven system is
considered by a growing number of researches, some focus on
developing complete level-crossing-based systems [including

L

Manuscript received January 22, 2013; revised May 13, 2013; accepted July
17, 2013. Date of publication July 25, 2013; date of current version December
31, 2013.
N. Ravanshad, H. Rezaee-Dehsorkh, and R. Lotfi are with the Integrated
Systems Laboratory, Department of Electrical Engineering, Ferdowsi University of Mashhad, Mashhad 9177948944, Iran (e-mail: n_ravanshad@ieee.org;
hr_rezaee@ieee.org; rlotfi@ieee.org).
Y. Lian is with the Department of Electrical Engineering and Computer Science, Lassonde School of Engineering, York University, Toronto, ON M3J 1P3,
Canada (e-mail: peterlian@cse.yorku.ca).
Color versions of one or more of the figures in this paper are available online
at http://ieeexplore.ieee.org.
Digital Object Identifier 10.1109/JBHI.2013.2274809

ADC, processor, and digital-to-analog converter (DAC)] [9],
[10], others try to improve the efficiency of the system for specific applications [5], [7], [8], [11], [12], and yet others develop
circuit techniques for low-cost circuit implementation of levelcrossing-based systems [13]–[15].
In this paper, we focus on developing level-crossing-based
QRS detector for cardiac monitoring devices. Electrical activity
of the heart, which is detectable by placing the electrodes at
the outer surface of the skin, can be recorded by the electrocardiograph device. The electrocardiogram (ECG) signal provides
valuable information about the rate and regularity of the heart
beats, which can be used in diagnosis of cardiac diseases. The
most significant feature of the ECG signal is the QRS complex,
the peak of which is specified as R-peak [16]. The RR interval,
which is the time interval between two consecutive R peaks,
can be used to detect irregularities in the heart normal operation, called arrhythmia. Many QRS-detection algorithms were
proposed and widely studied for decades. The basic techniques
are based on the amplitude, i.e., first derivative or first and second
derivatives of the signal [17], [18]. More complicated algorithms
such as wavelet-based QRS detection, filter-bank methods, neural network approaches, mathematical morphology, and others
are reviewed and compared in [19]. Despite the high functionality of these methods, most of them need complex computations
that restrict their use in the body sensor networks (BSNs). The
ambulatory monitoring in BSN usually uses wearable devices to
record the signals continuously for a long period of time. Such
systems have to be designed with minimum size, complexity,
and power consumption.
Several solutions have been presented in order to achieve
these goals, most of which are aimed to extract the desired
characteristics of the signal by using a compressed number
of samples. The suggested methods such as wavelet compression and compressed sensing suffer from large amount of acquired data and the complex digital postprocessing for data
reconstruction, respectively, and therefore are not applicable for
wearable devices, especially for self-powered devices in BSN.
Asynchronous level-crossing sampling scheme is an alternative
approach for this purpose, which meets both targets of data
compression and feature extraction simultaneously [7], [8]. Under the scheme, the sampling rate is directly proportional to the
activity of the input signal and no power is wasted for sampling, converting, and processing the useless data in the inactive parts of the signal. This is well suited for ECG signal due
to its sparse and burst-like nature. However, there are limited
works studying the QRS detection using level-crossing sampled
data [8], [11], [20].

2168-2194 © 2013 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See http://www.ieee.org/publications standards/publications/rights/index.html for more information.

184

IEEE JOURNAL OF BIOMEDICAL AND HEALTH INFORMATICS, VOL. 18, NO. 1, JANUARY 2014

Fig. 1. Different sampling schemes with the same number of samples in the
active part of the signal: (a) regular synchronous sampling and (b) level-crossing
sampling.

In this paper, a novel algorithm for extracting the RR intervals from the output data of the level-crossing-based ADC
(LC-ADC) is proposed. It employs special features of levelcrossing sampling in order to achieve improved power efficiency as well as detection accuracy. The system performance
is evaluated using all recordings of the MIT-BIH Arrhythmia
Database [21]–[23].
The rest of the paper is organized as follows: Section II includes a brief description about the basics of the LC-ADC operation. The proposed QRS-detection algorithm is introduced
in Section III. The evaluation of the algorithm is presented in
Section IV, followed by performance comparison in Section V.
Finally, the concluding remarks are presented in Section VI.
II. LEVEL-CROSSING ADC
The illustrations of the synchronous and level-crossing sampling are shown in Fig. 1. The synchronous sampling is based
on a reference clock with a constant period of TS and so the time
intervals between the samples are constant. The level-crossing
sampling, on the other hand, is an irregular or asynchronous
sampling method. It divides the amplitude into 2M −1 quantization levels, indicated as dotted lines in Fig. 1(b), in which
M is the ADC physical number-of-bits or resolution. A sample is taken only when the input signal crosses one of these
quantization levels [2].
Using the level-crossing sampling, the conversion process
and so the operation of the LC-ADC is dependent on the amplitude change in the input signal and so the sampling rate is
proportional to the activity of the input signal. This property
may lead to advantages in using the LC-ADC for two types of
signals. The first type is the sparse signals that are approximately
constant in most of the times and active in small time intervals
such as speech, pressure, temperature, heart, and neural signals.
In these types of signals, when the signal has small variations

such that no level-crossing happens, the circuit is in the sleep
mode and no sample is taken. No extra power is wasted for
data conversion in the intervals with little useful data and the
average sampling rate can be reduced that improves the system efficiency. The other type of signals is burst-like signals
such as ECG, electroencephalogram (EEG), and electromyogram (EMG). Unlike the conventional synchronous ADCs, the
accuracy of the LC-ADC is not limited by using limited number of the quantization levels. In the applications with burst-like
signals, the power efficiency can be improved by using smaller
hardware number of bits, which results in lower data rate and
hardware complexity [3]. In the example shown in Fig. 1, the
number of samples taken in the active part is the same as in the
inactive part for a fixed interval under synchronous sampling
scheme while level-crossing sampling takes much less samples
in the inactive region. Since the ECG signal is both sparse and
burst-like, it can benefit from level-crossing sampling.
Unlike the synchronous sampling, samples in the levelcrossing sampling are unevenly distributed. Faster the input
signal changes, closer the samples. Therefore, in addition to the
value of the signal, the sampling instants should also be recorded
by the LC-ADC. Several methods are presented for recording
and processing the nonuniform sampled data coming from an
LC-ADC. In order to transport and store these data by using
a common synchronous system, the time intervals between the
samples (Dti ) can be quantized and represented with a limited
number of bits [3]. Due to the fact that the values of the samples
are exactly known and the sampling instants are quantized, the
LC-ADC operation in this situation is the dual operation of a
synchronous ADC, in which the sampling instants are exactly
known and the data values are quantized. In order to measure the
time interval between two adjacent samples, a local timer can
be used. This timer can be simply a counter with a constant period of TTim er or a more complicated time-to-digital converter
(TDC). Unlike the synchronous analog-to-digital conversion, in
level-crossing ADC, no inherent noise is added to the data values due to the limited number of quantization levels. The limited
resolution of the timer is the factor that may reduce the accuracy
of the ADC.
Irregular level-crossing samples of value and time can be
processed using asynchronous signal processing methods [24],
which is the method used in this paper for detecting the QRS
complexes from the ECG signal. In this method, no additional
circuitry is needed to convert the nonuniform sampled data to
uniform ones as in [2] and no special continuous-time digital
signal processor is needed to be designed as in [9].
III. QRS-DETECTION SYSTEM
A traditional QRS-detection system includes electrodes, lownoise amplifier, filter, variable-gain amplifier, ADC, and processing unit. In this section, we present a new approach for
QRS detection that is based on asynchronous level-crossing
ADC and nonuniformly spaced data processing. It is shown
that by using this system, the processing data volume can be
reduced considerably that may result in lower power consumption, especially for wireless transmission. Also the proposed

RAVANSHAD et al.: LEVEL-CROSSING BASED QRS-DETECTION ALGORITHM FOR WEARABLE ECG SENSORS

Fig. 2.

185

Operation of the increased-gap LC-ADC: k = 3 LSB.

system significantly improves detection accuracy compared to
the previous works that use LC-ADC for QRS detection.
A. Exploiting LC-ADC for QRS Detection
Detecting the QRS complex is challenged by appearance of
various noise sources, such as muscles’ contraction, power-line
interference, baseline drift due to respiration, electrode contact
noise, and motion artifact, especially in the case of wearable
devices. Also other components of the signals, such as large P
and T waves may destroy the detection process. In addition, the
basic morphological feature of the QRS complex varies from
patient to patient. Therefore, almost all the QRS-detection algorithms use some kinds of filtering to attenuate the unwanted
parts of the signal, which can be implemented both in the analog
domain (before the ADC) or digital domain (after the ADC and
before the detection algorithm). In order to realize this filter in
the analog domain with sufficient linearity, a narrow-band highorder bandpass filter is needed (5–15 Hz [25]), which cannot
be implemented without increasing power consumption. Implementing the filter in the digital domain also burden extra
computation and so power consumption to the system. It will
be shown in the following that by using an LC-ADC one can
simply omit most of the undesired noises and even signals with
the amplitude less than a specified value. Using this property,
a simple algorithm can be utilized to detect the QRS complex
without using any additional circuitry or computation for excess
filtering. There are just few works that mentioned the QRS detection by using the level-crossing samples [8], [11], in which
just the activity-decrement property of the level-crossing sampling is considered. Pre-ADC filtering and adaptive-resolution
techniques are used in [8] to enhance the detection performance
at the expense of higher complexity and power consumption.
In order to explain the idea, it is necessary to understand
the basic operation of LC-ADC, which is illustrated in Fig. 2.
The LC-ADC produces the output based on a pair of in-process
quantization levels, which should be specified and stored in two
registers. The input signal should always be surrounded by these
two quantization levels. Whenever the input signal leaves the
gap between the two in-process quantization levels, the values
of these levels increase or decrease by one least-significant bit
(LSB) approaching the input signal. The LSB value is defined
as follows:
LSB =

2AF S
2M

(1)

Fig. 3. Effect of the increasing the gap between the two in-process quantization
(k) on level-crossing sampling: (a) k = 1 LSB, (b) k = 2 LSB, and (c) k =
3 LSB.

where AF S is the ADC input voltage amplitude range and M
is the ADC resolution. Then, the new quantization levels are
compared with the input signal again. This means that if the input
signal is greater than the upper level, both levels are increased
by 1 LSB and if the input signal is less than the lower level, both
levels are decreased by 1 LSB. When the ADC starts operating,
this process is performed repeatedly until the input signal is
surrounded by the in-process quantization levels. Therefore,
the LC-ADC may need an initial time to settle to the proper
operation.
The gap between the two in-process quantization levels (denoted with k) is conventionally selected to be equal to 1 LSB,
not to miss any level-crossing. In the situation of k = 1 LSB, as
shown in Fig. 3(a), if the input signal experiences noise at the
level-crossing point, it generates multiple crossings, i.e., there
are too many un-wanted output samples that do not contain any
useful information. In order to avoid such a problem, one way
is to increase the k value to more than 1 LSB. Fig. 2 shows an
example of k = 3 LSB. As it can be observed from this figure, samples are taken only when the signal changes more than
1 LSB at the same direction or k-1 LSB at the opposite direction.
Under such a sampling scheme, as shown in Fig. 3(b) and (c),
with every changing of direction in the input signal from rising
to falling and vice versa, k−1 level-crossings are skipped and
the signals with the amplitude of less than k LSB do not appear

186

Fig. 4.

IEEE JOURNAL OF BIOMEDICAL AND HEALTH INFORMATICS, VOL. 18, NO. 1, JANUARY 2014

Flowchart of the algorithm operation.

in the output. The benefits of the scheme are reduced sample
points as well as noise filtering.
Different values of k can be applied to the ADC simply by
loading the proper values into the registers that holds the values
of the in-process quantization levels, at the startup. Therefore,
no additional circuitry or complicated processes are needed to
apply the selected k to the ADC or even change the value of k
during the system operation.
B. QRS Detection Using Level-Crossing Samples
The main drawback of the level-crossing sampling method
is that the subsequent signal processing needs to be done on
nonuniformly sampled data comes from an LC-ADC. Complicated digital signal processing techniques are essential in
order to apply the conventional QRS-detection algorithms to
the asynchronous level-crossing sampled data. This may completely destroy the advantage of LC-ADC. In previous works
that study the QRS detection using level-crossing sampled data,
they either use amplitude thresholding [8] or convert nonuniform samples to uniform ones [11]. For amplitude thresholding,
the large baseline wandering or sudden amplitude change in the
signal, such as high R-peak or PVC (premature ventricular contraction), affect the accuracy of QRS detection. For nonuniform
to uniform conversion [11], it requires extra conversion circuit
or algorithm in addition to QRS-detection algorithm, which is
not power efficient. As it is shown in the following, a simple
but accurate QRS-detection algorithm can be developed that
processes nonuniformly sampled data from an LC-ADC.
The flowchart of the proposed algorithm is shown in Fig. 4. As
the first step, the ECG signal is passed through the LC-ADC. The
block-diagram of the LC-ADC, including a sample of the input
and output signals is shown in Fig. 5. The LC-ADC provides
three signals at the output: a 2-bit signal representing the change
of each sample value from the previous one (DVi ) {1 LSB
(“01”), k – 1 LSB (“00”), −1 LSB (“10”), −k + 1 LSB (“11”)},
a token signal to indicate the sampling occurrence and an 11-bit
signal representing the time interval between the current sample
and the previous one (Dti ). The algorithm does not use the

Fig. 5. Block diagram of the LC-ADC, including samples of the input and
output signals.

value of the signal, but the change in the direction of the signal
(up or down), which helps to detect the peaks. The second step
is to detect the peaks of the signal that can be done by finding
out that the DVi value of the current sample is matched with
“00” or “11” values.
The final step of the algorithm, which is the main one, is to
find out whether this peak is an R-peak or not. The fundamental
of this part of the algorithm is almost similar to the derivativebased algorithms. In the derivative based algorithms [16], as
the time period of the sampling is constant, the difference between the values of consecutive samples represents the gradient
of the input signal at each moment. For the level-crossing sampled data, the difference between the amplitude of consecutive
samples is constant and so the time interval between two consecutive samples can be a representation of the input signal
gradient. Smaller the time interval, larger the gradient of the
input signal. Using this property, in the proposed algorithm, the
time intervals (Dti ) of a constant window of level-crossings
(W level-crossing, which means W – k + 1 sample) around the
detected peak is stored. The sum of the stored time intervals
(dur) can be a representation of the spike duration that can be
used to recognize the R-peaks:


P + [ W2 ]−k +j

dur(P ) =



i=P −[ W2

Dti ,
]

j=

0,
1,

even W
odd W

(2)

where P is the index of the sample in which the peak is detected
and [x] represents the largest integer that is less than or equal to
x.
The detection of a QRS complex is completed by comparing
dur with a threshold value (TH1 ). If dur is less than TH1 , which
means that the duration of the spike is short enough and the

RAVANSHAD et al.: LEVEL-CROSSING BASED QRS-DETECTION ALGORITHM FOR WEARABLE ECG SENSORS

187

of the algorithm can be realized by comparing the time interval
between the current sample and the previous R-peak (ΔTBeat )
with a threshold (TH2 ). The value of TH2 is selected to be half of
the average period of the beats (PoB). The PoB value is initially
set and whenever an R-peak is detected, its value is updated
adaptively using the following equation:
PoB = PoB − [coeff3 · (PoB − ΔTBeat )].

Fig. 6.

Basics of operation of the proposed QRS-detection algorithm.

variation of the spike is fast enough, the peak can be declared as
an R-peak. The operation of this method on a real ECG signal is
shown in Fig. 6, which is a section cut of the Tape 103 of MITBIH Arrhythmia Database. The value of k is equal to 4 LSBs
in this example. The signal has 4 peaks in this time interval and
the values of dur are shown for W = 9. As it can be seen, the
dur value for the R-peak is much smaller than the three other
peaks.
As the slope of the R-waves and also the amplitude of the QRS
complex varies from patient to patient and also over time, the
range of dur values can be changed. Therefore, in order to reduce
the sensitivity of the algorithm to the threshold value, TH1 is
tuned adaptively [26] during the algorithm operation using the
following algorithm. This algorithm has three variables (SP, NP,
and TH1 ), which are initially set and adaptively updated by the
algorithm, and two coefficients (coeff1 and coeff2 ), which are
constant during the operation. SP is the running estimate of the
dur value for the signal R-waves and NP is the running estimate
of the dur value for the noise (not R-wave) peaks. If the detected
peak is decided to be an R-peak
SP = SP − [coeff1 × (SP − dur)]

(3)

NP = NP − [coeff1 × (NP − dur)]

(4)

otherwise,

and for each detected peak the value of TH1 is updated using
TH1 = SP + [coeff2 × (NP − SP)].

(5)

The values of the coeff1 and coeff2 are both selected to be 0.25
and so the [coeff. x] terms of the aforementioned equations can
be simply implemented by ignoring the two LSB bits without
using an additional multiplier.
To avoid false QRS detection due to fast high T-waves, a
dead-time zone is set up adaptively in order to reject any QRS
detection too close to the previous one. In order to measure
the RR intervals, either a local timer can be used or the time
interval can be calculated by summing the Dti values. This part

(6)

The value of coeff3 is selected to be 0.125 in order to simplify
the implementation of [coeff3 . x] by just ignoring the three LSB
bits. Therefore, all the coefficients are selected such that all the
multiplications can be implemented using truncation. In order to
prevent the algorithm from failure at the presence of a period of
missed beats (e.g., in Tape 203 at around 1490 s), there should
be a specified upper bound for PoB. An upper bound of 1 s is
selected in this design.
In summary, the proposed algorithm detects the QRS complexes from the level-crossing sampled data by making use of
special features embedded in the level-crossing samples, i.e.,
gradient and the time intervals between the samples. No additional circuitry is needed to convert the nonuniformly sampled
data to uniform ones. The QRS detector fully benefits from the
asynchronous operation of the LC-ADC and its data compression capability.
As it is obvious from the nature of the algorithm, in order to
have a well-operated algorithm, minimum of W level-crossings
should be captured by the LC-ADC from the R-wave. The number of the samples taken from the R-wave is directly related to the
resolution of the LC-ADC (M ). In order to find out the desired
value of M for the QRS detection, the 48 half-hour-recorded
ECG signals of the MIT-BIH Arrhythmia Database are applied
to an LC-ADC that is modeled in MATLAB with various values
of M and k. In order to have sufficient samples in the case of
large values of M , linear interpolation is utilized to increase
the sampling rate of the recordings of the MIT-BIH Arrhythmia
Database by 16 times before applying to the LC-ADC. Using
the LC-ADC output data, the possible locations of the beats are
estimated utilizing simple peak detection and the numbers of
missed beats are measured using beat-by-beat comparison [27].
The ratio of these values over the total number of beats (109428
beats in total) is calculated and plotted in Fig. 7(a) versus k for
different values of M . To keep the missed beats within 0.05%,
M should be greater than 7 bits for k ≥ 3 LSB. Fig. 7(b) reveals the average sampling frequency of the entire 48 half-hour
signals of the MIT-BIH Arrhythmia Database for the same values of M and k. It is obvious that 7-bit LC-ADC achieves
much lower average sampling frequency at the same k values
compared to its 8-bit counterpart. Furthermore, as mentioned in
Section III-A and shown in Fig. 3(a), the cases of k = 1 LSB
are not acceptable because the average sampling frequency is
very sensitive to noise in these cases. The best design points are
{M = 7, k = 2, 3, 4} and {M = 6, k = 2}. Although the case
{M = 6, k = 2} has the lowest average sampling frequency, the
samples at the active portions of the ECG signal is too sparse in
this case, especially for low-amplitude signals, which affects the
accuracy of QRS detection. Therefore, since higher values of k
are preferred because of the noise immunity and lower average

188

IEEE JOURNAL OF BIOMEDICAL AND HEALTH INFORMATICS, VOL. 18, NO. 1, JANUARY 2014

Fig. 8. Detection of the QRS using Tape 100 of MIT-BIH Arrhythmia
Database with a standard ECG waveform and a zoom-in segment to show
the exact location of the flags.

Fig. 7. Test results of the LC-ADC operation on the MIT-BIH Arrhythmia
Database recordings.

sampling frequency, the case {M = 7, k = 4} can be a preferred
design point. The average sampling frequency, over the entire
database, is about 67 Hz in this case. This value is much less
than the sampling frequency used by regular sampling systems,
which is about 200–600 Hz (360 Hz for MIT database). Based
on the maximum gradient of the input signals, a counter with the
clock frequency of 5.76 kHz is used as the timer. It should also
be mentioned that, since the minimum time interval between
two consecutive samples is large enough (more than 0.5 ms),
the algorithm can process the data and make decision before
the next sample is captured. Therefore, no conflict is happened
for processing close peaks. Also, based on the maximum time
interval between consecutive samples, an 11-bit counter is used
as the timer. If the timer reaches its maximum value before the
next level-crossing, an extra sample is recorded to the output
of the ADC. Although this sample does not represent a levelcrossing and may contain k LSB error, it does not affect the
detection algorithm because it is located in the inactive portion
of the signal.
The best performance of the QRS detector is obtained for
W = 9 by tuning the performance over MIT-BIH Arrhythmia
Database. Using W = 9 and based on (2), just six samples are
used for each beat evaluation. Based on (2), in the case of k =
4 and W = 9, the detection of the R-peaks is delayed by two
samples. Simulation shows that this delay is less than 0.17 s for
all the records of MIT-BIH Arrhythmia Database and the mean
value of the delay is about 0.012 s, which are portions of the
duration of the QRS complex. These values are at the order of
the delay reported by other QRS-detection algorithms that is,
for example, equal to half of the maximum possible duration of
the normal QRS complex [16].
IV. PERFORMANCE EVALUATION
The proposed QRS detector is modeled and simulated in
MATLAB. In order to evaluate the system functionality, the
first channels of the 48 half-hour ECG recordings of MIT-BIH
Arrhythmia Database are used. The signals are passed through

Fig. 9. Detection of the QRS using Tape 105 of MIT-BIH Arrhythmia
Database: [(a) and (b)] baseline wander and (c) severe noises.

a 7-bit LC-ADC with k = 4 LSB and a 10 mV full-scale input range and then evaluated by the proposed algorithm. The
performance of the algorithm, dealing with different abnormal
ECG signals, is shown in Figs. 8–10.
In Fig. 8, a detection example of the QRS using Tape 100 and
a zoom-in segment of this tape are shown. As it can be seen,
nearly all the samples are taken from the QRS regions and no
power is wasted to sample the silent parts of the signal with
small variations. Fig. 9 shows the performance of the algorithm
under the presence of the artifact using Tape 105. Fig. 10(a) and
(b) demonstrates the handling of large P or T waves and irregular
ECG signals, respectively. From all examples, it can be seen that
the proposed system correctly detects the QRS complexes of the
ECG signal, even under the presence of baseline drift, severe
noise, large P or T waves, and irregular ECG waveform.

RAVANSHAD et al.: LEVEL-CROSSING BASED QRS-DETECTION ALGORITHM FOR WEARABLE ECG SENSORS

189

TABLE I
PERFORMANCE EVALUATION OF THE SYSTEM BY USING THE MIT-BIH
ARRHYTHMIA DATABASE

Fig. 10. Detection of the QRS using MIT-BIH Arrhythmia Database: (a) Tape
117: Large P or T waves, (b) Tape 200: Irregular ECG waveform.

In order to evaluate the performance of the QRS-detection
algorithm, the numbers of failings to detect an R-peak (false
negative or FN) and false beat detection (false positive or FP)
are calculated for all 48 tapes under investigation using the
standard of [27]. The results are reported in Table I. Using
these values, three other parameters of sensitivity (Se), positive
prediction (+P ), and detection error rate (DER) are calculated
and reported, which are defined as follows:
TP
TP + FN
TP
+P =
TP + FP
FP + FN
DER =
Total Beat
Se =

(7)
(8)
(9)

in which true positive (TP) means the number of truly detected
beats [27]. Based on the results of Table I, a detection error
of 1.71% is obtained against the recordings of the MIT-BIH
Arrhythmia Database. This performance is comparable to the
current QRS-detection algorithms, all achieved at very large
amount of sampled data, using complicated pre/post ADC filtering and complicated detection algorithms.
As it can be seen in Table I, there are just a few tapes (such
as 203, 207, 213, and 222) in which almost large values are obtained for FN and/or FP characteristics. As shown in Fig. 11(a),
Tape 203 suffers from high-amplitude, high-frequency noise.
Therefore, as no filtering is used in the system and all the noises
cannot be removed with the selected value of k, some noises are
detected as beat. Moreover, detecting a noise signal as a beat
just before an actual beat signal, causes missing the actual beat
because of the period constraint and so couples of FP and FN
are created. The constant value of k is tuned to reach the best
result over the entire database, which also contains some very
low-amplitude signals such as Tapes 222 and 232. Therefore,
the value of k cannot be increased. This issue can be resolved

by filtering the input signal or tuning the value of k based on the
amplitude of the input signal.
In just three specific parts of Tape 207, a part of which is
shown in Fig. 11(b), the input signal is messy and contains abnormal beats with large duration. It seems that for such a signal,
the value of TH2 should be updated at these specific parts of

190

IEEE JOURNAL OF BIOMEDICAL AND HEALTH INFORMATICS, VOL. 18, NO. 1, JANUARY 2014

TABLE II
COMPARISON OF THE PROPOSED ALGORITHM WITH ONE USED IN [8]

entire database, low amplitude means less samples are taken
by the ADC. An example of such case is shown in Fig. 11(d)
for Tape 222. Better results can be obtained if the amplitude of
the input signals are tuned by using some kind of variable-gain
amplifier, before applying to the ADC or using small values of
k in the case of low-amplitude input signals. For example if the
amplitude of the Tape 222 is multiplied by 1.5 before applying
to the LC-ADC, the DER reduces from 8.1% to 2% for this tape.
It is possible to further improve the accuracy, but it requires
additional circuits to adaptively adjust other parameters such
as k and W , utilizing a search-back technique to recover the
missed beats, or using sophisticated adaptive thresholding. All
of them are at the expenses of higher complexity, power consumption and larger area. Since our target is for QRS detection
in self-powered wearable device, the proposed algorithm strikes
a balance between power and performance.
V. PERFORMANCE COMPARISON

Fig. 11. Detection of the QRS using MIT-BIH Arrhythmia Database: (a) Tape
203: sever noise results in couples of FP and FN, (b) Tape 207: missing beats
due to messy input signal and abnormal beats with large duration, (c) Tape 213:
missing beats due to abnormal beats with large duration, and (d) Tape 222:
missing beats due to the lack of enough samples.

the signal. There are similar situations in some specific parts of
Tape 213, which is shown in Fig. 11(c). Such a situation in
which a couple of beats are missed due to thresholds’ misalignment, can be resolved by using a conventional search-back
technique [26], at the expence of more complexity.
The other factor that affects the performance of the proposed
algorithm is large variations in signal amplitude, e.g., from a
quarter of the full-scale to the full-scale. Actually the amplitude
values of 97.9% of tapes are less than 80% of the full-scale
range. Among them, about 50% are less than 50% of the fullscale range. There are also some signals such as Tapes 222 and
232, the amplitude values are just around a quarter of the fullscale range. Since the LC-ADC specifications (M and k) are
supposed to be fixed and tuned for best performance over the

In comparison to existing QRS-detection algorithms, the proposed one requires much less power. For a 7 bit LC-ADC and
a gap of 4 LSB between the in-process quantization levels,
the average sampling frequency is less than 67 Hz. By reducing the average sampling frequency, the activity of the system
is minimized resulting significant reduction in dynamic power
compared to the Nyquist sampling systems. In addition, as it is
obvious from the algorithm operation, all the processing except
the comparison of the two-bit data value with “00” and “11”
and the timer operation, is done after a peak is detected. This
reduces the processing rate from 67 Hz to less than 5 Hz, which
is the average number of peaks per unit of time. In most of the
conventional derivative-based algorithms, all of the subtractions
and additions are performed for each sample and so the processing rate for these parts is equal to the sampling rate. Also as just
6 samples are needed for the detection, the memory requirement is lowest among all algorithms. Finally, the processing
blocks involve only shift registers, adders, and comparators. No
complex processing blocks such as multipliers are required. All
these could lead to an ultra-low-power implementation of the
proposed sampling-and-processing QRS-detection system. This
is in contrast to many reported high-accuracy QRS-detection
algorithms that utilize power-hungry complicated processing
circuitries and abundant memory capacity [28], [29].
Although level-crossing sampling is used in [8] for the QRSdetection application, the LC-ADC in [8] does not utilize the
increased value of k. Hence in [8] an analog filter is assumed to
be employed before applying the signal to the ADC. Also adaptive thresholding is utilized in [8] in order to extract the critical
features from the input signal, which may increase the power
consumption in the implementation. In the proposed method, the

RAVANSHAD et al.: LEVEL-CROSSING BASED QRS-DETECTION ALGORITHM FOR WEARABLE ECG SENSORS

191

TABLE III
PERFORMANCE COMPARISON WITH OTHER QRS-DETECTION PROCESSORS

filtering function is embedded in detection process, which eliminates the use of extra filter for pre-processing. Also the proposed
algorithm is simple in implementation and achieves acceptable
performance over the entire MIT-BIH Arrhythmia Database.
Table II shows the comparison of the proposed duration-based
algorithm with the conventional amplitude-thresholding algorithm [8]. It can be seen that the proposed duration-based
algorithm improves the detection performance for some of
tapes.
To illustrate the low-power feature of the proposed algorithm,
the proposed QRS detector including a 7-bit LC-ADC and the
proposed duration-based QRS-detection algorithm was implemented in a 0.13 μm CMOS technology. The Synopsys Design
Compiler is used for the synthesis of the LC-ADC and processor logics as well as power estimation. ECG signals from the
MIT-BIH Arrhythmia Database are used as a test bench for
generating switching activities in power estimation. The logic
occupied area has been estimated using SoC Encounter. Simulations show that using a 5 kHz clock signal for the LC-ADC timer,
and with a 1.2-V supply voltage, the LC-ADC and the processor
consume 175 and 447 nW, respectively. The power consumption
is dominated by leakage power, which can be further reduced by
using low-power libraries. Without applying any low-power
techniques, the power consumption of proposed system is much
lower than conventional synchronous solutions, which are compared in Table III. Low power consumption and small area
occupation of the proposed QRS-detection methodology make
it suitable for body-area-network devices.
VI. CONCLUSION
A power-efficient asynchronous analog-to-information conversion system for QRS-detection application has been presented that contains a level-crossing ADC and a novel QRSdetection algorithm. It is shown that by reducing the processing
rate to less than 5 Hz and using a few numbers of samples to
make the decision, the system can be implemented with less
complexity and less power consumption compared to the conventional regular-sampling synchronous systems. The system
performance has been evaluated using the MIT-BIH Arrhythmia
Database with a sensitivity of 98.89% and a positive prediction
of 99.4%, without any filtering requirement. The performance
of the proposed algorithm might be enhanced by applying techniques such as search-back and adaptive thresholding, at the
cost of more power consumption.

REFERENCES
[1] J. Mark and T. Todd, “A nonuniform sampling approach to data compression,” IEEE Trans. Commun., vol. 29, no. 1, pp. 24–32, Jan. 1981.
[2] N. Sayiner, H. V. Sorensen, and T. R. Viswanathan, “A level-crossing
sampling scheme for A/D conversion,” IEEE Trans. Circuits Syst. II,
Analog Digit. Signal Process., vol. 43, no. 4, pp. 335–339, Apr. 1996.
[3] E. Allier, G. Sicard, L. Fesquet, and M. Renaudin, “A new class of asynchronous A/D converters based on time quantization,” in Proc. 9th IEEE
Int. Symp. Asynchronous Circuits Syst., May 2003, pp. 196–205.
[4] E. Allier, J. Goulier, G. Sicard, A. Dezzani, E. Andre, and M. Renaudin,
“A 120 nm low power asynchronous ADC,” in Proc. Int. Symp. Low Power
Electron. Design, Aug. 2005, pp. 60–65.
[5] M. Kurchuk and Y. Tsividis, “Signal-dependent variable-resolution clockless A/D conversion with application to continuous-time digital signal
processing,” IEEE Trans. Circuits Syst. I, Reg. Papers, vol. 57, no. 5,
pp. 982–991, May 2010.
[6] K. Kozmin, J. Johansson, and J. Delsing, “Level-crossing ADC performance evaluation toward ultrasound application,” IEEE Trans. Circuits
Syst. I, Reg. Papers, vol. 56, no. 8, pp. 1708–1719, Aug. 2009.
[7] M. Trakimas and S. Sonkusale, “An adaptive resolution asynchronous
ADC architecture for data compression in energy constrained sensing
applications,” IEEE Trans. Circuits Syst. I, Reg. Papers, vol. 58, no. 5,
pp. 921–934, May 2011.
[8] R. Agarwal and S. Sonkusale, “Input-feature correlated asynchronous analog to information converter for ECG monitoring,” IEEE Trans. Biomed.
Circuits Syst., vol. 5, no. 5, pp. 459–467, Oct. 2011.
[9] B. Schell and Y. P. Tsividis, “A continuous-time ADC/DSP/DAC system
with no clock and with activity-dependent power dissipation,” IEEE J.
Solid-State Circuits, vol. 43, no. 11, pp. 2472–2481, Nov. 2008.
[10] Y. W. Li, K. L. Shepard, and Y. P. Tsividis, “A continuous-time programmable digital FIR filter,” IEEE J. Solid-State Circuits, vol. 41, no. 11,
pp. 2512–2520, Nov. 2006.
[11] Y. Hong, I. Rajendran, and Y. Lian, “A new ECG signal processing scheme
for low-power wearable ECG devices,” in Proc. 2011 Asia Pacific Conf.
Postgrad. Res. Microelectron. Electron. (PrimeAsia 2011), Oct. 2011,
pp. 74–77.
[12] T. Wang, D. Wang, P. J. Hurst, B. C. Levy, and S. H. Lewis, “A levelcrossing analog-to-digital converter with triangular dither,” IEEE Trans.
Circuits Syst. I, Reg. Papers, vol. 56, no. 9, pp. 2089–2099, Sep. 2009.
[13] E. Allier, G. Sicard, L. Fesquet, and M. Renaudin, “Asynchronous level
crossing analog to digital converters,” Meas. J., vol. 37, pp. 296–309, Apr.
2005.
[14] F. Akopyan, R. Manohar, and A. B. Apsel, “A level-crossing flash asynchronous analog-to-digital converter,” in Proc. 12th IEEE Int. Symp. Asynchronous Circuits Syst., Grenoble, France, Mar. 2006, pp. 12–22.
[15] C. Weltin-Wu and Y. Tsividis, “An event-driven, alias-free ADC with
signal-dependent resolution,” in Proc. 2012 IEEE Symp. VLSI Circuits
Digest Tech. Papers, Jun. 2012, pp. 28–29.
[16] F. Zhang and Y. Lian, “QRS detection based on multiscale mathematical
morphology for wearable ECG devices in body area networks,” IEEE
Trans. Biomed. Circuits Syst., vol. 3, no. 4, pp. 220–228, Aug. 2009.
[17] N. Arzeno, Z. Deng, and C. Poon, “Analysis of first-derivative based
QRS detection algorithms,” IEEE Trans. Biomed. Eng., vol. 55, no. 2,
pp. 478–484, Feb. 2008.
[18] Y. Wang, C. J. Deepu, and Y. Lian, “A computationally efficient QRS
detection algorithm for wearable ECG sensors,” presented at 33rd Annu.
Int. Conf. IEEE EMBS (EMBC’2011), Boston, MA, USA, Aug. 30–
Sep. 3.

192

IEEE JOURNAL OF BIOMEDICAL AND HEALTH INFORMATICS, VOL. 18, NO. 1, JANUARY 2014

[19] B. U. Köhler, C. Hennig, and R. Orglmeister, “The principles of software
QRS detection,” IEEE Eng. Med. Biol. Mag., vol. 21, no. 1, pp. 42–57,
Jan. 2002.
[20] A. Dixon, E. G. Allstot, D. Gangopadhyay, and D. J. Allstot, “Compressed
sensing system considerations for ECG and EMG wireless biosensors,”
IEEE Trans. Biomed. Circuits Syst., vol. 6, no. 2, pp. 156–166, Apr. 2012.
[21] G. Moody and R. Mark, “The impact of the MIT-BIH arrhythmia
database,” IEEE Eng. Med. Biol., vol. 20, no. 3, pp. 45–50, May 2001.
[22] Physionet. (2013, Aug.). [Online]. Available: http://www.physionet.
org/cgi-bin/atm/ATM
[23] A. L. Goldberger, L. A. Amaral, L. Glass, J. M. Hausdorff, P. C. Ivanov,
R. G. Mark, J. E. Mietus, G. B. Moody, C. K. Peng, and H. E. Stanley,
“PhysioBank, physiotoolkit, and physionet: Components of a new research
resource for complex physiologic signals,” Circulation, vol. 101, no. 23,
pp. e215–e220, Jun. 2000.
[24] F. Aeschlimann, E. Allier, L. Fresquet, and M. Renaudin, “Asynchronous
FIR filters: towards a new digital processing chain,” in Proc. 10th IEEE
Int. Symp. Asynchronous Circuits Syst., Apr. 2004, pp. 198–206.
[25] F. Chiarugi, V. Sakkalis, D. Emmanouilidou, T. Krontiris, M. Varanini, and
I. Tollis, “Adaptive threshold QRS detector with best channel selection
based on a noise rating system,” in Proc. Comput. Cardiol., Sep. 2007,
pp. 157–160.
[26] J. Pan and W. J. Tompkins, “A real-time QRS detection algorithm,” IEEE
Trans. Biomed. Eng., vol. BME-32, no. 3, pp. 230–236, Mar. 1985.
[27] Testing and Reporting Performance Results of Cardiac Rhythm and ST
Segment Measurement Algorithms, ANSI/AAMI EC57:1998/(R) 2008,
Assoc. Advancement Med. Instrum. (AAMI), Arlington, VA, USA, 1998.
[28] C. I. Ieong, P. I. Mak, C. P. Lam, C. Dong, M. I. Vai, P. U. Mak, S. H. Pun,
F. Wan, and R. P. Martins, “A 0.83-μW QRS detection processor using quadratic spline wavelet transform for wireless ECG acquisition in
0.35-μm CMOS,” IEEE Trans. Biomed. Circuits Syst., vol. 6, no. 6,
pp. 586–595, Dec. 2012.
[29] N. Chaitanya, A. Radhakrishnan, G. Reddy, and M. Manikandan, “A
simple and robust QRS detection algorithm for wireless medical body
area networks,” in Proc. IEEE Int. Conf. Netw. Comput. Commun.
(ETNCC2011), Apr., pp. 153–159.
[30] H. M. Wang, Y. L. Lai, M. C. Hou, S. H. Lin, B. S. Yen, Y. C. Huang,
L. C. Chou, S. Y. Hsu, S. C. Huang, and M. Y. Jan, “A ±6 ms-accuracy,
0.68 mm2 and 2.21 μW QRS detection ASIC,” in Proc. IEEE Int. Symp.
Circuits Syst., 2010, pp. 1372–1375.
[31] X. Liu, Y. Zheng, M. W. Phyu, F. N. Endru, V. Navaneethan, and B. Zhao,
“An ultra-low power ECG acquisition and monitoring ASIC system for
WBAN applications,” IEEE J. Emerg. Sel. Topic Circuits Syst., vol. 2,
no. 1, pp. 60–70, Mar. 2012.
[32] Y. J. Min, H. K. Kim, Y. R. Kang, G. S. Kim, J. Park, and S. W Kim, “Design of wavelet-based ECG detector for implantable cardiac pacemakers,”
IEEE Trans. Biomed. Circuits Syst., vol. 7, no. 4, pp. 426–436, Aug. 2013.

Nassim Ravanshad (S’07) was born in Mashhad,
Iran in 1984. She received her B.S. and M.S. degrees in electrical engineering in 2006 and 2008, respectively, from Ferdowsi University of Mashhad,
Mashhad, Iran, where she is currently working toward the Ph.D. degree.
Her current research interests include design of
analog and mixed-signal integrated circuits and systems, data converters, and biomedical circuits and
systems.

Hamidreza Rezaee-Dehsorkh (S’07) was born in
Mashhad, Iran, in 1983. He received the B.S. and
M.S. degrees in electrical engineering in 2006 and
2008, respectively, from Ferdowsi University of
Mashhad, Mashhad, Iran, where he is currently working toward the Ph.D. degree.
His current research interests include design of
analog and mixed-signal integrated circuits and systems, data converters, and biomedical circuits and
systems.

Reza Lotfi (M’05) received the B.Sc. degree from
Ferdowsi University of Mashhad, Mashhad, Iran, in
1997, the M.Sc. degree from Sharif University of
Technology, Tehran, Iran, in 1999, and the Ph.D. degree in 2004 from University of Tehran, Tehran, Iran,
all in electrical engineering.
From 2004 to 2010, he was an Assistant Professor with Ferdowsi University of Mashhad, Mashad,
Iran, where he has been an Associate Professor since
2010. From 2008 to 2009, he was a Postdoctoral Scientific Researcher with Electronics Research Laboratory, Delft University of Technology, Delft, The Netherlands, where he was
involved in ultra-low-power analog and mixed-signal integrated circuits for
biomedical applications. His current research interests include low-voltage lowpower analog integrated circuit design for biomedical microsystems as well as
high-performance data converters.
Dr. Lotfi has been an Associate Editor of the IEEE TRANSACTIONS ON
CIRCUITS AND SYSTEMS—I: REGULAR PAPERS since 2010.

Yong Lian (M’90–SM’99–F’09) received the B.Sc.
degree from the College of Economics and Management, Shanghai Jiao Tong University, Shanghai,
China, in 1984, and the Ph.D. degree from the Department of Electrical Engineering, National University
of Singapore (NUS), Singapore, Singapore, in 1994.
He was with industry for nine years and joined the
National University of Singapore in 1996, where he
was the Deputy Department Head for Research, Area
Director for IC and Embedded Systems, and Provost
Professor in the Department of Electrical and Computer Engineering. Since 2013, he has been a Professor in Lassonde School of
Engineering, York University. He is involved in teaching VLSI Digital Circuit
Design, Integrated Digital Design, and Emerging Technologies in Electrical
Engineering. He is the Founder of ClearBridge VitalSigns Pte. Ltd, a start-up
for wireless wearable biomedical devices. His current research interests include biomedical circuits and systems and signal processing. He is the author
or coauthor of more than 180 scientific publications in peer-reviewed journals,
conference proceedings.
Dr. Lian is the recipient of the 1996 IEEE CAS Society’s Guillemin-Cauer
Award for the best paper published in the IEEE TRANSACTIONS ON CIRCUITS
AND SYSTEMS II, the 2008 Multimedia Communications Best Paper Award from
the IEEE Communications Society for the paper published in the IEEE TRANSACTIONS ON MULTIMEDIA, the winner of the 47th DAC/ISSCC Student Design
Contest (as a Ph.D. Advisor), the Best Student Paper Award in the ICME’07 (as
a M.Eng. Advisor), the 2011 IES Prestigious Engineering Achievement Award,
and many other awards. He received 2009 and 2010 University Annual Teaching
Excellent Awards and many other teaching awards in NUS. He is the Editorin-Chief of the IEEE TRANSACTIONS ON CIRCUITS AND SYSTEMS II (TCAS-II),
the Vice President for publications of the IEEE Circuits and Systems Society, Steering Committee Member of the IEEE TRANSACTIONS ON BIOMEDICAL
CIRCUITS AND SYSTEMS (TBioCAS), the Past Chair of DSP Technical Committee of the IEEE Circuits and Systems (CAS) Society. He was an Associate
Editors for the IEEE TCAS-I, TCAS-II, TBioCAS, and journal of Circuits,
Systems, and Signal Processing (CSSP) for more than 10 years, and was the
Guest Editor for 8 Special Issues in TCAS-I, TBioCAS, and CSSP. He was the
Vice President for Asia Pacific Region of the IEEE CAS Society from 2007 to
2008, AdComm Member of the IEEE Biometrics Council (2008–2009), CAS
Society Representative to the BioTechnology Council (2007–2009), the Chair
of the BioCAS Technical Committee of the IEEE CAS Society (2007–2009),
the Member of the IEEE Medal for Innovations in Healthcare Technology Committee (2010–2012), and the Distinguished Lecturer of the IEEE CAS Society
(2004–2005). He is the Founder of the International Conference on Green Circuits and Systems (ICGCS), Asia Pacific Conference on Postgraduate Research
in Microelectronics and Electronics (PrimeAsia), and the IEEE Biomedical Circuits and Systems Conference (BioCAS). He is a Fellow of the Academy of
Engineering Singapore.

