44

IEEE JOURNAL OF BIOMEDICAL AND HEALTH INFORMATICS, VOL. 19, NO. 1, JANUARY 2015

A Smart Phone-Based Pocket Fall Accident
Detection, Positioning, and Rescue System
Lih-Jen Kau, Member, IEEE, and Chih-Sheng Chen

Abstract—We propose in this paper a novel algorithm as well as
architecture for the fall accident detection and corresponding wide
area rescue system based on a smart phone and the third generation
(3G) networks. To realize the fall detection algorithm, the angles
acquired by the electronic compass (ecompass) and the waveform
sequence of the triaxial accelerometer on the smart phone are used
as the system inputs. The acquired signals are then used to generate an ordered feature sequence and then examined in a sequential
manner by the proposed cascade classifier for recognition purpose.
Once the corresponding feature is verified by the classifier at current state, it can proceed to next state; otherwise, the system will
reset to the initial state and wait for the appearance of another
feature sequence. Once a fall accident event is detected, the user’s
position can be acquired by the global positioning system (GPS) or
the assisted GPS, and sent to the rescue center via the 3G communication network so that the user can get medical help immediately.
With the proposed cascaded classification architecture, the computational burden and power consumption issue on the smart phone
system can be alleviated. Moreover, as we will see in the experiment
that a distinguished fall accident detection accuracy up to 92% on
the sensitivity and 99.75% on the specificity can be obtained when
a set of 450 test actions in nine different kinds of activities are estimated by using the proposed cascaded classifier, which justifies
the superiority of the proposed algorithm.
Index Terms—Cascade classifier, electronic compass, fall detection, global positioning system (GPS) system, smart phone, support
vector machine (SVM), third generation (3G) network, triaxial
accelerometer.

I. INTRODUCTION
ALL accident has been the major cause of injury to the
elderly in recent years. To protect the elderly from the injury of fall accident events or to give an immediate assistance
to the elderly after the occurrence of a fall accident event, many
researches have been devoted to the design of a fall detection algorithm and system [1]–[27]. Among all the currently proposed
algorithms, the fall detection system can be roughly divided
into two categories [1]–[4], namely, environmental monitoringbased [5]–[14], and wearable sensor-based systems [15]–[27].
As for the environmental monitoring-based systems, typically used sensors such as cameras [5]–[9], acoustic sensors
(e.g., microphone array) [10], radar and infrared sensors [11],

F

Manuscript received December 23, 2013; revised April 14, 2014; accepted
May 23, 2014. Date of publication June 4, 2014; date of current version December 30, 2014.
L.-J. Kau is with the Department of Electronic Engineering, National Taipei
University of Technology, Taipei 10608, Taiwan (e-mail: ljkau@ntut.edu.tw).
C.-S. Chen is with Realtek, Hsinchu 30078, Taiwan
(e-mail:
anyjohn11293688@yahoo.com.tw).
Color versions of one or more of the figures in this paper are available online
at http://ieeexplore.ieee.org.
Digital Object Identifier 10.1109/JBHI.2014.2328593

[12], pressure sensors [13], or accelerometer for vibration detection [14] are placed in a predefined space or environment
to monitor the activities of the elderly as well as the occurrence of a fall accident event. Compared to the type of wearable
sensor-based system, the environmental monitoring-based fall
detection system is more comfortable to the elderly since there
is no need of wearing any module. However, the environmental
monitoring-based system can only function in a predefined environment where it is installed. Moreover, the protection of the
private matters for the elderly is another problem and contention
is usually discussed with the environmental monitoring-based
system [1]–[4].
With the advances of integrated circuit technologies in micro electromechanical systems, the inertial and posture sensors,
e.g., the triaxial accelerometer and gyroscope, can be made very
compact in its dimension and easy to be embedded in portable
devices. Based on this reason, many wearable sensor-based fall
detection systems have been proposed recently [15]–[27]. For
wearable sensor-based fall detection systems, some of which
employ the use of a single triaxial accelerometer as the system
input [15]–[19], while most of them apply the use of multiple sensors [20]–[27]. Among the algorithms that use multiple
sensors, multiple triaxial accelerometers [20], [21] or a triaxial
accelerometer in conjunction with a gyroscope [22]–[25] is usually applied. In certain multiple sensor-based systems, even the
atmospheric air pressure (or barometric pressure) sensor [25],
[26] or a surface electromyography sensor [27] are used to assist
the triaxial accelerometer in discriminating the posture as well
as the motion of the elderly.
Unlike the environmental monitoring-based systems that can
function only in a predefined space, the wearable sensor-based
fall detection systems can function in a larger area. However,
most of the wearable sensor-based fall detection systems are
made of a self-designed circuit module that should be placed
and fastened around certain position, e.g., the chest or the waist,
of the user [15]–[27]. Therefore, the necessity of wearing an additional sensor module can cause the elderly feel uncomfortable
and lead to certain degree of inconvenience. In addition, how to
address the current position of the elderly when a fall accident
event occurs is a problem to be solved in wearable sensor-based
fall detection systems. Moreover, the power consumption burden is another issue that should be treated carefully in mobile
devices as well as in wearable sensor-based fall detectors.
In order to monitor the status of the elderly and to locate
the user’s position when a fall accident event is detected, some
of the algorithms propose the use of a ZigBee sensor network
to communicate between the fall detector that is with the elderly and the monitoring center [17]–[19]. However, to locate

2168-2194 © 2014 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See http://www.ieee.org/publications standards/publications/rights/index.html for more information.

KAU AND CHEN: SMART PHONE-BASED POCKET FALL ACCIDENT DETECTION, POSITIONING, AND RESCUE SYSTEM

Fig. 1.

45

Architecture of the proposed fall accident detection and rescue system.
Fig. 2.

the user’s position with Zigbee sensor network, a set of socalled reference nodes should be placed in advance. Moreover,
the range that can be addressed is also quite limited due to the
transmission distance of Zigbee and the placement of reference
nodes. Therefore, to locate the user’s current position with the
use of a Zigbee sensor network is not suitable for wide area
applications.
Aimed to design a compact fall accident detector, we propose in this paper a pocket-based fall accident detector that uses
a smart phone as the platform of the system. The triaxial accelerometer as well as the electronic compass (ecompass) will
be used as the sensors to generate primitive input signals. In
general, the fall accident recognition accuracy cannot be satisfactory without the aids of a sophisticated classification algorithm. However, the use of a sophisticated classifier means
an increased computational complexity which is not suitable to
be used in wearable sensor-based devices. Therefore, we apply
in this paper the use of an electronic compass to assist in discriminating real fall events from normal activities so that the
unsatisfactory false positive rates among accelerometry-based
fall detection devices can be improved. The acquired input signals will be processed by the proposed algorithm to generate a
feature sequence based on the order of appearance, and then the
features in the sequence will be examined by the proposed cascaded classifier (or state machine) in a sequential manner. The
state machine can proceed to next state only if the corresponding feature is verified by the current state classifier; otherwise
it resets to the initial state and waits for the appearance of the
first feature in the sequence. In the proposed cascaded classifier
scheme, the last state is composed of a support vector machine
(SVM) in which more computations are required for higher order feature extraction and recognition. To speed up the efficiency
of classification process, the early states are composed of simple and important features that allow a large number of negative
samples to be quickly excluded from being regarded as a fall
event. Those complex features are then placed in later states.
With the cascaded architecture, the fall detection efficiency can
be significantly enhanced.
In addition to the cascaded classifier architecture, the global
positioning system (GPS) or the assisted GPS will be used to acquire the user’s current position, and the longitude and latitude
will be sent to the coordination center via the third generation (3G) communication network if a fall accident event is
detected. This way, the coordination center can know the user’s

Scenario of using the smart phone-based pocket fall accident detector.

position exactly. Moreover, the detailed position can also be
shown on the screen of the coordination center with electronic
maps, e.g., Google map, so that the user can get medical help immediately. Meanwhile, the system will send out a loud sound as
a warning signal so that people nearby can notice this fall accident event and provide assistance to the user immediately. With
the proposed algorithm and architecture, the computational and
the power consumption burden can be quite alleviated since we
check each fall accident feature sequentially and reset to the initial state once any one of the feature in the state machine is not
verified. Since we also use the angle acquired by the electronic
compass to assist in discriminating a fall down event, the user
just put the smart phone in their pocket (as in Fig. 2), which is
easy to carry with. Moreover, the proposed system can locate
the user and communicate with the coordination center in a wide
area as long as the 3G network is available, which facilitates the
daily activities of the elderly.
The rest of the paper is organized as follows: Section II gives
an overview on the architecture of the proposed pocket fall
accident detection system. The process of signal acquisition and
features selection is given in Section III. The high-frequency
characteristic of the acquired signal with the inertial sensor
(triaxial accelerometer) when a fall accident event occurs will
be analyzed in Section IV. Section V addresses the extraction of
higher order features and its fusion with the SVM. The integrated
fall detection system will be given in Section VI. Experimental
results of the proposed approach and comparisons to existing
state-of-the-art fall detection algorithms can be addressed in
Section VII. Finally, a concluding remark is given in Section
VIII.
II. SYSTEM OVERVIEW
The architecture of the proposed fall accident detection and
rescue system is shown in Fig. 1. As can be seen in Fig. 1, the
proposed system is mainly composed of three blocks: the smart
phone-based pocket fall accident detector, the coordination center, and the rescue center which is composed of the hospitals
nearby or the first-aid stations.
As can be seen in the part of smart phone-based pocket fall
accident detector (see Fig. 1),the triaxial accelerometer and
the ecompass will be used to acquire the posture of motion

46

IEEE JOURNAL OF BIOMEDICAL AND HEALTH INFORMATICS, VOL. 19, NO. 1, JANUARY 2015

A. Triaxial Accelerometer
In this paper, the outputs of the triaxial accelerometer will
be sampled periodically as the input signals of the proposed
system with a frequency of 150 Hz. The sampled signal is a
three-dimensional data sequence, i.e., [ax [n], ay [n], az [n]]. To
simplify the dimension of the sampled signal, we apply in this
paper the use of the one-dimensional signal magnitude vector
(SMV) S[n] as shown below [29]

Fig. 3. S[n] sequence with 300 data samples under a fall event. (a) Sequence
obtained with the detector fastened on the chest. (b) Sequence obtained by
placing the detector in the pocket.

activities for the elderly. In the proposed system, the inclusion
of the ecompass is to acquire the tilt angle, i.e., pitch, of the
smart phone. This is because when the elderly is suffering a fall
accident event, the smart phone in the user’s pocket also tends
to lie down, and the pitch angle is usually small. Actually, the
work of acquiring the pitch angle of the smart phone can also
be accomplished by using a gyroscope that provides the angular
acceleration information of the smart phone [28]. However, the
gyroscope is only available in higher grade smart phones. On
the contrary, the ecompass is available in most of the smart
phones. Furthermore, the tilt angle (pitch angle) of the smart
phone can be estimated by using the ecompass in conjunction
with the triaxial accelerometer. We, therefore, decide to use the
ecompass for the estimation of pitch angle so that the proposed
algorithm can be applied for most of the smart phone systems.
We also list in Fig. 1 the tools and algorithms that are used for
the analysis and detection of a fall event.
Fig. 2 shows a scenario of placing the smart phone-based fall
accident detector in the pocket of the elderly. As can be seen
in Figs. 1 and 2, a loud sound as a warning signal will be sent
out once a fall accident event is detected, and then the longitude and latitude, i.e., the current position, of the elderly will
be transmitted to the coordination center via the 3G network.
The coordination center is composed of an emergency signal
handling program module, which is used to receive the current position and important personal information of the elderly.
The received longitude and latitude can then be integrated and
displayed with an electronic map, e.g., Google map.

III. SIGNAL ACQUISITION AND FEATURES SELECTION
In this section, the signal acquisition as well as the feature
selection process will be introduced. It is noted that most of the
smart devices are equipped with certain kinds of inertia detectors, e.g., the triaxial accelerometer (also known as G-Sensor),
the electronic compass, or the gyroscope, so that the orientation of the device can be recognized by its operating system.
Considering the availability, we use the triaxial accelerometer
(G-Sensor) and the electronic compass as the major sensors for
input signal acquisition and generation in the proposed system.

S[n] =

a2x [n] + a2y [n] + a2z [n]

(1)

where n is the sample index, ax [n], ay [n], and az [n] are the
gravitation values along the x-axis, y-axis, and z-axis, respectively (as in Fig. 6).
To illustrate the signal sampling strategy as well as the features that will be used in the proposed system, we show in
Fig. 3(a) a typical sequence of the SMV signal (i.e., S[n]) under a fall event with 300 samples. The sequence in Fig. 3(a)
is obtained with the smart phone fastened around the chest of
the user. As can be seen in Fig. 3(a), there is a significant signal
drop below 1G around the 50th data sample. Actually, this is due
to the fact that when the user is suffering a fall accident event,
the body will quickly drops toward the ground, and results in a
weightless state temporarily. During this short period of time,
the triaxial accelerometer will produce an S[n] value typically
smaller than 0.6G. At the instant just when the body hits the
ground heavily, the triaxial accelerometer can produce an S[n]
value larger than 1.8G. After that, the user will stay motionless
for a short time, and the triaxial accelerometer will produce a
slowly varying sequence of S[n] around 1G.
In this paper, the moment at which the value of S[n] is equal
to 0.6G [i.e., the 50th data sample in Fig. 3(a)] will be used
as the reference point for the sampling of the S[n] sequence.
That is, the 50 and 250 data samples just before and after the
reference point will be recorded by the proposed system to
form a sequence of 300 samples. The 300 samples will be sent
to the proposed state machine and examined by the proposed
algorithm to check if the features of a fall accident event can be
satisfied in a sequential manner. Moreover, the appearance of
an S[n] value smaller than 0.6 G and greater than 1.8 G, as well
as the slowly varying waveform of S[n] value in Fig. 3(a) will
be used as the first three characteristics or features, i.e., the first
three state, of the proposed system.
It should be noted that the use of an S[n] sequence in Fig. 3(a)
is just for explanation convenience. In the proposed fall detection
system, the smart phone, i.e., the fall detector, is placed in the
user’s pocket so that the elderly would not feel uncomfortable.
However, as the smart phone is placed in the user’s pocket
without any constraint, the smart phone can vibrate as long as
the elderly is in active. For this, we show in Fig. 3(b) a segment
of S[n] with 300 samples obtained by placing the smart phone
in the pocket (as in Fig. 2) under a fall event. As can be seen
in Fig. 3(b), the sequence of S[n] obtained by placing the smart
phone in the pocket varies more frequently than that in Fig. 3(a)
due to vibrations. Nevertheless, the first three features can still
be easily observed in Fig. 3(b).

KAU AND CHEN: SMART PHONE-BASED POCKET FALL ACCIDENT DETECTION, POSITIONING, AND RESCUE SYSTEM

47

Fig. 5. Comparisons between a fall accident event and a running activity on
the sequence waveform of S[n]. (a) Fall down event (b) Running activity.

Fig. 4. Waveform sequence of S[n] for eight different kinds of activities.
(a) Run. (b) Walk. (c) Sit down. (d) Go upstairs. (e) Go downstairs. (f) Tread.
(g) Jump. (h) Wavering the phone up and down.

We further show in Fig. 4 the sequences of S[n] when the
smart phone is placed in the pocket for eight kinds of normal
activities, including run, walk, sit down, going upstairs, going
downstairs, tread, jump, and wavering the smart phone up and
down, so that we can know the waveform difference of the
S[n] between different kinds of activities. As can be seen in
Fig. 4, the first two features that are used for the fall accident
event detection, i.e., S[n] ≤ 0.6G and S[n] ≥ 1.8 G, can also
be easily satisfied in all the eight kinds of normal activities,
as indicated by the circles in Fig. 4. In other words, the first
two conditions for the fall event recognition can be regarded
as necessary conditions, but not sufficient. Therefore, we have
to find more features to distinguish a fall event from normal
activities. We notice that the S[n] sequence still varies frequently

and the amplitude variance of S[n] is large after the appearance
of the second feature (the instant that S[n] ≥ 1.8G) in most
of the continuous motion activities, e.g., run, walk, jump, go
upstairs, go downstairs. However, the amplitude variation of
S[n] is much smaller in the case of a fall event than that in
continuous motion activities after the appearance of the second
feature [see Fig. 3(b)]. This observation is very helpful and
will be used as the third feature of the proposed system so that
normal activities with continuous motion can be excluded from
being regarded as possible candidate of fall events.
To further illustrate the difference on the pattern of S[n]
between a fall event and that of continuous motion activities,
we show in Fig. 5 the S[n] sequences of a fall event and that of
a running activity simultaneously. As can be seen in Fig. 5(a),
the amplitude variation of the S[n] after the appearance of the
second feature (the instant that S[n] ≥ 1.8 G) is much smaller
than that of a running activity. Actually, the slowly varying
characteristic of the S[n] sequence is due to the temporarily
motionless status after the fall event. We find in our experiments
that the sequence of S[n] varies slowly around 1G after the
appearance of the second feature, and the standard deviation σ
of the last 50 data samples in the S[n] sequence is found to be
smaller than 0.1 during a fall event. Therefore, the third feature
can be examined by first calculating the standard deviation σ of
the last 50 samples in S[n] sequence as follows:


300
1 
(S[n] − S̄50 )2
(2)
σ=
50 n =251
where S̄50 is the average of the last 50 samples of S[n] sequence.
We then check if the standard deviation σ is smaller than a
predefined threshold 0.1. If so, the third feature satisfies the
state machine condition, and we proceed to next state for further
verification of the feature sequence.
B. Electronic Compass and Device Orientation
In this paper, the pitch angle acquired by the electronic compass is used to assist in discriminating real fall events from
normal activities. The coordinate convention of the triaxial accelerometer and the orientation definition of the electronic compass are shown in Fig. 6(a) and (b), respectively [28]. It should
be noted that the electronic compass should be used in company
with the triaxial accelerometer, where the triaxial accelerometer

48

IEEE JOURNAL OF BIOMEDICAL AND HEALTH INFORMATICS, VOL. 19, NO. 1, JANUARY 2015

seen in the tail of the sequence in Fig. 7(a), the absolute value
of the pitch angle is much smaller than that of the transient state
and that in Fig. 7(b)–(d). Based on this observation, the fourth
feature in this paper is determined by checking if the average
pitch angle of the last 15 samples, i.e., the 286th to the 300th
data samples, in Fig. 7(a) is smaller than a predefined threshold.
In this paper, the threshold is selected to be 50, and we find it
works very well as we will see in the experiments.

Fig. 6. (a) Coordinate convention of the triaxial accelerometer. (b) Orientation
definition of the electronic compass.

Fig. 7. Sequences of pitch angle for four different kinds of activities. (a) Pitch
sequence: a fall event. (b) Pitch sequence: Jump. (c) Pitch sequence: Running.
(d) Pitch sequence: Tread.

is used to regulate and compensate the actual angle obtained.
With the aids of information acquired by the magnetic field
sensor as well as the gravity sensor, a so-called 3 × 3 rotation
matrix can be obtained by using the function “getRotationMatrix” in android-based systems, and then the rotation matrix will
be used as the input of the function “getOrientation” to get the
orientation of the smart phone, i.e., the angle of azimuth, pitch,
and roll. It is noted that the azimuth rotates around the Z-axis,
the pitch rotates around the X-axis, and the roll rotates around
the Y -axis [28].
The pitch, which indicates the angle between the Y -axis and
the ground will be selected as the fourth feature of the proposed
algorithm. This is because when the user is suffering a fall
accident event, the smart phone in the user’s pocket also tends
to lie down, and the pitch angle is usually small and around
zero. This characteristic can be best observed in Fig. 7(a), where
we show a pitch sequence with 300 samples when the user is
suffering a fall accident event. For comparison purpose, we also
show in Fig. 7(b)–(d) the pitch sequences of three kinds of
normal activities including jump, running, and tread. As can be

IV. HIGH-FREQUENCY CHARACTERISTIC ANALYSIS
OF A FALL EVENT
So far, we have defined the first four features that can be
applied for the recognition of a fall accident event between
normal activities. However, we find in our experiments that
some of the normal activities, e.g., sit down and the behavior
of wavering the smart phone up and down, is also possible in
generating an S[n] sequence or pitch sequence similar to that of
a fall accident event. The behavior of wavering the smart phone
up and down can take place when the user is in a short-term
running activity and with the smart phone held in his or her
hand. The behavior of wavering the smart phone is a special
scenario since the smart phone is designed to be placed in the
user’s pocket. However, this behavior does take place frequently
in our daily life. Therefore, we have to find more useful features
that can be used for distinguishing a fall accident event from
normal activities like sit down and phone wavering.
To do this, we analyze and compare the frequency components (spectrum) of the S[n] sequence under a fall accident event
with that of normal activities like sit down and smart phone wavering. As the S[n] and pitch sequence of wavering the smart
phone and that of a sit down activity are quite similar, the case of
wavering the smart phone will be used for explanation and compared with a fall accident event for simplicity. The spectrums
of the S[n] sequence under a fall event and that of wavering
the smart phone are shown in Fig. 8(a) and (b), respectively.
In order that the high-frequency energy can be observed in a
more clear manner, we also show in Fig. 8(c) and (d) the plot of
Fig. 8(a) and (b) in log scale, respectively. As can be seen in
Fig. 8, we find that most of the frequency components of normal activities are less than 50 Hz. On the contrary, frequency
components higher than 50 Hz can be detected when the user
is suffering a fall accident event, meaning that energy in highfrequency part would be helpful and can be used in the classification process.
A. High-Pass Filtering of the S[n] Signal
To extract the high-frequency characteristic of the S[n] sequence, a high-pass filter with finite impulse response (FIR
filter) is designed in this paper. The specification of the designed high-pass filter is listed as below and shown in Fig. 9
simultaneously [30].
1) Stop-band gain (Astop): 80 dB.
2) Pass-band gain (Apass): 1 dB.
3) Stop-band cutoff frequency (Fstop): 40 Hz.
4) Pass-band frequency (Fpass): 50 Hz .

KAU AND CHEN: SMART PHONE-BASED POCKET FALL ACCIDENT DETECTION, POSITIONING, AND RESCUE SYSTEM

Fig. 10.

49

Magnitude response of the proposed high-pass filter.

Fig. 8. Comparison on the spectrum of S[n] between the fall event and normal activities. (a) Spectrum of a fall event. (b) Spectrum of normal activities.
(c) Log scale of (a). (d) Log scale of (b).

Fig. 9.

Specification of the proposed high-pass filter.

According to these parameters, we implement an 84th-order
high-pass FIR filter in this paper [30]. The magnitude response
of the proposed high-pass FIR filter is shown in Fig. 10.
With the proposed filter, we can get a high-pass filtered signal SHPF [n] of the S[n]. To highlight the difference on the
high-frequency characteristic between a fall event and normal
activities, the response of the S[n] sequence under a fall event
and that of obtained by wavering the smart phone up and down
are shown in Fig. 11(a) and (b), respectively. To verify the effectiveness of the designed high-pass FIR filter, the spectrum
(i.e., the frequency distribution) of Fig. 11(a) and (b) are shown
in Fig. 11(c) and (d), respectively.
We can see in Fig. 11(c) and (d) that the low-frequency components of the S[n] sequence obtained under a fall event and
that by wavering the smart phone up and down can be attenuated
successfully after the filtering process. Moreover, we notice in
Fig. 11(c) and (d) that the high-frequency energy (higher than
50 Hz) of a fall event is larger than that of wavering the smart
phone (the largest strength is 4 dB for fall accident and 1.4 dB
for phone wavering). Based on this observation, we then take

Fig. 11. Time and frequency domain response of the S[n] sequence after the
proposed high-pass filter. (a) Time domain response of the high-pass filtered
S[n] sequence under a fall event. (b) Time domain response of the high-pass
filtered S[n] sequence by wavering the smart phone. (c) Spectrum of (a). (d)
Spectrum of (b).

absolute value on the 300 amplitudes of the high-pass filtered
S[n] sequence, i.e., take absolute value on SHPF [n] sequence,
and then the absolute amplitudes of the 300 samples are summed
up to get one of the components that will be used in the fifth
feature.
B. Discrete Wavelet Transform (DWT)
In addition to the use of a high-pass filter, we also apply the
use of DWT so that the high-frequency details of a fall accident
event can be easily observed. Compared to short-time Fourier
Transform, which employs a windowed fast Fourier transform of
fixed time and frequency resolution, the wavelet transform offers
superior temporal resolution of the high-frequency components
and scale resolution of the low-frequency components [31]–
[33]. Based on its characteristic of providing a very good tradeoff
between temporal and frequency resolution simultaneously, the

50

Fig. 12.

IEEE JOURNAL OF BIOMEDICAL AND HEALTH INFORMATICS, VOL. 19, NO. 1, JANUARY 2015

Block diagram of discrete wavelet filter analysis.

DWT has been widely applied to the field of signal processing,
and in particular, is ever used for the gait analysis of the elderly
and patients with Parkinson’s disease [34].
The block diagram of a DWT analysis filter bank is shown
in Fig. 12. To simplify the computational complexity, the Harr
wavelet will be chosen for the transformation in this paper [33].
In DWT analysis filter bank, an input sequence ax [n] is first
convolved with the low-pass filter g[n] and high-pass filter h[n]
(as in Fig. 12), respectively, and then the filtered sequences are
down sampled by a factor of 2 to get the approximation and detail
coefficients of the original sequence. When the discrete Haar
wavelet transformation is used, the approximation coefficients
aax [n] and the detail coefficients adx [n] of a sequence ax [n] can
be calculated efficiently as in (3) and (4), respectively, [33]
1
aax [n] = √ (ax [2n] + ax [2n + 1])
2

(3)

1
adx [n] = √ (ax [2n] − ax [2n + 1]).
2

(4)

As we are paying attention to the high-frequency characteristic of a fall event in this paper, we apply the Harr wavelet analysis
filter bank to the ax [n], ay [n], and az [n] (i.e., sequences generated by the triaxial accelerometer), and get the part of detail
coefficients, i.e., the adx [n], ady [n], and adz [n] in Fig. 12, of the
filter bank in a similar manner as that in (4).
Before we introduce how the DWT can be applied for the
recognition of a fall event, we shown in Figs. 13 and 14, respectively, the sequences generated by the triaxial accelerometer, i.e.,
S[n], ax [n], ay [n], and az [n], under a fall event and that by wavering the smart phone up and down, all with a segment of 300
data samples. Besides, the detail coefficients of the sequences
in Figs. 13 and 14 after the discrete Haar wavelet analysis filter
bank are shown in Figs. 15 and 16, respectively. As can be seen
in Fig. 12 (the discrete wavelet filter analysis bank), there is an
operation of down sample by 2 after the high-pass (h[n]) and
low-pass filter (g[n]), respectively. Therefore, the length of the
detail coefficient sequences after the discrete wavelet analysis
filter bank will become 150 as can be seen in Figs. 15 and 16.
We notice that the largest amplitude (in absolute value)
among the detail coefficients of S[n] between a fall event
[see Fig. 15(a)] and that of wavering the smart phone [see Fig.
16(a)] are around 0.26 (under a fall event) and 0.21 (phone
wavering), respectively. The diversity on the largest amplitude
is not remarkable. However, when we compare the detail coefficients, i.e., adx [n], ady [n], and adz [n], of a fall event and
that of wavering smart phone in a separation manner, we can

Fig. 13. Time domain sequences generated by the triaxial accelerometer under
a fall event. (a) S[n] sequence. (b) a x [n] sequence. (c) a y [n] sequence. (d) a z [n]
sequence.

Fig. 14. Time domain sequences of the triaxial accelerometer generated by
wavering the smart phone up and down. (a) S[n] sequence. (b) a x [n] sequence.
(c) a y [n] sequence. (d) a z [n] sequence.

find a significant diversity on the largest amplitude between the
two kinds of activities. Actually, we find the largest amplitude in
Fig. 15(b)–(d) are 0.32 (adx [n]), 0.38 (ady [n]), and 0.48 (adz [n]),
respectively, and that in Fig. 16(b)–(d) are 0.052 (adx [n]), 0.058
(ady [n]), and 0.22 (adz [n]), respectively. Obviously, the diversity on the detail coefficients of the ax [n], ay [n], and az [n] can
be used for the recognition of a fall accident event from normal activities. In this paper, the largest amplitude in each of the

KAU AND CHEN: SMART PHONE-BASED POCKET FALL ACCIDENT DETECTION, POSITIONING, AND RESCUE SYSTEM

51

V. SUPPORT VECTOR MACHINE
The SVM, a supervised learning algorithm, is widely applied in the field of machine learning for its ability of providing
variable linear and nonlinear kernel function to pattern classification [35], [36]. In this paper, the fifth feature, which is a
two-dimensional vector, will be used in conjunction with a designed SVM to recognize if the elderly is suffering a fall accident
event. The two components of the feature vector are obtained
from the high-frequency characteristics of the output sequences
generated by the triaxial accelerometer as described in previous
section. In particular, the first component l1 (i.e., Label1) is
given by the following equation:

Fig. 15. Detail coefficients after the Haar wavelet transform under a fall
event. (a) Detail coefficients of S[n]. (b) a d x [n] sequence. (c) a d y [n] sequence.
(d) a d z [n] sequence.

l1 = max (|adx [n]|) + max ((|ady [n]|) + max ((|adz [n]|)
n
n
n
(5)
where n = 1, . . . , 150, adx [n], ady [n], and adz [n] are the detail
coefficients of ax [n], ay [n], and az [n], respectively, by using
a discrete Haar wavelet analysis filter bank in Section IV-B.
Moreover, the second component l2 (i.e., Label2) of the feature
vector is given according to the following equation:
l2 =

300


|SHPF [n]|

(6)

n =1

where SHPF [n] is the result by convolving the S[n] with the
proposed high-pass filter defined in Section IV-A. Based on
(5) and (6), we can construct a two-dimensional feature vector
x = (l1 , l2 )T , and this two-dimensional feature vector x will be
processed by the designed SVM [as in (7)] to recognize if the
elderly is suffering a fall accident event
y = (w1 x1 + w2 x2 + · · · + wn xn ) · x + b =

n


wi xi · x + b

i=1

Fig. 16. Detail coefficients of the triaxial accelerometer after the Haar wavelet
transform by wavering the smart phone up and down. (a) Detail coefficients of
S[n]. (b) a d x [n] sequence. (c) a d y [n] sequence. (d) a d z [n] sequence.

three detail coefficient sequences will be picked out, and then the
absolute values of the three amplitudes are summed up together
to get the second component of the fifth feature. This value together with the energy strength just obtained in Section IV-A. by
summing up the 300 amplitudes of the high-pass filtered S[n]
sequence constitutes the fifth feature (a two-dimensional vector)
of the proposed classification system.

(7)
where x1 , x2 , ..., xn are 2 × 1 support vectors, n is the number
of support vectors, w1 , w2 , ..., wn are the weights corresponding
to individual support vectors, b is the bias, and y indicates the
result of classification.
To find the support vectors, the bias, as well as the weights
corresponding to individual support vectors, a set with 63 positive feature vectors (i.e., the case of a fall accident event) and
60 negative feature vectors are used for the training of the SVM
[35]–[37]. The process for finding the optimal support vectors
is performed via the MATLAB function “svmtrain.” In addition, the set of feature vectors will be randomly divided into
two groups, one for training and the other for test, by using
the MATLAB function “crossvalind” before the training process. After an offline training process, a set of support vectors
with linear decision boundary can be obtained. The classification result of the training process is shown in Fig. 17, and the
number of support vectors is found to be 4, i.e., n = 4, after the
optimization process. In Fig. 17, the abscissa and the ordinate
are for component 1 (i.e., l1 ) and component 2 (i.e., l2 ) of the
state 5, respectively. The coordinates of the four support vectors
(x1 , . . . , x4 ), the final weights (w1 , . . . , w4 ), as well as the bias
b of the proposed SVM after the training process are shown in
Table I. We then check if the value of y is smaller than or equal

52

IEEE JOURNAL OF BIOMEDICAL AND HEALTH INFORMATICS, VOL. 19, NO. 1, JANUARY 2015

TABLE II
SUMMARY OF FEATURES IN THE PROPOSED ALGORITHM
State
State 1
State 2
State 3

Dimension
Scalar
Scalar
Scalar

Feature


1
50

State 4

State 5

Scalar

Two-dimensional
Vector

Description

S[n]ࣘ 0.6G
S[n]ࣙ 1.8G
σ =
3
00
(S [n ] − S̄ 5 0 ) 2
n = 251

θ̄ =

1
15

3
00

θ [n ]

n = 286

Component1: l 1

Check if S[n]ࣘ 0.6G
Check if S[n]ࣙ 1.8G
Calculate the standard
deviation of the last 50
samples in the S[n]
sequence
Calculatethe average
pitch angle of the last
15 samples
l1 =
m ax (|a d x [n ]|) +
n

m ax (|a d y [n ]|) +
n

m ax (|a d z [n ]|)
n

Component2: l 2

l2 =

3
00

|S HPF [n ]|

n=1

Fig. 17.

Training and classification result of the SVM.
TABLE I
SUPPORT VECTORS, CORRESPONDING WEIGHTS, AND BIAS
OF THE PROPOSED SVM

Fig. 18.

i

wi

1
2
3
4

−0.4348
0.0061
0.2377
0.1911

xi
8.2241
4.4865
7.7041
7.8150

Bias b
3.9882
3.0055
2.3361
2.2386

4.2037

Proposed state machine for a fall accident detection.

to the threshold 0. If so, a fall accident event is detected in the
proposed system.

S[n] sequence at any instant can exceed the second threshold
1.8 G within next 250 samples. Only after the second state is
verified, we can proceed to state 3. We first calculate the standard
deviation σ of the last 50 samples (i.e., 251st to 300th samples) in
S[n] sequence as in (2). We then check if the standard deviation
σ is smaller than a predefined threshold 0.1. If so, the state
machine proceed to state 4, and we calculate and check if the
average pitch angle of the last 15 samples is smaller than a
predefined threshold 50. If this condition is satisfied, we can
proceed to the final state, i.e., the SVM recognition process; if
not, the state machine resets to the initial state.
Actually, the state machine with the first four states is capable
of discriminating a fall accident event from most of the normal
activities as we will see in the experiments. The inclusion of the
SVM is to cope with the special behavior of phone wavering and
a motion of quick sit down. To speed up the efficiency of classification process, the early states are composed of simple and
important features that allow a large number of negative samples to be quickly excluded from being regarded as a fall event.
That is why the calculation of the high-frequency characteristic
(i.e., the fifth feature) is placed in the last state. Therefore, we
can also perform one step further by applying the SVM so that a
motion of quick sit down or the behavior of wavering the smart
phone up and down can be excluded from being regarded as
a fall accident event if needed. With the cascaded architecture,
the fall detection efficiency in the proposed system can be significantly enhanced. To summarize, all the features used in the
proposed algorithm are shown in Table II.
VII. EXPERIMENTS

VI. SYSTEM INTEGRATION
The proposed recognition process can be integrated into a
cascaded classifier or state machine (as in Fig. 18) based on the
order of feature appearance. State 1 is the initial state. We first
check and wait if any instant of the S[n] sequence is smaller
than the predefined threshold 0.6 G. If so, the 50 samples before
and 250 samples after the instant will be recorded for later
analysis. We can then proceed to state 2 and wait to see if the

In this section, the performance of the proposed system is to be
analyzed and compared with existing state-of-the-art wearable
fall detection algorithm in [16] on the accuracy of detection.
To perform the evaluation process, we have the smart phone
placed in the pocket of a subject. Besides, nine different kinds
of activities including a fall down event, running, walking, sit
down, go upstairs, go downstairs, tread, jump and wavering the
smart phone will be evaluated, each with 50 tests. It is noted

KAU AND CHEN: SMART PHONE-BASED POCKET FALL ACCIDENT DETECTION, POSITIONING, AND RESCUE SYSTEM

53

TABLE III
PERFORMANCE OF THE PROPOSED STATE MACHINE WITHOUT APPLYING SVM

Walk

Sit
down

Go
upstairs

Samples
50
50
50
TP
48
N/A
N/A
FP
N/A
0
0
TN
N/A
50
50
FN
2
N/A
N/A
Sensitivity: no smart phone wavering
Specificity: no smart phone wavering

50
N/A
1
49
N/A
0.96
0.9971

50
50
50
N/A
N/A
N/A
0
0
0
50
50
50
N/A
N/A
N/A
Sensitivity: with smart phone wavering
Specificity: with smart phone wavering

FSM

Fall
down

Run

that the number of persons involved in the training group and
that in the test group are both five. However, the five subjects
in the test group and that in the training group are different.
The data acquired from the five persons in the training group
are used for the determination of threshold settings, while that
from the five persons in the test group are for performance
validation. In addition, the proposed fall detection algorithm is
implemented in a Sony Xperia U-series smart phone with the
following specification [38]:
1) CPU: ST-Ericsson Dual-core, 1 GHz.
2) RAM: 512 MB.
3) ROM: 8 GB.
4) OS version: Android 2.3.7.
A. Performance Evaluation of the Proposed System
To investigate the performance of the proposed approach, the
Sensitivity [in (8)] as well as the Specificity [in (9)] will be used
as the metric for recognition accuracy evaluation
Sensitivity =

TP
TP + FN

(8)

Specif icity =

TN
TN + FP

(9)

where TP, TN, FP, FN denote the true positive, the true negative, the false positive, and the false negative, respectively.
We first investigate the performance of the proposed state
machine but without invoking the use of a SVM. The results are
shown in Table III. We also list in Table III the sensitivity and
the specificity with and without considering the special activity
of smart phone wavering. As can be seen in Table III, the performance is quite satisfactory with a Sensitivity and Specificity
can up to 96% and 99.71%, respectively, when the special case
of smart phone wavering is not considered. The reason for a
Sensitivity value that is not 100% may be due to a randomly
placement of the smart phone in the subject’s pocket, and the
smart phone vibrates drastically while the body of the subject
hits the ground that results in interferences on the state machine.
On the other hand, there is a degradation on the performance
of specificity if the special case of smart phone wavering is involved in the calculation of specificity. The degradation on the
specificity with the proposed FSM is due to the similar S[n] se-

Go
downstairs

Tread

Jump

Smart
phone
wavering

50
N/A
0
50
N/A

50
N/A
50
0
N/A
0.96
0.8725

TABLE IV
PERFORMANCE OF THE PROPOSED FSM CASCADED BY SVM
IN THE LAST STATE
FSM+SVM Fall down Run Walk

Samples
TP
FP
TN
FN
Sensitivity
Specificity

50
46
N/A
N/A
4

Sit
Go
Go
Tread Jump Smart phone
down upstairs downstairs
wavering

50 50
50
N/A N/A N/A
0
0
0
50 50
50
N/A N/A N/A

50
N/A
0
50
N/A

50
N/A
0
50
N/A

50
50
N/A N/A
0
0
50
50
N/A N/A

50
N/A
1
49
N/A

0.92
0.9975

quence and pitch sequence acquired under the activity of smart
phone wavering and that of the fall accident event.
We then check the performance by cascading the SVM into
the last state of the state machine. The results are shown in Table IV. As can be seen in Table IV, all the negative samples can
be excluded from being regarded as a fall accident event except
only one of the test in wavering the smart phone. The cascaded
classifier has a Specificity as high as 99.75% with only a minor
degradation on the performance of Sensitivity. The performance
on Sensitivity is 92%, which is also quite satisfactory. To highlight the performance of the proposed approach, a demonstration
video can be found on the Internet [39].
B. Comparisons to Existing State-of-the-Art
Fall Accident Detector
In this part, the performance of the proposed algorithm is to
be compared with the state-of-the-art wearable fall detection algorithm in [16]. The algorithm in [16] applies the use of a single
triaxial accelerometer as the input sensor and the classification
algorithm is based on the Adaboost cascaded with a SVM. In
[16], the sensor is placed in various parts of the subject for
performance investigation. Moreover, the accuracy rate (AR),
detection rate (DR), and False alarm rate (FAR) are used in [16]
for the performance evaluation instead. The AR, DR, and FAR
are defined as follows:
AR =

TP + TN
× 100%
p+q

(10)

DR =

TP
× 100%
p

(11)

54

IEEE JOURNAL OF BIOMEDICAL AND HEALTH INFORMATICS, VOL. 19, NO. 1, JANUARY 2015

TABLE V
RESULTS REPORTED BY CHENG AND JHAN [16]
Position
AR
DR
FAR

TABLE VIII
EXECUTION TIME REQUIRED IN EACH STATE
State

Left ankle

Right ankle

Chest

Waist

95.35%
52%
2.53%

93.52%
52%
4.4%

98.23%
88%
1.27%

94.48%
78.67%
0.53%

Execution Time

FSM
Proposed
FSM

Fall
down

Run

Walk

Sit
down

Go
upstairs

Go
downstairs

Tread

Jump

Test Samples
TP
FP
TN
FN
AR
DR
FAR

50
48
N/A
N/A
2
99.25%
96%
0.28%

50
N/A
0
50
N/A

50
N/A
0
50
N/A

50
N/A
1
49
N/A

50
N/A
0
50
N/A

50
N/A
0
50
N/A

50
N/A
0
50
N/A

50
N/A
0
50
N/A

TABLE VII
RESULTS OF THE PROPOSED FSM CASCADED BY SVM
(IN TERMS OF AR, DR, AND FAR)
Proposed
Fall Run Walk Sit
Go
Go
Tread Jump Smartphone
FSM + SVM down
down upstairs downstairs
wavering
50
N/A
0
50
N/A

FAR =

50
N/A
0
50
N/A

50
N/A
0
50
N/A

FP
× 100%
q

50
N/A
0
50
N/A

50
N/A
0
50
N/A

State2

State3

State4

State5

6 ns

6 ns

23.7 μs

1.2 μs

226.4 ms

TABLE IX
NUMBER OF TIMES EXECUTED IN EACH STATE AND AVERAGE RUN-TIME FOR
DIFFERENT ACTIVITIES

TABLE VI
RESULTS OF THE PROPOSED FSM (IN TERMS OF AR, DR, AND FAR)

Test Samples 50
50
50
TP
46 N/A N/A
FP
N/A 0
0
TN
N/A 50
50
FN
4 N/A N/A
AR
98.88%
DR
92%
FAR
0.25%

State1

50
N/A
1
49
N/A

(12)

where TP, TN, FP denote the true positive, the true negative,
and the false positive, while p and q denote the number of
positive and negative samples, respectively. Obviously, a larger
AR, DR and a smaller FAR would be preferred.
The results reported by Cheng and Jhan [16] are shown in
Table V. In order that a fair comparison can be obtained, the
results of the proposed algorithm in Tables III and IV are translated to metrics of AR, DR, and FAR and shown in Tables VI
and VII again. The results of the proposed algorithm in Table VI
are obtained by using only the finite-state machine (FSM), while
that of in Table VII are obtained by cascading the SVM with
the FSM. As can be seen in Table V, the best value of AR,
and DR in [16] are 98.23% and 88%, respectively, which is obtained when the fall detector is fastened on the chest. Besides,
the best value of FAR in [16] is 0.53% when the detector is
fastened on the waist. On the other hand, we can see in Table VI
that the result on the AR, DR, and FAR by using the proposed
FSM are 99.25%, 96%, and 0.28%, respectively. When the proposed FSM is cascaded by the SVM, the results are 98.88%,

Fall
down

Run Walk

Sit
Go
Go
Tread Jump Smart phone
down upstairs downstairs
wavering

#Tests
50
50
50
50
State1
50
50
50
50
State2
50
48
3
48
State3
50
45
0
25
State4
50
0
0
25
State5
50
0
0
6
Average 226.42 21.34 6.36 27.18
Average
ms
μs
ns
ms
Run-time
Per Act.

50
50
8
3
0
0
1.43
μs

50
50
19
12
0
0
5.69
μs

50
50
50
50
41
48
38
48
38
48
0
0
18.93 23.92
μs
μs

50
50
50
50
50
50
226.42
ms

92%, 0.25%, respectively, as can be seen in Table VII. Obviously, the results obtained by using the proposed approach
significantly outperforms that of in [16].
C. Computational Burden of the Proposed System
In this section, we investigate the computational as well as
the power consumption burden of the proposed system by running the proposed fall accident detection application (APP) on
the smart phone. We then examine the percentage of battery
consumption after a period over 6 and 7 h, respectively. We find
the percentage on the power consumption of the proposed APP
is around 9%, which is similar to that of an APP game.
We also show in Table VIII the execution time required in
individual state. As can be seen in Table VIII, both the state
1 and state 2 have the lowest computational complexity. The
state 5, which calculates the high-frequency characteristics of
the S[n] sequence, has the highest complexity. In state 5, an
execution time of 226.4 ms is required.
We further look into the classification process. We show in
Table IX the number of times executed in each state when
each kind of activity is performed 50 times. As can be seen in
Table IX, state 1 will be performed for all kinds of activities
since the proposed system have to wait the appearance of the
first feature (i.e., S[n] ≤ 0.6 G). We now look at the third column of Table IX as an example. The third column shows the
statistics about the classification process of the activity “run”.
As can be seen in Table IX, the activity of “run” can be mainly
excluded after the third state (i.e., state 3).
In Table IX, we find that the activity of “phone wavering” is
quite similar to that of a fall accident event. Moreover, the two
kinds of activities cannot be classified only until the final state
(i.e., state 5). Actually, the classification process for the two
kinds of activities has the highest computational complexity.

KAU AND CHEN: SMART PHONE-BASED POCKET FALL ACCIDENT DETECTION, POSITIONING, AND RESCUE SYSTEM

In Table IX, we also show in the last row the average execution
time of individual activity by combing the statistics in Table IX
and corresponding execution time in Table VIII. As can be seen
in Table IX, most of the continuous activities, e.g., run, walk,
go upstairs, go downstairs, tread, and jump, can be excluded
from being regarded as a fall down event in an efficient manner.
Actually, this is due to a large number of negative samples
can be quickly excluded from being regarded as a fall event
in the early states. Those complex features are then placed in
later states. With the cascaded architecture, the fall detection
efficiency can be significantly enhanced, and thus the power
consumption burden can be alleviated accordingly.
VIII. CONCLUSION
We propose in this paper a smart phone-based pocket fall accident detection system. The fall detection algorithm is realized
with the proposed state machine that investigates the features in
a sequential manner. Once the corresponding feature is verified
by the current state, it can proceed to next state; otherwise, the
system resets to the initial state and waiting for the appearance
of another feature sequence. To speed up the efficiency of classification process, the early states are composed of simple and
important features that allow a large number of negative samples to be quickly excluded from being regarded as a fall event.
Those complex features are then placed in later states. With the
proposed algorithm, the computational and power consumption
burden of the system can be alleviated. Moreover, a distinguished performance up to 92% on the sensitivity and 99.75%
on the specificity can be obtained when a set of 450 test activities
in nine different kinds of activities are estimated by using the
proposed cascaded classifier with SVM, which demonstrates the
superiority of the proposed approach.
REFERENCES
[1] G. Acampora, D. J. Cook, P. Rashidi, and A. V. Vasilakos, “A Survey
on ambient intelligence in healthcare,” Proc. IEEE, vol. 101, no. 12,
pp. 2470–2494, Dec. 2013.
[2] P. Rashidi and A. Mihailidis, “A survey on ambient-assisted living tools
for older adults,” IEEE J. Biomed. Health Informat., vol. 17, no. 3,
pp. 579–590, May 2013.
[3] M. Mubashir, L. Shao, and L. Seed “A survey on fall detection:Principles
and approaches,” Neurocomputing, vol. 100, no. 16, pp. 144–152, 2013.
[4] T. Shany, S. J. Redmond, M. R. Narayanan, and N. H. Lovell, “SensorsBased wearable systems for monitoring of human movement and falls,”
IEEE Sensors J., vol. 12, no. 3, pp. 658–670, Mar. 2012.
[5] B. Mirmahboub, S. Samavi, N. Karimi, and S. Shirani, “Automatic monocular system for human fall detection based on variations in silhouette area,”
IEEE Trans. Biomed. Eng., vol. 60, no. 2, pp. 427–436, Feb. 2013.
[6] M. Yu, Y. Yu, A. Rhuma, S. M. R. Naqvi, L. Wang, and J. A. Chambers,
“An online one class support vector machine-based person-specific fall
detection system for monitoring an elderly individual in a room environment,” IEEE J. Biomed. Health Informatics, vol. 17, no. 6, pp. 1002–1014,
Nov. 2013.
[7] M. Yu, A. Rhuma, S. M. Naqvi, L. Wang, and J. Chambers, “A posture
recognition-based fall detection system for monitoring an elderly person
in a smart home environment,” IEEE Trans. Inf. Technol. Biomed., vol. 16,
no. 6, pp. 1274–1286, Nov. 2012.
[8] E. Auvinet, F. Multon, A. Saint-Arnaud, J. Rousseau, and J. Meunier, “Fall
detection with multiple cameras: An occlusion-resistant method based on
3-D silhouette vertical distribution,” IEEE Trans. Inf. Technol. Biomed.,
vol. 15, no. 2, pp. 290–300, Mar. 2011.

55

[9] C. Rougier, J. Meunier, A. St-Arnaud, and J. Rousseau, “Robust video
surveillance for fall detection based on human shape deformation,” IEEE
Trans. Circuits Syst. Video Technol., vol. 21, no. 5, pp. 611–622, May
2011.
[10] Y. Li, K. C. Ho, and M. Popescu, “A microphone array system for
automatic fall detection,” IEEE Trans. Biomed. Eng., vol. 59, no. 5,
pp. 1291–1301, May 2012.
[11] A. Ariani, S. J. Redmond, D. Chang, and N. H. Lovell, “Simulated unobtrusive falls detection with multiple persons,” IEEE Trans. Biomed. Eng.,
vol. 59, no. 11, pp. 3185–3196, Nov. 2012.
[12] M. Mercuri, P. J. Soh, G. Pandey, P. Karsmakers, G. A. E. Vandenbosch,
P. Leroux, and D. Schreurs, “Analysis of an indoor biomedical radar-based
system for health monitoring,” IEEE Trans. Microw. Theory Tech., vol. 61,
no. 5, pp. 2061–2068, May 2013.
[13] H. Rimminen, J. Lindström, M. Linnavuo, and R. Sepponen, “Detection
of falls among the elderly by a floor sensor using the electric near field,”
IEEE Trans. Inf. Technol. Biomed., vol. 14, no. 6, pp. 1475–1476, Nov.
2010.
[14] Y. Zigel, D. Litvak, and I. Gannot, “A method for automatic fall detection
of elderly people using floor vibrations and sound-proof of concept on
human mimicking doll falls,” IEEE Trans. Biomed. Eng., vol. 56, no. 12,
pp. 2858–2867, Dec. 2009.
[15] L. Tong, Q. Song, Y. Ge, and M. Liu, “HMM-Based human fall detection
and prediction method using tri-axial accelerometer,” IEEE Sensors J.,
vol. 13, no. 5, pp. 1849–1856, May 2013.
[16] W.-C. Cheng and D.-M. Jhan, “Triaxial accelerometer-based fall detection method using a self-constructing Cascade-AdaBoost-SVM classifier,”
IEEE J. Biomed. Health Informatics, vol. 17, no. 2, pp. 411–419, Mar.
2013.
[17] D. Naranjo-Hernandez, L. M. Roa, J. Reina-Tosina, and M. A. EstudilloValderrama, “Personalization and adaptation to the medium and context
in a fall detection system,” IEEE Trans. Inf. Technol. Biomed., vol. 16,
no. 2, pp. 264–271, Mar. 2012.
[18] T.-C. Chen, “Fall detection and location using ZigBee sensor network,” in
Proc. Cross Strait Quad-Regional Radio Sci. Wireless Technol. Conf., Jul.
26–30, 2011, vol. 2, pp. 937–941.
[19] D. Chen, W. Feng, Y. Zhang, X. Li, and T. Wang, “A wearable wireless
fall detection system with accelerators,” in Proc. IEEE Int. Conf. Robot.
Biomimetics, Dec. 7–11, 2011, pp. 2259–2263.
[20] C.-F. Lai, S.-Y. Chang, H.-C. Chao, and Y.-M. Huang, “Detection of
cognitive injured body region using multiple triaxial accelerometers for
elderly falling,” IEEE Sensors J., vol. 11, no. 3, pp. 763–770, Mar. 2011.
[21] C.-F. Lai, Y.-M. Huang, J. H. Park, and H.-C. Chao, “Adaptive body
posture analysis for elderly-falling detection with multisensors,” IEEE
Intell. Syst., vol. 25, no. 2, pp. 20–30, Mar./Apr. 2010.
[22] G. Wu and S. Xue, “Portable preimpact fall detector with inertial sensors,”
IEEE Trans. Neural Syst. Rehabil. Eng., vol. 16, no. 2, pp. 178–183, Apr.
2008.
[23] J. Y. Hwang, J. M. Kang, Y. W. Jang, and H. C. Kim, “Development
of novel algorithm and real-time monitoring ambulatory system using
Bluetooth module for fall detection in the elderly,” in Proc. 26th Annu.
Int. Conf. IEEE Eng. Med. Biol. Soc., Sep. 1–5, 2004, vol. 1, pp. 2204–
2207.
[24] G. Shi, C.-S. Chan, W.-J. Li, K.-S. Leung, Y. Zou, and Y. Jin, “Mobile
human airbag system for fall protection using MEMS sensors and embedded SVM classifier,” IEEE Sensors J., vol. 9, no. 5, pp. 495–503, May
2009.
[25] G. Lo, S. Gonzalez-Valenzuela, and V. C. M. Leung, “Wireless body area
network node localization using small-scale spatial information,” IEEE J.
Biomed. Health Informatics, vol. 17, no. 3, pp. 715–726, May 2013.
[26] F. Bianchi, S.-J. Redmond, M.-R. Narayanan, S. Cerutti, and N.-H. Lovell,
“Barometric pressure and triaxial accelerometry-based falls event detection,” IEEE Trans. Neural Syst. Rehabil. Eng., vol. 18, no. 6, pp. 619–627,
Dec. 2010.
[27] J. Cheng, X. Chen, and M. Shen, “A framework for daily activity monitoring and fall detection based on surface electromyography and accelerometer signals,” IEEE J. Biomed. Health Informatics, vol. 17, no. 1, pp. 38–45,
Jan. 2013.
[28] MathWorks Mobile Sensor Connectivity Team, “Android Sensor support
from MATLAB,” Sep. 16, 2013.
[29] S. J. Preece, J. Y. Goulermas, L. P. J. Kenney, D. Howard1, K. Meijer,
and R. Crompton, “Activity identification using body-mounted sensorsXa
reviewof classification techniques,” Physiol. Meas., vol. 30, p. R1VR33,
2009.
[30] R. A. Losada, “Practical FIR Filter Design in MATLAB,” Mar. 31, 2003.

56

IEEE JOURNAL OF BIOMEDICAL AND HEALTH INFORMATICS, VOL. 19, NO. 1, JANUARY 2015

[31] R. X. Gao and R. Yan, Wavelets Theory and Applications for Manufacturing. New York, NY, USA: Springer, 2011, pp. 17–32.
[32] S. Mallat, A Wavelet Tour of Signal Processing. 3rd ed. New York, NY,
USA: Academic, Dec. 2008.
[33] Wavelet Toolbox For Use with MATLAB. (1996). [Online]. Available:
http://web.mit.edu/1.130/WebDocs/wavelet_ug.pdf
[34] M. Sekine, T. Tamura, M. Akay, T. Fujimoto, T. Togawa, and Y. Fukui,
“Discrimination of walking patterns using wavelet-based fractal analysis,”
IEEE Trans. Neural Syst. Rehabil. Eng., vol. 10, no. 3, pp. 188–196, Sep.
2002.
[35] C. Cortes and V. Vapnik, “Support-vector networks,” Mach. Learn., vol.
20, pp. 273–297, 1995.
[36] StatSoft, Support Vector Machines (SVM) Introductory Overview.
(2013). [Online]. Available: http://www.statsoft.com/textbook/supportvector-machines
[37] A. Ben-Hur and J. Weston, “A users guide to support vector machines,”
in Data Mining Techniques for the Life Sciences Methods in Molecular
Biology, vol. 609, New York, NY, USA: Humana Press, 2010, pp. 223–
239.
[38] Android Developers. (2014). [Online]. Available: http://developer.
android.com/index.html
[39] Demonstration of the proposed system. (2014). [Online]. Available:
http://www.ntut.edu.tw/˜ljkau/demo/pocketfalldetector.wmv

Lih-Jen Kau (S’05–M’07) was born in Hualien,
Taiwan, 1969. He received the B.S. degree in control engineering and the M.S. and Ph.D. degrees in
electrical and control engineering, all from National
Chiao-Tung University, Hsinchu, Taiwan, in 1991,
1997, and 2008, respectively.
From 1996 to 1998, he was with the Chunghwa
Telecom, Taipei, Taiwan, where he served as a Senior
Technician. In August 1998, he joined the Department of Computer and Communication Engineering,
Dahan Institute of Technology, Hualien, Taiwan, as
an Instructor, and since February 2006, he has been an Assistant Professor at
Dahan. Since August 2009, he has been with the Department of Electronic Engineering (EE), National Taipei University of Technology (NTUT), Taipei. He
is currently an Assistant Professor at EE Department, NTUT. His research interests include multimedia signal processing, image and video coding, biomedical
information and communication technology, and embedded system design.
Dr. Kau received the 2003 ZyXEL Scholarship Award, ZyXEL Comm. Corp.,
Hsinchu, Taiwan.

Chih-Sheng Chen was born in Taichung, Taiwan,
1988. He received the B.S. degree in electronic engineering and the M.S. degree from the Graduate Institute of Computer and Communication Engineering,
both from National Taipei University of Technology,
Taipei, Taiwan, in 2007 and 2013, respectively.
He is currently with the division of Audio Codec,
Realtek, Hsinchu, Taiwan. His research interests include signal processing, parallel computing, and audio circuits design.

